(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function e(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerpolicy&&(s.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?s.credentials="include":i.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=e(i);fetch(i.href,s)}})();/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ea="148",_r={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Nl=0,wa=1,Il=2,gc=1,zl=2,mr=3,mi=0,sn=1,Rr=2,Ur=3,jn=0,Xi=1,Ma=2,Da=3,ba=4,Bl=5,Gi=100,Ol=101,Ul=102,Sa=103,Ea=104,kl=200,Gl=201,Vl=202,Hl=203,vc=204,_c=205,Wl=206,ql=207,Xl=208,Zl=209,jl=210,Yl=0,$l=1,Jl=2,Lo=3,Kl=4,Ql=5,th=6,eh=7,xc=0,nh=1,ih=2,Un=0,rh=1,sh=2,oh=3,ah=4,uh=5,yc=300,$i=301,Ji=302,Ro=303,No=304,As=306,Io=1e3,pn=1001,zo=1002,Ge=1003,Aa=1004,ks=1005,rn=1006,ch=1007,Er=1008,gi=1009,lh=1010,hh=1011,wc=1012,fh=1013,ai=1014,ui=1015,Ar=1016,dh=1017,ph=1018,Zi=1020,mh=1021,gh=1022,mn=1023,vh=1024,_h=1025,hi=1026,Ki=1027,xh=1028,yh=1029,wh=1030,Mh=1031,Dh=1033,Gs=33776,Vs=33777,Hs=33778,Ws=33779,Ca=35840,Ta=35841,Fa=35842,Pa=35843,bh=36196,La=37492,Ra=37496,Na=37808,Ia=37809,za=37810,Ba=37811,Oa=37812,Ua=37813,ka=37814,Ga=37815,Va=37816,Ha=37817,Wa=37818,qa=37819,Xa=37820,Za=37821,ja=36492,vi=3e3,re=3001,Sh=3200,Eh=3201,Mc=0,Ah=1,yn="srgb",Cr="srgb-linear",qs=7680,Ch=519,Ya=35044,$a="300 es",Bo=1035;class Jn{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const s=i.indexOf(e);s!==-1&&i.splice(s,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,t);t.target=null}}}const Ie=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Ja=1234567;const xr=Math.PI/180,ps=180/Math.PI;function Mi(){const r=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Ie[r&255]+Ie[r>>8&255]+Ie[r>>16&255]+Ie[r>>24&255]+"-"+Ie[t&255]+Ie[t>>8&255]+"-"+Ie[t>>16&15|64]+Ie[t>>24&255]+"-"+Ie[e&63|128]+Ie[e>>8&255]+"-"+Ie[e>>16&255]+Ie[e>>24&255]+Ie[n&255]+Ie[n>>8&255]+Ie[n>>16&255]+Ie[n>>24&255]).toLowerCase()}function ze(r,t,e){return Math.max(t,Math.min(e,r))}function na(r,t){return(r%t+t)%t}function Th(r,t,e,n,i){return n+(r-t)*(i-n)/(e-t)}function Fh(r,t,e){return r!==t?(e-r)/(t-r):0}function yr(r,t,e){return(1-e)*r+e*t}function Ph(r,t,e,n){return yr(r,t,1-Math.exp(-e*n))}function Lh(r,t=1){return t-Math.abs(na(r,t*2)-t)}function Rh(r,t,e){return r<=t?0:r>=e?1:(r=(r-t)/(e-t),r*r*(3-2*r))}function Nh(r,t,e){return r<=t?0:r>=e?1:(r=(r-t)/(e-t),r*r*r*(r*(r*6-15)+10))}function Ih(r,t){return r+Math.floor(Math.random()*(t-r+1))}function zh(r,t){return r+Math.random()*(t-r)}function Bh(r){return r*(.5-Math.random())}function Oh(r){r!==void 0&&(Ja=r);let t=Ja+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function Uh(r){return r*xr}function kh(r){return r*ps}function Oo(r){return(r&r-1)===0&&r!==0}function Gh(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function ms(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function Vh(r,t,e,n,i){const s=Math.cos,o=Math.sin,a=s(e/2),l=o(e/2),d=s((t+n)/2),c=o((t+n)/2),u=s((t-n)/2),h=o((t-n)/2),m=s((n-t)/2),g=o((n-t)/2);switch(i){case"XYX":r.set(a*c,l*u,l*h,a*d);break;case"YZY":r.set(l*h,a*c,l*u,a*d);break;case"ZXZ":r.set(l*u,l*h,a*c,a*d);break;case"XZX":r.set(a*c,l*g,l*m,a*d);break;case"YXY":r.set(l*m,a*c,l*g,a*d);break;case"ZYZ":r.set(l*g,l*m,a*c,a*d);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function gr(r,t){switch(t.constructor){case Float32Array:return r;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function We(r,t){switch(t.constructor){case Float32Array:return r;case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}var fe=Object.freeze({__proto__:null,DEG2RAD:xr,RAD2DEG:ps,generateUUID:Mi,clamp:ze,euclideanModulo:na,mapLinear:Th,inverseLerp:Fh,lerp:yr,damp:Ph,pingpong:Lh,smoothstep:Rh,smootherstep:Nh,randInt:Ih,randFloat:zh,randFloatSpread:Bh,seededRandom:Oh,degToRad:Uh,radToDeg:kh,isPowerOfTwo:Oo,ceilPowerOfTwo:Gh,floorPowerOfTwo:ms,setQuaternionFromProperEuler:Vh,normalize:We,denormalize:gr});class Dt{constructor(t=0,e=0){Dt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),s=this.x-t.x,o=this.y-t.y;return this.x=s*n-o*i+t.x,this.y=s*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class De{constructor(){De.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,n,i,s,o,a,l,d){const c=this.elements;return c[0]=t,c[1]=i,c[2]=a,c[3]=e,c[4]=s,c[5]=l,c[6]=n,c[7]=o,c[8]=d,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],a=n[3],l=n[6],d=n[1],c=n[4],u=n[7],h=n[2],m=n[5],g=n[8],f=i[0],p=i[3],v=i[6],M=i[1],_=i[4],w=i[7],D=i[2],b=i[5],C=i[8];return s[0]=o*f+a*M+l*D,s[3]=o*p+a*_+l*b,s[6]=o*v+a*w+l*C,s[1]=d*f+c*M+u*D,s[4]=d*p+c*_+u*b,s[7]=d*v+c*w+u*C,s[2]=h*f+m*M+g*D,s[5]=h*p+m*_+g*b,s[8]=h*v+m*w+g*C,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],d=t[7],c=t[8];return e*o*c-e*a*d-n*s*c+n*a*l+i*s*d-i*o*l}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],d=t[7],c=t[8],u=c*o-a*d,h=a*l-c*s,m=d*s-o*l,g=e*u+n*h+i*m;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const f=1/g;return t[0]=u*f,t[1]=(i*d-c*n)*f,t[2]=(a*n-i*o)*f,t[3]=h*f,t[4]=(c*e-i*l)*f,t[5]=(i*s-a*e)*f,t[6]=m*f,t[7]=(n*l-d*e)*f,t[8]=(o*e-n*s)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,s,o,a){const l=Math.cos(s),d=Math.sin(s);return this.set(n*l,n*d,-n*(l*o+d*a)+o+t,-i*d,i*l,-i*(-d*o+l*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Xs.makeScale(t,e)),this}rotate(t){return this.premultiply(Xs.makeRotation(-t)),this}translate(t,e){return this.premultiply(Xs.makeTranslation(t,e)),this}makeTranslation(t,e){return this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Xs=new De;function Dc(r){for(let t=r.length-1;t>=0;--t)if(r[t]>=65535)return!0;return!1}function gs(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function fi(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function hs(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const Zs={[yn]:{[Cr]:fi},[Cr]:{[yn]:hs}},Ue={legacyMode:!0,get workingColorSpace(){return Cr},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,t,e){if(this.legacyMode||t===e||!t||!e)return r;if(Zs[t]&&Zs[t][e]!==void 0){const n=Zs[t][e];return r.r=n(r.r),r.g=n(r.g),r.b=n(r.b),r}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(r,t){return this.convert(r,this.workingColorSpace,t)},toWorkingColorSpace:function(r,t){return this.convert(r,t,this.workingColorSpace)}},bc={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},we={r:0,g:0,b:0},un={h:0,s:0,l:0},kr={h:0,s:0,l:0};function js(r,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?r+(t-r)*6*e:e<1/2?t:e<2/3?r+(t-r)*6*(2/3-e):r}function Gr(r,t){return t.r=r.r,t.g=r.g,t.b=r.b,t}class Xt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,e===void 0&&n===void 0?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=yn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Ue.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=Ue.workingColorSpace){return this.r=t,this.g=e,this.b=n,Ue.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=Ue.workingColorSpace){if(t=na(t,1),e=ze(e,0,1),n=ze(n,0,1),e===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+e):n+e-n*e,o=2*n-s;this.r=js(o,s,t+1/3),this.g=js(o,s,t),this.b=js(o,s,t-1/3)}return Ue.toWorkingColorSpace(this,i),this}setStyle(t,e=yn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let s;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,Ue.toWorkingColorSpace(this,e),n(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,Ue.toWorkingColorSpace(this,e),n(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(s[1])/360,d=parseFloat(s[2])/100,c=parseFloat(s[3])/100;return n(s[4]),this.setHSL(l,d,c,e)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const s=i[1],o=s.length;if(o===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,Ue.toWorkingColorSpace(this,e),this;if(o===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,Ue.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e=yn){const n=bc[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=fi(t.r),this.g=fi(t.g),this.b=fi(t.b),this}copyLinearToSRGB(t){return this.r=hs(t.r),this.g=hs(t.g),this.b=hs(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=yn){return Ue.fromWorkingColorSpace(Gr(this,we),t),ze(we.r*255,0,255)<<16^ze(we.g*255,0,255)<<8^ze(we.b*255,0,255)<<0}getHexString(t=yn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Ue.workingColorSpace){Ue.fromWorkingColorSpace(Gr(this,we),e);const n=we.r,i=we.g,s=we.b,o=Math.max(n,i,s),a=Math.min(n,i,s);let l,d;const c=(a+o)/2;if(a===o)l=0,d=0;else{const u=o-a;switch(d=c<=.5?u/(o+a):u/(2-o-a),o){case n:l=(i-s)/u+(i<s?6:0);break;case i:l=(s-n)/u+2;break;case s:l=(n-i)/u+4;break}l/=6}return t.h=l,t.s=d,t.l=c,t}getRGB(t,e=Ue.workingColorSpace){return Ue.fromWorkingColorSpace(Gr(this,we),e),t.r=we.r,t.g=we.g,t.b=we.b,t}getStyle(t=yn){return Ue.fromWorkingColorSpace(Gr(this,we),t),t!==yn?`color(${t} ${we.r} ${we.g} ${we.b})`:`rgb(${we.r*255|0},${we.g*255|0},${we.b*255|0})`}offsetHSL(t,e,n){return this.getHSL(un),un.h+=t,un.s+=e,un.l+=n,this.setHSL(un.h,un.s,un.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(un),t.getHSL(kr);const n=yr(un.h,kr.h,e),i=yr(un.s,kr.s,e),s=yr(un.l,kr.l,e);return this.setHSL(n,i,s),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Xt.NAMES=bc;let Si;class Sc{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Si===void 0&&(Si=gs("canvas")),Si.width=t.width,Si.height=t.height;const n=Si.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Si}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=gs("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=fi(s[o]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(fi(e[n]/255)*255):e[n]=fi(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class Ec{constructor(t=null){this.isSource=!0,this.uuid=Mi(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?s.push(Ys(i[o].image)):s.push(Ys(i[o]))}else s=Ys(i);n.url=s}return e||(t.images[this.uuid]=n),n}}function Ys(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Sc.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Hh=0;class Ke extends Jn{constructor(t=Ke.DEFAULT_IMAGE,e=Ke.DEFAULT_MAPPING,n=pn,i=pn,s=rn,o=Er,a=mn,l=gi,d=Ke.DEFAULT_ANISOTROPY,c=vi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Hh++}),this.uuid=Mi(),this.name="",this.source=new Ec(t),this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=d,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Dt(0,0),this.repeat=new Dt(1,1),this.center=new Dt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new De,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==yc)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Io:t.x=t.x-Math.floor(t.x);break;case pn:t.x=t.x<0?0:1;break;case zo:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Io:t.y=t.y-Math.floor(t.y);break;case pn:t.y=t.y<0?0:1;break;case zo:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}Ke.DEFAULT_IMAGE=null;Ke.DEFAULT_MAPPING=yc;Ke.DEFAULT_ANISOTROPY=1;class Re{constructor(t=0,e=0,n=0,i=1){Re.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,s;const l=t.elements,d=l[0],c=l[4],u=l[8],h=l[1],m=l[5],g=l[9],f=l[2],p=l[6],v=l[10];if(Math.abs(c-h)<.01&&Math.abs(u-f)<.01&&Math.abs(g-p)<.01){if(Math.abs(c+h)<.1&&Math.abs(u+f)<.1&&Math.abs(g+p)<.1&&Math.abs(d+m+v-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const _=(d+1)/2,w=(m+1)/2,D=(v+1)/2,b=(c+h)/4,C=(u+f)/4,x=(g+p)/4;return _>w&&_>D?_<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(_),i=b/n,s=C/n):w>D?w<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(w),n=b/i,s=x/i):D<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(D),n=C/s,i=x/s),this.set(n,i,s,e),this}let M=Math.sqrt((p-g)*(p-g)+(u-f)*(u-f)+(h-c)*(h-c));return Math.abs(M)<.001&&(M=1),this.x=(p-g)/M,this.y=(u-f)/M,this.z=(h-c)/M,this.w=Math.acos((d+m+v-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class _i extends Jn{constructor(t=1,e=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Re(0,0,t,e),this.scissorTest=!1,this.viewport=new Re(0,0,t,e);const i={width:t,height:e,depth:1};this.texture=new Ke(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:rn,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(t,e,n=1){(this.width!==t||this.height!==e||this.depth!==n)&&(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new Ec(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ac extends Ke{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ge,this.minFilter=Ge,this.wrapR=pn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Wh extends Ke{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ge,this.minFilter=Ge,this.wrapR=pn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Kn{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,s,o,a){let l=n[i+0],d=n[i+1],c=n[i+2],u=n[i+3];const h=s[o+0],m=s[o+1],g=s[o+2],f=s[o+3];if(a===0){t[e+0]=l,t[e+1]=d,t[e+2]=c,t[e+3]=u;return}if(a===1){t[e+0]=h,t[e+1]=m,t[e+2]=g,t[e+3]=f;return}if(u!==f||l!==h||d!==m||c!==g){let p=1-a;const v=l*h+d*m+c*g+u*f,M=v>=0?1:-1,_=1-v*v;if(_>Number.EPSILON){const D=Math.sqrt(_),b=Math.atan2(D,v*M);p=Math.sin(p*b)/D,a=Math.sin(a*b)/D}const w=a*M;if(l=l*p+h*w,d=d*p+m*w,c=c*p+g*w,u=u*p+f*w,p===1-a){const D=1/Math.sqrt(l*l+d*d+c*c+u*u);l*=D,d*=D,c*=D,u*=D}}t[e]=l,t[e+1]=d,t[e+2]=c,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,i,s,o){const a=n[i],l=n[i+1],d=n[i+2],c=n[i+3],u=s[o],h=s[o+1],m=s[o+2],g=s[o+3];return t[e]=a*g+c*u+l*m-d*h,t[e+1]=l*g+c*h+d*u-a*m,t[e+2]=d*g+c*m+a*h-l*u,t[e+3]=c*g-a*u-l*h-d*m,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const n=t._x,i=t._y,s=t._z,o=t._order,a=Math.cos,l=Math.sin,d=a(n/2),c=a(i/2),u=a(s/2),h=l(n/2),m=l(i/2),g=l(s/2);switch(o){case"XYZ":this._x=h*c*u+d*m*g,this._y=d*m*u-h*c*g,this._z=d*c*g+h*m*u,this._w=d*c*u-h*m*g;break;case"YXZ":this._x=h*c*u+d*m*g,this._y=d*m*u-h*c*g,this._z=d*c*g-h*m*u,this._w=d*c*u+h*m*g;break;case"ZXY":this._x=h*c*u-d*m*g,this._y=d*m*u+h*c*g,this._z=d*c*g+h*m*u,this._w=d*c*u-h*m*g;break;case"ZYX":this._x=h*c*u-d*m*g,this._y=d*m*u+h*c*g,this._z=d*c*g-h*m*u,this._w=d*c*u+h*m*g;break;case"YZX":this._x=h*c*u+d*m*g,this._y=d*m*u+h*c*g,this._z=d*c*g-h*m*u,this._w=d*c*u-h*m*g;break;case"XZY":this._x=h*c*u-d*m*g,this._y=d*m*u-h*c*g,this._z=d*c*g+h*m*u,this._w=d*c*u+h*m*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],s=e[8],o=e[1],a=e[5],l=e[9],d=e[2],c=e[6],u=e[10],h=n+a+u;if(h>0){const m=.5/Math.sqrt(h+1);this._w=.25/m,this._x=(c-l)*m,this._y=(s-d)*m,this._z=(o-i)*m}else if(n>a&&n>u){const m=2*Math.sqrt(1+n-a-u);this._w=(c-l)/m,this._x=.25*m,this._y=(i+o)/m,this._z=(s+d)/m}else if(a>u){const m=2*Math.sqrt(1+a-n-u);this._w=(s-d)/m,this._x=(i+o)/m,this._y=.25*m,this._z=(l+c)/m}else{const m=2*Math.sqrt(1+u-n-a);this._w=(o-i)/m,this._x=(s+d)/m,this._y=(l+c)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(ze(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,s=t._z,o=t._w,a=e._x,l=e._y,d=e._z,c=e._w;return this._x=n*c+o*a+i*d-s*l,this._y=i*c+o*l+s*a-n*d,this._z=s*c+o*d+n*l-i*a,this._w=o*c-n*a-i*l-s*d,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+s*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const m=1-e;return this._w=m*o+e*this._w,this._x=m*n+e*this._x,this._y=m*i+e*this._y,this._z=m*s+e*this._z,this.normalize(),this._onChangeCallback(),this}const d=Math.sqrt(l),c=Math.atan2(d,a),u=Math.sin((1-e)*c)/d,h=Math.sin(e*c)/d;return this._w=o*u+this._w*h,this._x=n*u+this._x*h,this._y=i*u+this._y*h,this._z=s*u+this._z*h,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(s),n*Math.cos(s),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class q{constructor(t=0,e=0,n=0){q.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Ka.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Ka.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6]*i,this.y=s[1]*e+s[4]*n+s[7]*i,this.z=s[2]*e+s[5]*n+s[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=t.elements,o=1/(s[3]*e+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*e+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*e+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*e+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,s=t.x,o=t.y,a=t.z,l=t.w,d=l*e+o*i-a*n,c=l*n+a*e-s*i,u=l*i+s*n-o*e,h=-s*e-o*n-a*i;return this.x=d*l+h*-s+c*-a-u*-o,this.y=c*l+h*-o+u*-s-d*-a,this.z=u*l+h*-a+d*-o-c*-s,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i,this.y=s[1]*e+s[5]*n+s[9]*i,this.z=s[2]*e+s[6]*n+s[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,s=t.z,o=e.x,a=e.y,l=e.z;return this.x=i*l-s*a,this.y=s*o-n*l,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return $s.copy(this).projectOnVector(t),this.sub($s)}reflect(t){return this.sub($s.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(ze(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const $s=new q,Ka=new Kn;class Di{constructor(t=new q(1/0,1/0,1/0),e=new q(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,d=t.length;l<d;l+=3){const c=t[l],u=t[l+1],h=t[l+2];c<e&&(e=c),u<n&&(n=u),h<i&&(i=h),c>s&&(s=c),u>o&&(o=u),h>a&&(a=h)}return this.min.set(e,n,i),this.max.set(s,o,a),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,d=t.count;l<d;l++){const c=t.getX(l),u=t.getY(l),h=t.getZ(l);c<e&&(e=c),u<n&&(n=u),h<i&&(i=h),c>s&&(s=c),u>o&&(o=u),h>a&&(a=h)}return this.min.set(e,n,i),this.max.set(s,o,a),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=ti.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0)if(e&&n.attributes!=null&&n.attributes.position!==void 0){const s=n.attributes.position;for(let o=0,a=s.count;o<a;o++)ti.fromBufferAttribute(s,o).applyMatrix4(t.matrixWorld),this.expandByPoint(ti)}else n.boundingBox===null&&n.computeBoundingBox(),Js.copy(n.boundingBox),Js.applyMatrix4(t.matrixWorld),this.union(Js);const i=t.children;for(let s=0,o=i.length;s<o;s++)this.expandByObject(i[s],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,ti),ti.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ar),Vr.subVectors(this.max,ar),Ei.subVectors(t.a,ar),Ai.subVectors(t.b,ar),Ci.subVectors(t.c,ar),Vn.subVectors(Ai,Ei),Hn.subVectors(Ci,Ai),ei.subVectors(Ei,Ci);let e=[0,-Vn.z,Vn.y,0,-Hn.z,Hn.y,0,-ei.z,ei.y,Vn.z,0,-Vn.x,Hn.z,0,-Hn.x,ei.z,0,-ei.x,-Vn.y,Vn.x,0,-Hn.y,Hn.x,0,-ei.y,ei.x,0];return!Ks(e,Ei,Ai,Ci,Vr)||(e=[1,0,0,0,1,0,0,0,1],!Ks(e,Ei,Ai,Ci,Vr))?!1:(Hr.crossVectors(Vn,Hn),e=[Hr.x,Hr.y,Hr.z],Ks(e,Ei,Ai,Ci,Vr))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return ti.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(ti).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Fn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Fn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Fn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Fn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Fn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Fn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Fn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Fn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Fn),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Fn=[new q,new q,new q,new q,new q,new q,new q,new q],ti=new q,Js=new Di,Ei=new q,Ai=new q,Ci=new q,Vn=new q,Hn=new q,ei=new q,ar=new q,Vr=new q,Hr=new q,ni=new q;function Ks(r,t,e,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){ni.fromArray(r,s);const a=i.x*Math.abs(ni.x)+i.y*Math.abs(ni.y)+i.z*Math.abs(ni.z),l=t.dot(ni),d=e.dot(ni),c=n.dot(ni);if(Math.max(-Math.max(l,d,c),Math.min(l,d,c))>a)return!1}return!0}const qh=new Di,ur=new q,Qs=new q;class Nr{constructor(t=new q,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):qh.setFromPoints(t).getCenter(n);let i=0;for(let s=0,o=t.length;s<o;s++)i=Math.max(i,n.distanceToSquared(t[s]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;ur.subVectors(t,this.center);const e=ur.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(ur,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Qs.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(ur.copy(t.center).add(Qs)),this.expandByPoint(ur.copy(t.center).sub(Qs))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Pn=new q,to=new q,Wr=new q,Wn=new q,eo=new q,qr=new q,no=new q;class ia{constructor(t=new q,e=new q(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Pn)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Pn.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Pn.copy(this.direction).multiplyScalar(e).add(this.origin),Pn.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){to.copy(t).add(e).multiplyScalar(.5),Wr.copy(e).sub(t).normalize(),Wn.copy(this.origin).sub(to);const s=t.distanceTo(e)*.5,o=-this.direction.dot(Wr),a=Wn.dot(this.direction),l=-Wn.dot(Wr),d=Wn.lengthSq(),c=Math.abs(1-o*o);let u,h,m,g;if(c>0)if(u=o*l-a,h=o*a-l,g=s*c,u>=0)if(h>=-g)if(h<=g){const f=1/c;u*=f,h*=f,m=u*(u+o*h+2*a)+h*(o*u+h+2*l)+d}else h=s,u=Math.max(0,-(o*h+a)),m=-u*u+h*(h+2*l)+d;else h=-s,u=Math.max(0,-(o*h+a)),m=-u*u+h*(h+2*l)+d;else h<=-g?(u=Math.max(0,-(-o*s+a)),h=u>0?-s:Math.min(Math.max(-s,-l),s),m=-u*u+h*(h+2*l)+d):h<=g?(u=0,h=Math.min(Math.max(-s,-l),s),m=h*(h+2*l)+d):(u=Math.max(0,-(o*s+a)),h=u>0?s:Math.min(Math.max(-s,-l),s),m=-u*u+h*(h+2*l)+d);else h=o>0?-s:s,u=Math.max(0,-(o*h+a)),m=-u*u+h*(h+2*l)+d;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),i&&i.copy(Wr).multiplyScalar(h).add(to),m}intersectSphere(t,e){Pn.subVectors(t.center,this.origin);const n=Pn.dot(this.direction),i=Pn.dot(Pn)-n*n,s=t.radius*t.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,s,o,a,l;const d=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,h=this.origin;return d>=0?(n=(t.min.x-h.x)*d,i=(t.max.x-h.x)*d):(n=(t.max.x-h.x)*d,i=(t.min.x-h.x)*d),c>=0?(s=(t.min.y-h.y)*c,o=(t.max.y-h.y)*c):(s=(t.max.y-h.y)*c,o=(t.min.y-h.y)*c),n>o||s>i||((s>n||isNaN(n))&&(n=s),(o<i||isNaN(i))&&(i=o),u>=0?(a=(t.min.z-h.z)*u,l=(t.max.z-h.z)*u):(a=(t.max.z-h.z)*u,l=(t.min.z-h.z)*u),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,Pn)!==null}intersectTriangle(t,e,n,i,s){eo.subVectors(e,t),qr.subVectors(n,t),no.crossVectors(eo,qr);let o=this.direction.dot(no),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Wn.subVectors(this.origin,t);const l=a*this.direction.dot(qr.crossVectors(Wn,qr));if(l<0)return null;const d=a*this.direction.dot(eo.cross(Wn));if(d<0||l+d>o)return null;const c=-a*Wn.dot(no);return c<0?null:this.at(c/o,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Jt{constructor(){Jt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,n,i,s,o,a,l,d,c,u,h,m,g,f,p){const v=this.elements;return v[0]=t,v[4]=e,v[8]=n,v[12]=i,v[1]=s,v[5]=o,v[9]=a,v[13]=l,v[2]=d,v[6]=c,v[10]=u,v[14]=h,v[3]=m,v[7]=g,v[11]=f,v[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Jt().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Ti.setFromMatrixColumn(t,0).length(),s=1/Ti.setFromMatrixColumn(t,1).length(),o=1/Ti.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*s,e[5]=n[5]*s,e[6]=n[6]*s,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,s=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),d=Math.sin(i),c=Math.cos(s),u=Math.sin(s);if(t.order==="XYZ"){const h=o*c,m=o*u,g=a*c,f=a*u;e[0]=l*c,e[4]=-l*u,e[8]=d,e[1]=m+g*d,e[5]=h-f*d,e[9]=-a*l,e[2]=f-h*d,e[6]=g+m*d,e[10]=o*l}else if(t.order==="YXZ"){const h=l*c,m=l*u,g=d*c,f=d*u;e[0]=h+f*a,e[4]=g*a-m,e[8]=o*d,e[1]=o*u,e[5]=o*c,e[9]=-a,e[2]=m*a-g,e[6]=f+h*a,e[10]=o*l}else if(t.order==="ZXY"){const h=l*c,m=l*u,g=d*c,f=d*u;e[0]=h-f*a,e[4]=-o*u,e[8]=g+m*a,e[1]=m+g*a,e[5]=o*c,e[9]=f-h*a,e[2]=-o*d,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const h=o*c,m=o*u,g=a*c,f=a*u;e[0]=l*c,e[4]=g*d-m,e[8]=h*d+f,e[1]=l*u,e[5]=f*d+h,e[9]=m*d-g,e[2]=-d,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const h=o*l,m=o*d,g=a*l,f=a*d;e[0]=l*c,e[4]=f-h*u,e[8]=g*u+m,e[1]=u,e[5]=o*c,e[9]=-a*c,e[2]=-d*c,e[6]=m*u+g,e[10]=h-f*u}else if(t.order==="XZY"){const h=o*l,m=o*d,g=a*l,f=a*d;e[0]=l*c,e[4]=-u,e[8]=d*c,e[1]=h*u+f,e[5]=o*c,e[9]=m*u-g,e[2]=g*u-m,e[6]=a*c,e[10]=f*u+h}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Xh,t,Zh)}lookAt(t,e,n){const i=this.elements;return je.subVectors(t,e),je.lengthSq()===0&&(je.z=1),je.normalize(),qn.crossVectors(n,je),qn.lengthSq()===0&&(Math.abs(n.z)===1?je.x+=1e-4:je.z+=1e-4,je.normalize(),qn.crossVectors(n,je)),qn.normalize(),Xr.crossVectors(je,qn),i[0]=qn.x,i[4]=Xr.x,i[8]=je.x,i[1]=qn.y,i[5]=Xr.y,i[9]=je.y,i[2]=qn.z,i[6]=Xr.z,i[10]=je.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],a=n[4],l=n[8],d=n[12],c=n[1],u=n[5],h=n[9],m=n[13],g=n[2],f=n[6],p=n[10],v=n[14],M=n[3],_=n[7],w=n[11],D=n[15],b=i[0],C=i[4],x=i[8],S=i[12],F=i[1],U=i[5],k=i[9],G=i[13],z=i[2],Y=i[6],X=i[10],J=i[14],I=i[3],rt=i[7],tt=i[11],it=i[15];return s[0]=o*b+a*F+l*z+d*I,s[4]=o*C+a*U+l*Y+d*rt,s[8]=o*x+a*k+l*X+d*tt,s[12]=o*S+a*G+l*J+d*it,s[1]=c*b+u*F+h*z+m*I,s[5]=c*C+u*U+h*Y+m*rt,s[9]=c*x+u*k+h*X+m*tt,s[13]=c*S+u*G+h*J+m*it,s[2]=g*b+f*F+p*z+v*I,s[6]=g*C+f*U+p*Y+v*rt,s[10]=g*x+f*k+p*X+v*tt,s[14]=g*S+f*G+p*J+v*it,s[3]=M*b+_*F+w*z+D*I,s[7]=M*C+_*U+w*Y+D*rt,s[11]=M*x+_*k+w*X+D*tt,s[15]=M*S+_*G+w*J+D*it,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],s=t[12],o=t[1],a=t[5],l=t[9],d=t[13],c=t[2],u=t[6],h=t[10],m=t[14],g=t[3],f=t[7],p=t[11],v=t[15];return g*(+s*l*u-i*d*u-s*a*h+n*d*h+i*a*m-n*l*m)+f*(+e*l*m-e*d*h+s*o*h-i*o*m+i*d*c-s*l*c)+p*(+e*d*u-e*a*m-s*o*u+n*o*m+s*a*c-n*d*c)+v*(-i*a*c-e*l*u+e*a*h+i*o*u-n*o*h+n*l*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],d=t[7],c=t[8],u=t[9],h=t[10],m=t[11],g=t[12],f=t[13],p=t[14],v=t[15],M=u*p*d-f*h*d+f*l*m-a*p*m-u*l*v+a*h*v,_=g*h*d-c*p*d-g*l*m+o*p*m+c*l*v-o*h*v,w=c*f*d-g*u*d+g*a*m-o*f*m-c*a*v+o*u*v,D=g*u*l-c*f*l-g*a*h+o*f*h+c*a*p-o*u*p,b=e*M+n*_+i*w+s*D;if(b===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/b;return t[0]=M*C,t[1]=(f*h*s-u*p*s-f*i*m+n*p*m+u*i*v-n*h*v)*C,t[2]=(a*p*s-f*l*s+f*i*d-n*p*d-a*i*v+n*l*v)*C,t[3]=(u*l*s-a*h*s-u*i*d+n*h*d+a*i*m-n*l*m)*C,t[4]=_*C,t[5]=(c*p*s-g*h*s+g*i*m-e*p*m-c*i*v+e*h*v)*C,t[6]=(g*l*s-o*p*s-g*i*d+e*p*d+o*i*v-e*l*v)*C,t[7]=(o*h*s-c*l*s+c*i*d-e*h*d-o*i*m+e*l*m)*C,t[8]=w*C,t[9]=(g*u*s-c*f*s-g*n*m+e*f*m+c*n*v-e*u*v)*C,t[10]=(o*f*s-g*a*s+g*n*d-e*f*d-o*n*v+e*a*v)*C,t[11]=(c*a*s-o*u*s-c*n*d+e*u*d+o*n*m-e*a*m)*C,t[12]=D*C,t[13]=(c*f*i-g*u*i+g*n*h-e*f*h-c*n*p+e*u*p)*C,t[14]=(g*a*i-o*f*i-g*n*l+e*f*l+o*n*p-e*a*p)*C,t[15]=(o*u*i-c*a*i+c*n*l-e*u*l-o*n*h+e*a*h)*C,this}scale(t){const e=this.elements,n=t.x,i=t.y,s=t.z;return e[0]*=n,e[4]*=i,e[8]*=s,e[1]*=n,e[5]*=i,e[9]*=s,e[2]*=n,e[6]*=i,e[10]*=s,e[3]*=n,e[7]*=i,e[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),s=1-n,o=t.x,a=t.y,l=t.z,d=s*o,c=s*a;return this.set(d*o+n,d*a-i*l,d*l+i*a,0,d*a+i*l,c*a+n,c*l-i*o,0,d*l-i*a,c*l+i*o,s*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,s,o){return this.set(1,n,s,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,s=e._x,o=e._y,a=e._z,l=e._w,d=s+s,c=o+o,u=a+a,h=s*d,m=s*c,g=s*u,f=o*c,p=o*u,v=a*u,M=l*d,_=l*c,w=l*u,D=n.x,b=n.y,C=n.z;return i[0]=(1-(f+v))*D,i[1]=(m+w)*D,i[2]=(g-_)*D,i[3]=0,i[4]=(m-w)*b,i[5]=(1-(h+v))*b,i[6]=(p+M)*b,i[7]=0,i[8]=(g+_)*C,i[9]=(p-M)*C,i[10]=(1-(h+f))*C,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let s=Ti.set(i[0],i[1],i[2]).length();const o=Ti.set(i[4],i[5],i[6]).length(),a=Ti.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),t.x=i[12],t.y=i[13],t.z=i[14],cn.copy(this);const d=1/s,c=1/o,u=1/a;return cn.elements[0]*=d,cn.elements[1]*=d,cn.elements[2]*=d,cn.elements[4]*=c,cn.elements[5]*=c,cn.elements[6]*=c,cn.elements[8]*=u,cn.elements[9]*=u,cn.elements[10]*=u,e.setFromRotationMatrix(cn),n.x=s,n.y=o,n.z=a,this}makePerspective(t,e,n,i,s,o){const a=this.elements,l=2*s/(e-t),d=2*s/(n-i),c=(e+t)/(e-t),u=(n+i)/(n-i),h=-(o+s)/(o-s),m=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=d,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=m,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,n,i,s,o){const a=this.elements,l=1/(e-t),d=1/(n-i),c=1/(o-s),u=(e+t)*l,h=(n+i)*d,m=(o+s)*c;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*d,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=-2*c,a[14]=-m,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Ti=new q,cn=new Jt,Xh=new q(0,0,0),Zh=new q(1,1,1),qn=new q,Xr=new q,je=new q,Qa=new Jt,tu=new Kn;class Ir{constructor(t=0,e=0,n=0,i=Ir.DefaultOrder){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,s=i[0],o=i[4],a=i[8],l=i[1],d=i[5],c=i[9],u=i[2],h=i[6],m=i[10];switch(e){case"XYZ":this._y=Math.asin(ze(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,m),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(h,d),this._z=0);break;case"YXZ":this._x=Math.asin(-ze(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,m),this._z=Math.atan2(l,d)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(ze(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-u,m),this._z=Math.atan2(-o,d)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-ze(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(h,m),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,d));break;case"YZX":this._z=Math.asin(ze(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-c,d),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,m));break;case"XZY":this._z=Math.asin(-ze(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(h,d),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-c,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Qa.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Qa,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return tu.setFromEuler(this),this.setFromQuaternion(tu,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}Ir.DefaultOrder="XYZ";Ir.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class ra{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let jh=0;const eu=new q,Fi=new Kn,Ln=new Jt,Zr=new q,cr=new q,Yh=new q,$h=new Kn,nu=new q(1,0,0),iu=new q(0,1,0),ru=new q(0,0,1),Jh={type:"added"},su={type:"removed"};class Te extends Jn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:jh++}),this.uuid=Mi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Te.DefaultUp.clone();const t=new q,e=new Ir,n=new Kn,i=new q(1,1,1);function s(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Jt},normalMatrix:{value:new De}}),this.matrix=new Jt,this.matrixWorld=new Jt,this.matrixAutoUpdate=Te.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Te.DefaultMatrixWorldAutoUpdate,this.layers=new ra,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Fi.setFromAxisAngle(t,e),this.quaternion.multiply(Fi),this}rotateOnWorldAxis(t,e){return Fi.setFromAxisAngle(t,e),this.quaternion.premultiply(Fi),this}rotateX(t){return this.rotateOnAxis(nu,t)}rotateY(t){return this.rotateOnAxis(iu,t)}rotateZ(t){return this.rotateOnAxis(ru,t)}translateOnAxis(t,e){return eu.copy(t).applyQuaternion(this.quaternion),this.position.add(eu.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(nu,t)}translateY(t){return this.translateOnAxis(iu,t)}translateZ(t){return this.translateOnAxis(ru,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Ln.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Zr.copy(t):Zr.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),cr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ln.lookAt(cr,Zr,this.up):Ln.lookAt(Zr,cr,this.up),this.quaternion.setFromRotationMatrix(Ln),i&&(Ln.extractRotation(i.matrixWorld),Fi.setFromRotationMatrix(Ln),this.quaternion.premultiply(Fi.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Jh)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(su)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(su)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),Ln.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Ln.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ln),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e){let n=[];this[t]===e&&n.push(this);for(let i=0,s=this.children.length;i<s;i++){const o=this.children[i].getObjectsByProperty(t,e);o.length>0&&(n=n.concat(o))}return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(cr,t,Yh),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(cr,$h,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++){const s=e[n];(s.matrixWorldAutoUpdate===!0||t===!0)&&s.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++){const a=i[s];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let d=0,c=l.length;d<c;d++){const u=l[d];s(t.shapes,u)}else s(t.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,d=this.material.length;l<d;l++)a.push(s(t.materials,this.material[l]));i.material=a}else i.material=s(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(s(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),d=o(t.textures),c=o(t.images),u=o(t.shapes),h=o(t.skeletons),m=o(t.animations),g=o(t.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),d.length>0&&(n.textures=d),c.length>0&&(n.images=c),u.length>0&&(n.shapes=u),h.length>0&&(n.skeletons=h),m.length>0&&(n.animations=m),g.length>0&&(n.nodes=g)}return n.object=i,n;function o(a){const l=[];for(const d in a){const c=a[d];delete c.metadata,l.push(c)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Te.DefaultUp=new q(0,1,0);Te.DefaultMatrixAutoUpdate=!0;Te.DefaultMatrixWorldAutoUpdate=!0;const ln=new q,Rn=new q,io=new q,Nn=new q,Pi=new q,Li=new q,ou=new q,ro=new q,so=new q,oo=new q;class Bn{constructor(t=new q,e=new q,n=new q){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),ln.subVectors(t,e),i.cross(ln);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(t,e,n,i,s){ln.subVectors(i,e),Rn.subVectors(n,e),io.subVectors(t,e);const o=ln.dot(ln),a=ln.dot(Rn),l=ln.dot(io),d=Rn.dot(Rn),c=Rn.dot(io),u=o*d-a*a;if(u===0)return s.set(-2,-1,-1);const h=1/u,m=(d*l-a*c)*h,g=(o*c-a*l)*h;return s.set(1-m-g,g,m)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Nn),Nn.x>=0&&Nn.y>=0&&Nn.x+Nn.y<=1}static getUV(t,e,n,i,s,o,a,l){return this.getBarycoord(t,e,n,i,Nn),l.set(0,0),l.addScaledVector(s,Nn.x),l.addScaledVector(o,Nn.y),l.addScaledVector(a,Nn.z),l}static isFrontFacing(t,e,n,i){return ln.subVectors(n,e),Rn.subVectors(t,e),ln.cross(Rn).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return ln.subVectors(this.c,this.b),Rn.subVectors(this.a,this.b),ln.cross(Rn).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Bn.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Bn.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,s){return Bn.getUV(t,this.a,this.b,this.c,e,n,i,s)}containsPoint(t){return Bn.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Bn.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,s=this.c;let o,a;Pi.subVectors(i,n),Li.subVectors(s,n),ro.subVectors(t,n);const l=Pi.dot(ro),d=Li.dot(ro);if(l<=0&&d<=0)return e.copy(n);so.subVectors(t,i);const c=Pi.dot(so),u=Li.dot(so);if(c>=0&&u<=c)return e.copy(i);const h=l*u-c*d;if(h<=0&&l>=0&&c<=0)return o=l/(l-c),e.copy(n).addScaledVector(Pi,o);oo.subVectors(t,s);const m=Pi.dot(oo),g=Li.dot(oo);if(g>=0&&m<=g)return e.copy(s);const f=m*d-l*g;if(f<=0&&d>=0&&g<=0)return a=d/(d-g),e.copy(n).addScaledVector(Li,a);const p=c*g-m*u;if(p<=0&&u-c>=0&&m-g>=0)return ou.subVectors(s,i),a=(u-c)/(u-c+(m-g)),e.copy(i).addScaledVector(ou,a);const v=1/(p+f+h);return o=f*v,a=h*v,e.copy(n).addScaledVector(Pi,o).addScaledVector(Li,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Kh=0;class ir extends Jn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Kh++}),this.uuid=Mi(),this.name="",this.type="Material",this.blending=Xi,this.side=mi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=vc,this.blendDst=_c,this.blendEquation=Gi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Lo,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Ch,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=qs,this.stencilZFail=qs,this.stencilZPass=qs,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}const i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Xi&&(n.blending=this.blending),this.side!==mi&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(e){const s=i(t.textures),o=i(t.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=e[s].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class Qi extends ir{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Xt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=xc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const _e=new q,jr=new Dt;class Dn{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=Ya,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)jr.fromBufferAttribute(this,e),jr.applyMatrix3(t),this.setXY(e,jr.x,jr.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)_e.fromBufferAttribute(this,e),_e.applyMatrix3(t),this.setXYZ(e,_e.x,_e.y,_e.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)_e.fromBufferAttribute(this,e),_e.applyMatrix4(t),this.setXYZ(e,_e.x,_e.y,_e.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)_e.fromBufferAttribute(this,e),_e.applyNormalMatrix(t),this.setXYZ(e,_e.x,_e.y,_e.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)_e.fromBufferAttribute(this,e),_e.transformDirection(t),this.setXYZ(e,_e.x,_e.y,_e.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=gr(e,this.array)),e}setX(t,e){return this.normalized&&(e=We(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=gr(e,this.array)),e}setY(t,e){return this.normalized&&(e=We(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=gr(e,this.array)),e}setZ(t,e){return this.normalized&&(e=We(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=gr(e,this.array)),e}setW(t,e){return this.normalized&&(e=We(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=We(e,this.array),n=We(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=We(e,this.array),n=We(n,this.array),i=We(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t*=this.itemSize,this.normalized&&(e=We(e,this.array),n=We(n,this.array),i=We(i,this.array),s=We(s,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=s,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Ya&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Cc extends Dn{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Tc extends Dn{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Qt extends Dn{constructor(t,e,n){super(new Float32Array(t),e,n)}}let Qh=0;const tn=new Jt,ao=new Te,Ri=new q,Ye=new Di,lr=new Di,Ce=new q;class me extends Jn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Qh++}),this.uuid=Mi(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Dc(t)?Tc:Cc)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new De().getNormalMatrix(t);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return tn.makeRotationFromQuaternion(t),this.applyMatrix4(tn),this}rotateX(t){return tn.makeRotationX(t),this.applyMatrix4(tn),this}rotateY(t){return tn.makeRotationY(t),this.applyMatrix4(tn),this}rotateZ(t){return tn.makeRotationZ(t),this.applyMatrix4(tn),this}translate(t,e,n){return tn.makeTranslation(t,e,n),this.applyMatrix4(tn),this}scale(t,e,n){return tn.makeScale(t,e,n),this.applyMatrix4(tn),this}lookAt(t){return ao.lookAt(t),ao.updateMatrix(),this.applyMatrix4(ao.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ri).negate(),this.translate(Ri.x,Ri.y,Ri.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const s=t[n];e.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Qt(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Di);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new q(-1/0,-1/0,-1/0),new q(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const s=e[n];Ye.setFromBufferAttribute(s),this.morphTargetsRelative?(Ce.addVectors(this.boundingBox.min,Ye.min),this.boundingBox.expandByPoint(Ce),Ce.addVectors(this.boundingBox.max,Ye.max),this.boundingBox.expandByPoint(Ce)):(this.boundingBox.expandByPoint(Ye.min),this.boundingBox.expandByPoint(Ye.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Nr);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new q,1/0);return}if(t){const n=this.boundingSphere.center;if(Ye.setFromBufferAttribute(t),e)for(let s=0,o=e.length;s<o;s++){const a=e[s];lr.setFromBufferAttribute(a),this.morphTargetsRelative?(Ce.addVectors(Ye.min,lr.min),Ye.expandByPoint(Ce),Ce.addVectors(Ye.max,lr.max),Ye.expandByPoint(Ce)):(Ye.expandByPoint(lr.min),Ye.expandByPoint(lr.max))}Ye.getCenter(n);let i=0;for(let s=0,o=t.count;s<o;s++)Ce.fromBufferAttribute(t,s),i=Math.max(i,n.distanceToSquared(Ce));if(e)for(let s=0,o=e.length;s<o;s++){const a=e[s],l=this.morphTargetsRelative;for(let d=0,c=a.count;d<c;d++)Ce.fromBufferAttribute(a,d),l&&(Ri.fromBufferAttribute(t,d),Ce.add(Ri)),i=Math.max(i,n.distanceToSquared(Ce))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.array,i=e.position.array,s=e.normal.array,o=e.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Dn(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,d=[],c=[];for(let F=0;F<a;F++)d[F]=new q,c[F]=new q;const u=new q,h=new q,m=new q,g=new Dt,f=new Dt,p=new Dt,v=new q,M=new q;function _(F,U,k){u.fromArray(i,F*3),h.fromArray(i,U*3),m.fromArray(i,k*3),g.fromArray(o,F*2),f.fromArray(o,U*2),p.fromArray(o,k*2),h.sub(u),m.sub(u),f.sub(g),p.sub(g);const G=1/(f.x*p.y-p.x*f.y);isFinite(G)&&(v.copy(h).multiplyScalar(p.y).addScaledVector(m,-f.y).multiplyScalar(G),M.copy(m).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(G),d[F].add(v),d[U].add(v),d[k].add(v),c[F].add(M),c[U].add(M),c[k].add(M))}let w=this.groups;w.length===0&&(w=[{start:0,count:n.length}]);for(let F=0,U=w.length;F<U;++F){const k=w[F],G=k.start,z=k.count;for(let Y=G,X=G+z;Y<X;Y+=3)_(n[Y+0],n[Y+1],n[Y+2])}const D=new q,b=new q,C=new q,x=new q;function S(F){C.fromArray(s,F*3),x.copy(C);const U=d[F];D.copy(U),D.sub(C.multiplyScalar(C.dot(U))).normalize(),b.crossVectors(x,U);const G=b.dot(c[F])<0?-1:1;l[F*4]=D.x,l[F*4+1]=D.y,l[F*4+2]=D.z,l[F*4+3]=G}for(let F=0,U=w.length;F<U;++F){const k=w[F],G=k.start,z=k.count;for(let Y=G,X=G+z;Y<X;Y+=3)S(n[Y+0]),S(n[Y+1]),S(n[Y+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Dn(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let h=0,m=n.count;h<m;h++)n.setXYZ(h,0,0,0);const i=new q,s=new q,o=new q,a=new q,l=new q,d=new q,c=new q,u=new q;if(t)for(let h=0,m=t.count;h<m;h+=3){const g=t.getX(h+0),f=t.getX(h+1),p=t.getX(h+2);i.fromBufferAttribute(e,g),s.fromBufferAttribute(e,f),o.fromBufferAttribute(e,p),c.subVectors(o,s),u.subVectors(i,s),c.cross(u),a.fromBufferAttribute(n,g),l.fromBufferAttribute(n,f),d.fromBufferAttribute(n,p),a.add(c),l.add(c),d.add(c),n.setXYZ(g,a.x,a.y,a.z),n.setXYZ(f,l.x,l.y,l.z),n.setXYZ(p,d.x,d.y,d.z)}else for(let h=0,m=e.count;h<m;h+=3)i.fromBufferAttribute(e,h+0),s.fromBufferAttribute(e,h+1),o.fromBufferAttribute(e,h+2),c.subVectors(o,s),u.subVectors(i,s),c.cross(u),n.setXYZ(h+0,c.x,c.y,c.z),n.setXYZ(h+1,c.x,c.y,c.z),n.setXYZ(h+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Ce.fromBufferAttribute(t,e),Ce.normalize(),t.setXYZ(e,Ce.x,Ce.y,Ce.z)}toNonIndexed(){function t(a,l){const d=a.array,c=a.itemSize,u=a.normalized,h=new d.constructor(l.length*c);let m=0,g=0;for(let f=0,p=l.length;f<p;f++){a.isInterleavedBufferAttribute?m=l[f]*a.data.stride+a.offset:m=l[f]*c;for(let v=0;v<c;v++)h[g++]=d[m++]}return new Dn(h,c,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new me,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],d=t(l,n);e.setAttribute(a,d)}const s=this.morphAttributes;for(const a in s){const l=[],d=s[a];for(let c=0,u=d.length;c<u;c++){const h=d[c],m=t(h,n);l.push(m)}e.morphAttributes[a]=l}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const d=o[a];e.addGroup(d.start,d.count,d.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const d in l)l[d]!==void 0&&(t[d]=l[d]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const d=n[l];t.data.attributes[l]=d.toJSON(t.data)}const i={};let s=!1;for(const l in this.morphAttributes){const d=this.morphAttributes[l],c=[];for(let u=0,h=d.length;u<h;u++){const m=d[u];c.push(m.toJSON(t.data))}c.length>0&&(i[l]=c,s=!0)}s&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const d in i){const c=i[d];this.setAttribute(d,c.clone(e))}const s=t.morphAttributes;for(const d in s){const c=[],u=s[d];for(let h=0,m=u.length;h<m;h++)c.push(u[h].clone(e));this.morphAttributes[d]=c}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let d=0,c=o.length;d<c;d++){const u=o[d];this.addGroup(u.start,u.count,u.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const au=new Jt,Ni=new ia,uo=new Nr,hr=new q,fr=new q,dr=new q,co=new q,Yr=new q,$r=new Dt,Jr=new Dt,Kr=new Dt,lo=new q,Qr=new q;class Ve extends Te{constructor(t=new me,e=new Qi){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,o=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const a=this.morphTargetInfluences;if(s&&a){Yr.set(0,0,0);for(let l=0,d=s.length;l<d;l++){const c=a[l],u=s[l];c!==0&&(co.fromBufferAttribute(u,t),o?Yr.addScaledVector(co,c):Yr.addScaledVector(co.sub(e),c))}e.add(Yr)}return this.isSkinnedMesh&&this.boneTransform(t,e),e}raycast(t,e){const n=this.geometry,i=this.material,s=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),uo.copy(n.boundingSphere),uo.applyMatrix4(s),t.ray.intersectsSphere(uo)===!1)||(au.copy(s).invert(),Ni.copy(t.ray).applyMatrix4(au),n.boundingBox!==null&&Ni.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,l=n.attributes.position,d=n.attributes.uv,c=n.attributes.uv2,u=n.groups,h=n.drawRange;if(a!==null)if(Array.isArray(i))for(let m=0,g=u.length;m<g;m++){const f=u[m],p=i[f.materialIndex],v=Math.max(f.start,h.start),M=Math.min(a.count,Math.min(f.start+f.count,h.start+h.count));for(let _=v,w=M;_<w;_+=3){const D=a.getX(_),b=a.getX(_+1),C=a.getX(_+2);o=ts(this,p,t,Ni,d,c,D,b,C),o&&(o.faceIndex=Math.floor(_/3),o.face.materialIndex=f.materialIndex,e.push(o))}}else{const m=Math.max(0,h.start),g=Math.min(a.count,h.start+h.count);for(let f=m,p=g;f<p;f+=3){const v=a.getX(f),M=a.getX(f+1),_=a.getX(f+2);o=ts(this,i,t,Ni,d,c,v,M,_),o&&(o.faceIndex=Math.floor(f/3),e.push(o))}}else if(l!==void 0)if(Array.isArray(i))for(let m=0,g=u.length;m<g;m++){const f=u[m],p=i[f.materialIndex],v=Math.max(f.start,h.start),M=Math.min(l.count,Math.min(f.start+f.count,h.start+h.count));for(let _=v,w=M;_<w;_+=3){const D=_,b=_+1,C=_+2;o=ts(this,p,t,Ni,d,c,D,b,C),o&&(o.faceIndex=Math.floor(_/3),o.face.materialIndex=f.materialIndex,e.push(o))}}else{const m=Math.max(0,h.start),g=Math.min(l.count,h.start+h.count);for(let f=m,p=g;f<p;f+=3){const v=f,M=f+1,_=f+2;o=ts(this,i,t,Ni,d,c,v,M,_),o&&(o.faceIndex=Math.floor(f/3),e.push(o))}}}}function tf(r,t,e,n,i,s,o,a){let l;if(t.side===sn?l=n.intersectTriangle(o,s,i,!0,a):l=n.intersectTriangle(i,s,o,t.side===mi,a),l===null)return null;Qr.copy(a),Qr.applyMatrix4(r.matrixWorld);const d=e.ray.origin.distanceTo(Qr);return d<e.near||d>e.far?null:{distance:d,point:Qr.clone(),object:r}}function ts(r,t,e,n,i,s,o,a,l){r.getVertexPosition(o,hr),r.getVertexPosition(a,fr),r.getVertexPosition(l,dr);const d=tf(r,t,e,n,hr,fr,dr,lo);if(d){i&&($r.fromBufferAttribute(i,o),Jr.fromBufferAttribute(i,a),Kr.fromBufferAttribute(i,l),d.uv=Bn.getUV(lo,hr,fr,dr,$r,Jr,Kr,new Dt)),s&&($r.fromBufferAttribute(s,o),Jr.fromBufferAttribute(s,a),Kr.fromBufferAttribute(s,l),d.uv2=Bn.getUV(lo,hr,fr,dr,$r,Jr,Kr,new Dt));const c={a:o,b:a,c:l,normal:new q,materialIndex:0};Bn.getNormal(hr,fr,dr,c.normal),d.face=c}return d}class zr extends me{constructor(t=1,e=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const l=[],d=[],c=[],u=[];let h=0,m=0;g("z","y","x",-1,-1,n,e,t,o,s,0),g("z","y","x",1,-1,n,e,-t,o,s,1),g("x","z","y",1,1,t,n,e,i,o,2),g("x","z","y",1,-1,t,n,-e,i,o,3),g("x","y","z",1,-1,t,e,n,i,s,4),g("x","y","z",-1,-1,t,e,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new Qt(d,3)),this.setAttribute("normal",new Qt(c,3)),this.setAttribute("uv",new Qt(u,2));function g(f,p,v,M,_,w,D,b,C,x,S){const F=w/C,U=D/x,k=w/2,G=D/2,z=b/2,Y=C+1,X=x+1;let J=0,I=0;const rt=new q;for(let tt=0;tt<X;tt++){const it=tt*U-G;for(let et=0;et<Y;et++){const vt=et*F-k;rt[f]=vt*M,rt[p]=it*_,rt[v]=z,d.push(rt.x,rt.y,rt.z),rt[f]=0,rt[p]=0,rt[v]=b>0?1:-1,c.push(rt.x,rt.y,rt.z),u.push(et/C),u.push(1-tt/x),J+=1}}for(let tt=0;tt<x;tt++)for(let it=0;it<C;it++){const et=h+it+Y*tt,vt=h+it+Y*(tt+1),B=h+(it+1)+Y*(tt+1),L=h+(it+1)+Y*tt;l.push(et,vt,L),l.push(vt,B,L),I+=6}a.addGroup(m,I,S),m+=I,h+=J}}static fromJSON(t){return new zr(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function tr(r){const t={};for(const e in r){t[e]={};for(const n in r[e]){const i=r[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function ke(r){const t={};for(let e=0;e<r.length;e++){const n=tr(r[e]);for(const i in n)t[i]=n[i]}return t}function ef(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e].clone());return t}function Fc(r){return r.getRenderTarget()===null&&r.outputEncoding===re?yn:Cr}const nf={clone:tr,merge:ke};var rf=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,sf=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class xi extends ir{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=rf,this.fragmentShader=sf,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=tr(t.uniforms),this.uniformsGroups=ef(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?e.uniforms[i]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[i]={type:"m4",value:o.toArray()}:e.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class Pc extends Te{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Jt,this.projectionMatrix=new Jt,this.projectionMatrixInverse=new Jt}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Je extends Pc{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=ps*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(xr*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return ps*2*Math.atan(Math.tan(xr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,s,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(xr*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,d=o.fullHeight;s+=o.offsetX*i/l,e-=o.offsetY*n/d,i*=o.width/l,n*=o.height/d}const a=this.filmOffset;a!==0&&(s+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const Ii=-90,zi=1;class of extends Te{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new Je(Ii,zi,t,e);i.layers=this.layers,i.up.set(0,1,0),i.lookAt(1,0,0),this.add(i);const s=new Je(Ii,zi,t,e);s.layers=this.layers,s.up.set(0,1,0),s.lookAt(-1,0,0),this.add(s);const o=new Je(Ii,zi,t,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(0,1,0),this.add(o);const a=new Je(Ii,zi,t,e);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(0,-1,0),this.add(a);const l=new Je(Ii,zi,t,e);l.layers=this.layers,l.up.set(0,1,0),l.lookAt(0,0,1),this.add(l);const d=new Je(Ii,zi,t,e);d.layers=this.layers,d.up.set(0,1,0),d.lookAt(0,0,-1),this.add(d)}update(t,e){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,o,a,l,d]=this.children,c=t.getRenderTarget(),u=t.toneMapping,h=t.xr.enabled;t.toneMapping=Un,t.xr.enabled=!1;const m=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,s),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=m,t.setRenderTarget(n,5),t.render(e,d),t.setRenderTarget(c),t.toneMapping=u,t.xr.enabled=h,n.texture.needsPMREMUpdate=!0}}class Lc extends Ke{constructor(t,e,n,i,s,o,a,l,d,c){t=t!==void 0?t:[],e=e!==void 0?e:$i,super(t,e,n,i,s,o,a,l,d,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class af extends _i{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new Lc(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:rn}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new zr(5,5,5),s=new xi({name:"CubemapFromEquirect",uniforms:tr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:sn,blending:jn});s.uniforms.tEquirect.value=e;const o=new Ve(i,s),a=e.minFilter;return e.minFilter===Er&&(e.minFilter=rn),new of(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const s=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,i);t.setRenderTarget(s)}}const ho=new q,uf=new q,cf=new De;class ri{constructor(t=new q(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=ho.subVectors(n,e).cross(uf.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(ho),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const s=-(t.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:e.copy(n).multiplyScalar(s).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||cf.getNormalMatrix(t),i=this.coplanarPoint(ho).applyMatrix4(t),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Bi=new Nr,es=new q;class Rc{constructor(t=new ri,e=new ri,n=new ri,i=new ri,s=new ri,o=new ri){this.planes=[t,e,n,i,s,o]}set(t,e,n,i,s,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],s=n[1],o=n[2],a=n[3],l=n[4],d=n[5],c=n[6],u=n[7],h=n[8],m=n[9],g=n[10],f=n[11],p=n[12],v=n[13],M=n[14],_=n[15];return e[0].setComponents(a-i,u-l,f-h,_-p).normalize(),e[1].setComponents(a+i,u+l,f+h,_+p).normalize(),e[2].setComponents(a+s,u+d,f+m,_+v).normalize(),e[3].setComponents(a-s,u-d,f-m,_-v).normalize(),e[4].setComponents(a-o,u-c,f-g,_-M).normalize(),e[5].setComponents(a+o,u+c,f+g,_+M).normalize(),this}intersectsObject(t){const e=t.geometry;return e.boundingSphere===null&&e.computeBoundingSphere(),Bi.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Bi)}intersectsSprite(t){return Bi.center.set(0,0,0),Bi.radius=.7071067811865476,Bi.applyMatrix4(t.matrixWorld),this.intersectsSphere(Bi)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let s=0;s<6;s++)if(e[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(es.x=i.normal.x>0?t.max.x:t.min.x,es.y=i.normal.y>0?t.max.y:t.min.y,es.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(es)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Nc(){let r=null,t=!1,e=null,n=null;function i(s,o){e(s,o),n=r.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=r.requestAnimationFrame(i),t=!0)},stop:function(){r.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(s){e=s},setContext:function(s){r=s}}}function lf(r,t){const e=t.isWebGL2,n=new WeakMap;function i(d,c){const u=d.array,h=d.usage,m=r.createBuffer();r.bindBuffer(c,m),r.bufferData(c,u,h),d.onUploadCallback();let g;if(u instanceof Float32Array)g=5126;else if(u instanceof Uint16Array)if(d.isFloat16BufferAttribute)if(e)g=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=5123;else if(u instanceof Int16Array)g=5122;else if(u instanceof Uint32Array)g=5125;else if(u instanceof Int32Array)g=5124;else if(u instanceof Int8Array)g=5120;else if(u instanceof Uint8Array)g=5121;else if(u instanceof Uint8ClampedArray)g=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:m,type:g,bytesPerElement:u.BYTES_PER_ELEMENT,version:d.version}}function s(d,c,u){const h=c.array,m=c.updateRange;r.bindBuffer(u,d),m.count===-1?r.bufferSubData(u,0,h):(e?r.bufferSubData(u,m.offset*h.BYTES_PER_ELEMENT,h,m.offset,m.count):r.bufferSubData(u,m.offset*h.BYTES_PER_ELEMENT,h.subarray(m.offset,m.offset+m.count)),m.count=-1),c.onUploadCallback()}function o(d){return d.isInterleavedBufferAttribute&&(d=d.data),n.get(d)}function a(d){d.isInterleavedBufferAttribute&&(d=d.data);const c=n.get(d);c&&(r.deleteBuffer(c.buffer),n.delete(d))}function l(d,c){if(d.isGLBufferAttribute){const h=n.get(d);(!h||h.version<d.version)&&n.set(d,{buffer:d.buffer,type:d.type,bytesPerElement:d.elementSize,version:d.version});return}d.isInterleavedBufferAttribute&&(d=d.data);const u=n.get(d);u===void 0?n.set(d,i(d,c)):u.version<d.version&&(s(u.buffer,d,c),u.version=d.version)}return{get:o,remove:a,update:l}}class sa extends me{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const s=t/2,o=e/2,a=Math.floor(n),l=Math.floor(i),d=a+1,c=l+1,u=t/a,h=e/l,m=[],g=[],f=[],p=[];for(let v=0;v<c;v++){const M=v*h-o;for(let _=0;_<d;_++){const w=_*u-s;g.push(w,-M,0),f.push(0,0,1),p.push(_/a),p.push(1-v/l)}}for(let v=0;v<l;v++)for(let M=0;M<a;M++){const _=M+d*v,w=M+d*(v+1),D=M+1+d*(v+1),b=M+1+d*v;m.push(_,w,b),m.push(w,D,b)}this.setIndex(m),this.setAttribute("position",new Qt(g,3)),this.setAttribute("normal",new Qt(f,3)),this.setAttribute("uv",new Qt(p,2))}static fromJSON(t){return new sa(t.width,t.height,t.widthSegments,t.heightSegments)}}var hf=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,ff=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,df=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,pf=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,mf=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,gf=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,vf="vec3 transformed = vec3( position );",_f=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,xf=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,yf=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,wf=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Mf=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Df=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,bf=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Sf=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Ef=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Af=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Cf=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Tf=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Ff=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Pf=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Lf=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Rf=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Nf=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,If=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,zf=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Bf="gl_FragColor = linearToOutputTexel( gl_FragColor );",Of=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Uf=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,kf=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Gf=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Vf=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Hf=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Wf=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,qf=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Xf=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Zf=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,jf=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Yf=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,$f=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Jf=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Kf=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Qf=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,td=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,ed=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,nd=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,id=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,rd=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,sd=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,od=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,ad=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,ud=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,cd=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,ld=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,hd=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,fd=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,dd=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,pd=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,md=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,gd=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,vd=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,_d=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,xd=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,yd=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,wd=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Md=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Dd=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,bd=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Sd=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Ed=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Ad=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Cd=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Td=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,Fd=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Pd=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Ld=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Rd=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Nd=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Id=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,zd=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Bd=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Od=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Ud=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,kd=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Gd=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Vd=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Hd=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Wd=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,qd=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Xd=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Zd=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,jd=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Yd=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,$d=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Jd=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Kd=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Qd=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,tp=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,ep=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,np=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,ip=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,rp=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,sp=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,op=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,ap=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,up=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const cp=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,lp=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,hp=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,fp=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,dp=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,pp=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,mp=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,gp=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,vp=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,_p=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,xp=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,yp=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,wp=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Mp=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Dp=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,bp=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Sp=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ep=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ap=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Cp=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Tp=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Fp=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Pp=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Lp=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Rp=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Np=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ip=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,zp=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Bp=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Op=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Up=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,kp=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Gp=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Vp=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Ht={alphamap_fragment:hf,alphamap_pars_fragment:ff,alphatest_fragment:df,alphatest_pars_fragment:pf,aomap_fragment:mf,aomap_pars_fragment:gf,begin_vertex:vf,beginnormal_vertex:_f,bsdfs:xf,iridescence_fragment:yf,bumpmap_pars_fragment:wf,clipping_planes_fragment:Mf,clipping_planes_pars_fragment:Df,clipping_planes_pars_vertex:bf,clipping_planes_vertex:Sf,color_fragment:Ef,color_pars_fragment:Af,color_pars_vertex:Cf,color_vertex:Tf,common:Ff,cube_uv_reflection_fragment:Pf,defaultnormal_vertex:Lf,displacementmap_pars_vertex:Rf,displacementmap_vertex:Nf,emissivemap_fragment:If,emissivemap_pars_fragment:zf,encodings_fragment:Bf,encodings_pars_fragment:Of,envmap_fragment:Uf,envmap_common_pars_fragment:kf,envmap_pars_fragment:Gf,envmap_pars_vertex:Vf,envmap_physical_pars_fragment:td,envmap_vertex:Hf,fog_vertex:Wf,fog_pars_vertex:qf,fog_fragment:Xf,fog_pars_fragment:Zf,gradientmap_pars_fragment:jf,lightmap_fragment:Yf,lightmap_pars_fragment:$f,lights_lambert_fragment:Jf,lights_lambert_pars_fragment:Kf,lights_pars_begin:Qf,lights_toon_fragment:ed,lights_toon_pars_fragment:nd,lights_phong_fragment:id,lights_phong_pars_fragment:rd,lights_physical_fragment:sd,lights_physical_pars_fragment:od,lights_fragment_begin:ad,lights_fragment_maps:ud,lights_fragment_end:cd,logdepthbuf_fragment:ld,logdepthbuf_pars_fragment:hd,logdepthbuf_pars_vertex:fd,logdepthbuf_vertex:dd,map_fragment:pd,map_pars_fragment:md,map_particle_fragment:gd,map_particle_pars_fragment:vd,metalnessmap_fragment:_d,metalnessmap_pars_fragment:xd,morphcolor_vertex:yd,morphnormal_vertex:wd,morphtarget_pars_vertex:Md,morphtarget_vertex:Dd,normal_fragment_begin:bd,normal_fragment_maps:Sd,normal_pars_fragment:Ed,normal_pars_vertex:Ad,normal_vertex:Cd,normalmap_pars_fragment:Td,clearcoat_normal_fragment_begin:Fd,clearcoat_normal_fragment_maps:Pd,clearcoat_pars_fragment:Ld,iridescence_pars_fragment:Rd,output_fragment:Nd,packing:Id,premultiplied_alpha_fragment:zd,project_vertex:Bd,dithering_fragment:Od,dithering_pars_fragment:Ud,roughnessmap_fragment:kd,roughnessmap_pars_fragment:Gd,shadowmap_pars_fragment:Vd,shadowmap_pars_vertex:Hd,shadowmap_vertex:Wd,shadowmask_pars_fragment:qd,skinbase_vertex:Xd,skinning_pars_vertex:Zd,skinning_vertex:jd,skinnormal_vertex:Yd,specularmap_fragment:$d,specularmap_pars_fragment:Jd,tonemapping_fragment:Kd,tonemapping_pars_fragment:Qd,transmission_fragment:tp,transmission_pars_fragment:ep,uv_pars_fragment:np,uv_pars_vertex:ip,uv_vertex:rp,uv2_pars_fragment:sp,uv2_pars_vertex:op,uv2_vertex:ap,worldpos_vertex:up,background_vert:cp,background_frag:lp,backgroundCube_vert:hp,backgroundCube_frag:fp,cube_vert:dp,cube_frag:pp,depth_vert:mp,depth_frag:gp,distanceRGBA_vert:vp,distanceRGBA_frag:_p,equirect_vert:xp,equirect_frag:yp,linedashed_vert:wp,linedashed_frag:Mp,meshbasic_vert:Dp,meshbasic_frag:bp,meshlambert_vert:Sp,meshlambert_frag:Ep,meshmatcap_vert:Ap,meshmatcap_frag:Cp,meshnormal_vert:Tp,meshnormal_frag:Fp,meshphong_vert:Pp,meshphong_frag:Lp,meshphysical_vert:Rp,meshphysical_frag:Np,meshtoon_vert:Ip,meshtoon_frag:zp,points_vert:Bp,points_frag:Op,shadow_vert:Up,shadow_frag:kp,sprite_vert:Gp,sprite_frag:Vp},At={common:{diffuse:{value:new Xt(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new De},uv2Transform:{value:new De},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Dt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Xt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Xt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new De}},sprite:{diffuse:{value:new Xt(16777215)},opacity:{value:1},center:{value:new Dt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new De}}},wn={basic:{uniforms:ke([At.common,At.specularmap,At.envmap,At.aomap,At.lightmap,At.fog]),vertexShader:Ht.meshbasic_vert,fragmentShader:Ht.meshbasic_frag},lambert:{uniforms:ke([At.common,At.specularmap,At.envmap,At.aomap,At.lightmap,At.emissivemap,At.bumpmap,At.normalmap,At.displacementmap,At.fog,At.lights,{emissive:{value:new Xt(0)}}]),vertexShader:Ht.meshlambert_vert,fragmentShader:Ht.meshlambert_frag},phong:{uniforms:ke([At.common,At.specularmap,At.envmap,At.aomap,At.lightmap,At.emissivemap,At.bumpmap,At.normalmap,At.displacementmap,At.fog,At.lights,{emissive:{value:new Xt(0)},specular:{value:new Xt(1118481)},shininess:{value:30}}]),vertexShader:Ht.meshphong_vert,fragmentShader:Ht.meshphong_frag},standard:{uniforms:ke([At.common,At.envmap,At.aomap,At.lightmap,At.emissivemap,At.bumpmap,At.normalmap,At.displacementmap,At.roughnessmap,At.metalnessmap,At.fog,At.lights,{emissive:{value:new Xt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ht.meshphysical_vert,fragmentShader:Ht.meshphysical_frag},toon:{uniforms:ke([At.common,At.aomap,At.lightmap,At.emissivemap,At.bumpmap,At.normalmap,At.displacementmap,At.gradientmap,At.fog,At.lights,{emissive:{value:new Xt(0)}}]),vertexShader:Ht.meshtoon_vert,fragmentShader:Ht.meshtoon_frag},matcap:{uniforms:ke([At.common,At.bumpmap,At.normalmap,At.displacementmap,At.fog,{matcap:{value:null}}]),vertexShader:Ht.meshmatcap_vert,fragmentShader:Ht.meshmatcap_frag},points:{uniforms:ke([At.points,At.fog]),vertexShader:Ht.points_vert,fragmentShader:Ht.points_frag},dashed:{uniforms:ke([At.common,At.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ht.linedashed_vert,fragmentShader:Ht.linedashed_frag},depth:{uniforms:ke([At.common,At.displacementmap]),vertexShader:Ht.depth_vert,fragmentShader:Ht.depth_frag},normal:{uniforms:ke([At.common,At.bumpmap,At.normalmap,At.displacementmap,{opacity:{value:1}}]),vertexShader:Ht.meshnormal_vert,fragmentShader:Ht.meshnormal_frag},sprite:{uniforms:ke([At.sprite,At.fog]),vertexShader:Ht.sprite_vert,fragmentShader:Ht.sprite_frag},background:{uniforms:{uvTransform:{value:new De},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ht.background_vert,fragmentShader:Ht.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Ht.backgroundCube_vert,fragmentShader:Ht.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ht.cube_vert,fragmentShader:Ht.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ht.equirect_vert,fragmentShader:Ht.equirect_frag},distanceRGBA:{uniforms:ke([At.common,At.displacementmap,{referencePosition:{value:new q},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ht.distanceRGBA_vert,fragmentShader:Ht.distanceRGBA_frag},shadow:{uniforms:ke([At.lights,At.fog,{color:{value:new Xt(0)},opacity:{value:1}}]),vertexShader:Ht.shadow_vert,fragmentShader:Ht.shadow_frag}};wn.physical={uniforms:ke([wn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Dt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Xt(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Dt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Xt(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Xt(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ht.meshphysical_vert,fragmentShader:Ht.meshphysical_frag};const ns={r:0,b:0,g:0};function Hp(r,t,e,n,i,s,o){const a=new Xt(0);let l=s===!0?0:1,d,c,u=null,h=0,m=null;function g(p,v){let M=!1,_=v.isScene===!0?v.background:null;_&&_.isTexture&&(_=(v.backgroundBlurriness>0?e:t).get(_));const w=r.xr,D=w.getSession&&w.getSession();D&&D.environmentBlendMode==="additive"&&(_=null),_===null?f(a,l):_&&_.isColor&&(f(_,1),M=!0),(r.autoClear||M)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),_&&(_.isCubeTexture||_.mapping===As)?(c===void 0&&(c=new Ve(new zr(1,1,1),new xi({name:"BackgroundCubeMaterial",uniforms:tr(wn.backgroundCube.uniforms),vertexShader:wn.backgroundCube.vertexShader,fragmentShader:wn.backgroundCube.fragmentShader,side:sn,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(b,C,x){this.matrixWorld.copyPosition(x.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),c.material.uniforms.envMap.value=_,c.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,c.material.uniforms.backgroundBlurriness.value=v.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,c.material.toneMapped=_.encoding!==re,(u!==_||h!==_.version||m!==r.toneMapping)&&(c.material.needsUpdate=!0,u=_,h=_.version,m=r.toneMapping),c.layers.enableAll(),p.unshift(c,c.geometry,c.material,0,0,null)):_&&_.isTexture&&(d===void 0&&(d=new Ve(new sa(2,2),new xi({name:"BackgroundMaterial",uniforms:tr(wn.background.uniforms),vertexShader:wn.background.vertexShader,fragmentShader:wn.background.fragmentShader,side:mi,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),Object.defineProperty(d.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(d)),d.material.uniforms.t2D.value=_,d.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,d.material.toneMapped=_.encoding!==re,_.matrixAutoUpdate===!0&&_.updateMatrix(),d.material.uniforms.uvTransform.value.copy(_.matrix),(u!==_||h!==_.version||m!==r.toneMapping)&&(d.material.needsUpdate=!0,u=_,h=_.version,m=r.toneMapping),d.layers.enableAll(),p.unshift(d,d.geometry,d.material,0,0,null))}function f(p,v){p.getRGB(ns,Fc(r)),n.buffers.color.setClear(ns.r,ns.g,ns.b,v,o)}return{getClearColor:function(){return a},setClearColor:function(p,v=1){a.set(p),l=v,f(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(p){l=p,f(a,l)},render:g}}function Wp(r,t,e,n){const i=r.getParameter(34921),s=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},l=p(null);let d=l,c=!1;function u(z,Y,X,J,I){let rt=!1;if(o){const tt=f(J,X,Y);d!==tt&&(d=tt,m(d.object)),rt=v(z,J,X,I),rt&&M(z,J,X,I)}else{const tt=Y.wireframe===!0;(d.geometry!==J.id||d.program!==X.id||d.wireframe!==tt)&&(d.geometry=J.id,d.program=X.id,d.wireframe=tt,rt=!0)}I!==null&&e.update(I,34963),(rt||c)&&(c=!1,x(z,Y,X,J),I!==null&&r.bindBuffer(34963,e.get(I).buffer))}function h(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function m(z){return n.isWebGL2?r.bindVertexArray(z):s.bindVertexArrayOES(z)}function g(z){return n.isWebGL2?r.deleteVertexArray(z):s.deleteVertexArrayOES(z)}function f(z,Y,X){const J=X.wireframe===!0;let I=a[z.id];I===void 0&&(I={},a[z.id]=I);let rt=I[Y.id];rt===void 0&&(rt={},I[Y.id]=rt);let tt=rt[J];return tt===void 0&&(tt=p(h()),rt[J]=tt),tt}function p(z){const Y=[],X=[],J=[];for(let I=0;I<i;I++)Y[I]=0,X[I]=0,J[I]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:Y,enabledAttributes:X,attributeDivisors:J,object:z,attributes:{},index:null}}function v(z,Y,X,J){const I=d.attributes,rt=Y.attributes;let tt=0;const it=X.getAttributes();for(const et in it)if(it[et].location>=0){const B=I[et];let L=rt[et];if(L===void 0&&(et==="instanceMatrix"&&z.instanceMatrix&&(L=z.instanceMatrix),et==="instanceColor"&&z.instanceColor&&(L=z.instanceColor)),B===void 0||B.attribute!==L||L&&B.data!==L.data)return!0;tt++}return d.attributesNum!==tt||d.index!==J}function M(z,Y,X,J){const I={},rt=Y.attributes;let tt=0;const it=X.getAttributes();for(const et in it)if(it[et].location>=0){let B=rt[et];B===void 0&&(et==="instanceMatrix"&&z.instanceMatrix&&(B=z.instanceMatrix),et==="instanceColor"&&z.instanceColor&&(B=z.instanceColor));const L={};L.attribute=B,B&&B.data&&(L.data=B.data),I[et]=L,tt++}d.attributes=I,d.attributesNum=tt,d.index=J}function _(){const z=d.newAttributes;for(let Y=0,X=z.length;Y<X;Y++)z[Y]=0}function w(z){D(z,0)}function D(z,Y){const X=d.newAttributes,J=d.enabledAttributes,I=d.attributeDivisors;X[z]=1,J[z]===0&&(r.enableVertexAttribArray(z),J[z]=1),I[z]!==Y&&((n.isWebGL2?r:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](z,Y),I[z]=Y)}function b(){const z=d.newAttributes,Y=d.enabledAttributes;for(let X=0,J=Y.length;X<J;X++)Y[X]!==z[X]&&(r.disableVertexAttribArray(X),Y[X]=0)}function C(z,Y,X,J,I,rt){n.isWebGL2===!0&&(X===5124||X===5125)?r.vertexAttribIPointer(z,Y,X,I,rt):r.vertexAttribPointer(z,Y,X,J,I,rt)}function x(z,Y,X,J){if(n.isWebGL2===!1&&(z.isInstancedMesh||J.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;_();const I=J.attributes,rt=X.getAttributes(),tt=Y.defaultAttributeValues;for(const it in rt){const et=rt[it];if(et.location>=0){let vt=I[it];if(vt===void 0&&(it==="instanceMatrix"&&z.instanceMatrix&&(vt=z.instanceMatrix),it==="instanceColor"&&z.instanceColor&&(vt=z.instanceColor)),vt!==void 0){const B=vt.normalized,L=vt.itemSize,A=e.get(vt);if(A===void 0)continue;const E=A.buffer,H=A.type,K=A.bytesPerElement;if(vt.isInterleavedBufferAttribute){const V=vt.data,mt=V.stride,ft=vt.offset;if(V.isInstancedInterleavedBuffer){for(let ht=0;ht<et.locationSize;ht++)D(et.location+ht,V.meshPerAttribute);z.isInstancedMesh!==!0&&J._maxInstanceCount===void 0&&(J._maxInstanceCount=V.meshPerAttribute*V.count)}else for(let ht=0;ht<et.locationSize;ht++)w(et.location+ht);r.bindBuffer(34962,E);for(let ht=0;ht<et.locationSize;ht++)C(et.location+ht,L/et.locationSize,H,B,mt*K,(ft+L/et.locationSize*ht)*K)}else{if(vt.isInstancedBufferAttribute){for(let V=0;V<et.locationSize;V++)D(et.location+V,vt.meshPerAttribute);z.isInstancedMesh!==!0&&J._maxInstanceCount===void 0&&(J._maxInstanceCount=vt.meshPerAttribute*vt.count)}else for(let V=0;V<et.locationSize;V++)w(et.location+V);r.bindBuffer(34962,E);for(let V=0;V<et.locationSize;V++)C(et.location+V,L/et.locationSize,H,B,L*K,L/et.locationSize*V*K)}}else if(tt!==void 0){const B=tt[it];if(B!==void 0)switch(B.length){case 2:r.vertexAttrib2fv(et.location,B);break;case 3:r.vertexAttrib3fv(et.location,B);break;case 4:r.vertexAttrib4fv(et.location,B);break;default:r.vertexAttrib1fv(et.location,B)}}}}b()}function S(){k();for(const z in a){const Y=a[z];for(const X in Y){const J=Y[X];for(const I in J)g(J[I].object),delete J[I];delete Y[X]}delete a[z]}}function F(z){if(a[z.id]===void 0)return;const Y=a[z.id];for(const X in Y){const J=Y[X];for(const I in J)g(J[I].object),delete J[I];delete Y[X]}delete a[z.id]}function U(z){for(const Y in a){const X=a[Y];if(X[z.id]===void 0)continue;const J=X[z.id];for(const I in J)g(J[I].object),delete J[I];delete X[z.id]}}function k(){G(),c=!0,d!==l&&(d=l,m(d.object))}function G(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:k,resetDefaultState:G,dispose:S,releaseStatesOfGeometry:F,releaseStatesOfProgram:U,initAttributes:_,enableAttribute:w,disableUnusedAttributes:b}}function qp(r,t,e,n){const i=n.isWebGL2;let s;function o(d){s=d}function a(d,c){r.drawArrays(s,d,c),e.update(c,s,1)}function l(d,c,u){if(u===0)return;let h,m;if(i)h=r,m="drawArraysInstanced";else if(h=t.get("ANGLE_instanced_arrays"),m="drawArraysInstancedANGLE",h===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[m](s,d,c,u),e.update(c,s,u)}this.setMode=o,this.render=a,this.renderInstances=l}function Xp(r,t,e){let n;function i(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const C=t.get("EXT_texture_filter_anisotropic");n=r.getParameter(C.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(C){if(C==="highp"){if(r.getShaderPrecisionFormat(35633,36338).precision>0&&r.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";C="mediump"}return C==="mediump"&&r.getShaderPrecisionFormat(35633,36337).precision>0&&r.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&r instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&r instanceof WebGL2ComputeRenderingContext;let a=e.precision!==void 0?e.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const d=o||t.has("WEBGL_draw_buffers"),c=e.logarithmicDepthBuffer===!0,u=r.getParameter(34930),h=r.getParameter(35660),m=r.getParameter(3379),g=r.getParameter(34076),f=r.getParameter(34921),p=r.getParameter(36347),v=r.getParameter(36348),M=r.getParameter(36349),_=h>0,w=o||t.has("OES_texture_float"),D=_&&w,b=o?r.getParameter(36183):0;return{isWebGL2:o,drawBuffers:d,getMaxAnisotropy:i,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:c,maxTextures:u,maxVertexTextures:h,maxTextureSize:m,maxCubemapSize:g,maxAttributes:f,maxVertexUniforms:p,maxVaryings:v,maxFragmentUniforms:M,vertexTextures:_,floatFragmentTextures:w,floatVertexTextures:D,maxSamples:b}}function Zp(r){const t=this;let e=null,n=0,i=!1,s=!1;const o=new ri,a=new De,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,h,m){const g=u.length!==0||h||n!==0||i;return i=h,e=c(u,m,0),n=u.length,g},this.beginShadows=function(){s=!0,c(null)},this.endShadows=function(){s=!1,d()},this.setState=function(u,h,m){const g=u.clippingPlanes,f=u.clipIntersection,p=u.clipShadows,v=r.get(u);if(!i||g===null||g.length===0||s&&!p)s?c(null):d();else{const M=s?0:n,_=M*4;let w=v.clippingState||null;l.value=w,w=c(g,h,_,m);for(let D=0;D!==_;++D)w[D]=e[D];v.clippingState=w,this.numIntersection=f?this.numPlanes:0,this.numPlanes+=M}};function d(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function c(u,h,m,g){const f=u!==null?u.length:0;let p=null;if(f!==0){if(p=l.value,g!==!0||p===null){const v=m+f*4,M=h.matrixWorldInverse;a.getNormalMatrix(M),(p===null||p.length<v)&&(p=new Float32Array(v));for(let _=0,w=m;_!==f;++_,w+=4)o.copy(u[_]).applyMatrix4(M,a),o.normal.toArray(p,w),p[w+3]=o.constant}l.value=p,l.needsUpdate=!0}return t.numPlanes=f,t.numIntersection=0,p}}function jp(r){let t=new WeakMap;function e(o,a){return a===Ro?o.mapping=$i:a===No&&(o.mapping=Ji),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Ro||a===No)if(t.has(o)){const l=t.get(o).texture;return e(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const d=new af(l.height/2);return d.fromEquirectangularTexture(r,o),t.set(o,d),o.addEventListener("dispose",i),e(d.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=t.get(a);l!==void 0&&(t.delete(a),l.dispose())}function s(){t=new WeakMap}return{get:n,dispose:s}}class Yp extends Pc{constructor(t=-1,e=1,n=1,i=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-t,o=n+t,a=i+e,l=i-e;if(this.view!==null&&this.view.enabled){const d=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=d*this.view.offsetX,o=s+d*this.view.width,a-=c*this.view.offsetY,l=a-c*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const Vi=4,uu=[.125,.215,.35,.446,.526,.582],oi=20,fo=new Yp,cu=new Xt;let po=null;const si=(1+Math.sqrt(5))/2,Oi=1/si,lu=[new q(1,1,1),new q(-1,1,1),new q(1,1,-1),new q(-1,1,-1),new q(0,si,Oi),new q(0,si,-Oi),new q(Oi,0,si),new q(-Oi,0,si),new q(si,Oi,0),new q(-si,Oi,0)];class hu{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){po=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(t,n,i,s),e>0&&this._blur(s,0,0,e),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=pu(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=du(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(po),t.scissorTest=!1,is(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===$i||t.mapping===Ji?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),po=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:rn,minFilter:rn,generateMipmaps:!1,type:Ar,format:mn,encoding:vi,depthBuffer:!1},i=fu(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=fu(t,e,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=$p(s)),this._blurMaterial=Jp(s,t,e)}return i}_compileMaterial(t){const e=new Ve(this._lodPlanes[0],t);this._renderer.compile(e,fo)}_sceneToCubeUV(t,e,n,i){const a=new Je(90,1,e,n),l=[1,-1,1,1,1,1],d=[1,1,1,-1,-1,-1],c=this._renderer,u=c.autoClear,h=c.toneMapping;c.getClearColor(cu),c.toneMapping=Un,c.autoClear=!1;const m=new Qi({name:"PMREM.Background",side:sn,depthWrite:!1,depthTest:!1}),g=new Ve(new zr,m);let f=!1;const p=t.background;p?p.isColor&&(m.color.copy(p),t.background=null,f=!0):(m.color.copy(cu),f=!0);for(let v=0;v<6;v++){const M=v%3;M===0?(a.up.set(0,l[v],0),a.lookAt(d[v],0,0)):M===1?(a.up.set(0,0,l[v]),a.lookAt(0,d[v],0)):(a.up.set(0,l[v],0),a.lookAt(0,0,d[v]));const _=this._cubeSize;is(i,M*_,v>2?_:0,_,_),c.setRenderTarget(i),f&&c.render(g,a),c.render(t,a)}g.geometry.dispose(),g.material.dispose(),c.toneMapping=h,c.autoClear=u,t.background=p}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===$i||t.mapping===Ji;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=pu()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=du());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new Ve(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=t;const l=this._cubeSize;is(e,0,0,3*l,2*l),n.setRenderTarget(e),n.render(o,fo)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=lu[(i-1)%lu.length];this._blur(t,i-1,i,s,o)}e.autoClear=n}_blur(t,e,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",s),this._halfBlur(o,t,n,n,i,"longitudinal",s)}_halfBlur(t,e,n,i,s,o,a){const l=this._renderer,d=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const c=3,u=new Ve(this._lodPlanes[i],d),h=d.uniforms,m=this._sizeLods[n]-1,g=isFinite(s)?Math.PI/(2*m):2*Math.PI/(2*oi-1),f=s/g,p=isFinite(s)?1+Math.floor(c*f):oi;p>oi&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${oi}`);const v=[];let M=0;for(let C=0;C<oi;++C){const x=C/f,S=Math.exp(-x*x/2);v.push(S),C===0?M+=S:C<p&&(M+=2*S)}for(let C=0;C<v.length;C++)v[C]=v[C]/M;h.envMap.value=t.texture,h.samples.value=p,h.weights.value=v,h.latitudinal.value=o==="latitudinal",a&&(h.poleAxis.value=a);const{_lodMax:_}=this;h.dTheta.value=g,h.mipInt.value=_-n;const w=this._sizeLods[i],D=3*w*(i>_-Vi?i-_+Vi:0),b=4*(this._cubeSize-w);is(e,D,b,3*w,2*w),l.setRenderTarget(e),l.render(u,fo)}}function $p(r){const t=[],e=[],n=[];let i=r;const s=r-Vi+1+uu.length;for(let o=0;o<s;o++){const a=Math.pow(2,i);e.push(a);let l=1/a;o>r-Vi?l=uu[o-r+Vi-1]:o===0&&(l=0),n.push(l);const d=1/(a-2),c=-d,u=1+d,h=[c,c,u,c,u,u,c,c,u,u,c,u],m=6,g=6,f=3,p=2,v=1,M=new Float32Array(f*g*m),_=new Float32Array(p*g*m),w=new Float32Array(v*g*m);for(let b=0;b<m;b++){const C=b%3*2/3-1,x=b>2?0:-1,S=[C,x,0,C+2/3,x,0,C+2/3,x+1,0,C,x,0,C+2/3,x+1,0,C,x+1,0];M.set(S,f*g*b),_.set(h,p*g*b);const F=[b,b,b,b,b,b];w.set(F,v*g*b)}const D=new me;D.setAttribute("position",new Dn(M,f)),D.setAttribute("uv",new Dn(_,p)),D.setAttribute("faceIndex",new Dn(w,v)),t.push(D),i>Vi&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function fu(r,t,e){const n=new _i(r,t,e);return n.texture.mapping=As,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function is(r,t,e,n,i){r.viewport.set(t,e,n,i),r.scissor.set(t,e,n,i)}function Jp(r,t,e){const n=new Float32Array(oi),i=new q(0,1,0);return new xi({name:"SphericalGaussianBlur",defines:{n:oi,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:oa(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:jn,depthTest:!1,depthWrite:!1})}function du(){return new xi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:oa(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:jn,depthTest:!1,depthWrite:!1})}function pu(){return new xi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:oa(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:jn,depthTest:!1,depthWrite:!1})}function oa(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Kp(r){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture){const l=a.mapping,d=l===Ro||l===No,c=l===$i||l===Ji;if(d||c)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let u=t.get(a);return e===null&&(e=new hu(r)),u=d?e.fromEquirectangular(a,u):e.fromCubemap(a,u),t.set(a,u),u.texture}else{if(t.has(a))return t.get(a).texture;{const u=a.image;if(d&&u&&u.height>0||c&&u&&i(u)){e===null&&(e=new hu(r));const h=d?e.fromEquirectangular(a):e.fromCubemap(a);return t.set(a,h),a.addEventListener("dispose",s),h.texture}else return null}}}return a}function i(a){let l=0;const d=6;for(let c=0;c<d;c++)a[c]!==void 0&&l++;return l===d}function s(a){const l=a.target;l.removeEventListener("dispose",s);const d=t.get(l);d!==void 0&&(t.delete(l),d.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function Qp(r){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(n){const i=e(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function tm(r,t,e,n){const i={},s=new WeakMap;function o(u){const h=u.target;h.index!==null&&t.remove(h.index);for(const g in h.attributes)t.remove(h.attributes[g]);h.removeEventListener("dispose",o),delete i[h.id];const m=s.get(h);m&&(t.remove(m),s.delete(h)),n.releaseStatesOfGeometry(h),h.isInstancedBufferGeometry===!0&&delete h._maxInstanceCount,e.memory.geometries--}function a(u,h){return i[h.id]===!0||(h.addEventListener("dispose",o),i[h.id]=!0,e.memory.geometries++),h}function l(u){const h=u.attributes;for(const g in h)t.update(h[g],34962);const m=u.morphAttributes;for(const g in m){const f=m[g];for(let p=0,v=f.length;p<v;p++)t.update(f[p],34962)}}function d(u){const h=[],m=u.index,g=u.attributes.position;let f=0;if(m!==null){const M=m.array;f=m.version;for(let _=0,w=M.length;_<w;_+=3){const D=M[_+0],b=M[_+1],C=M[_+2];h.push(D,b,b,C,C,D)}}else{const M=g.array;f=g.version;for(let _=0,w=M.length/3-1;_<w;_+=3){const D=_+0,b=_+1,C=_+2;h.push(D,b,b,C,C,D)}}const p=new(Dc(h)?Tc:Cc)(h,1);p.version=f;const v=s.get(u);v&&t.remove(v),s.set(u,p)}function c(u){const h=s.get(u);if(h){const m=u.index;m!==null&&h.version<m.version&&d(u)}else d(u);return s.get(u)}return{get:a,update:l,getWireframeAttribute:c}}function em(r,t,e,n){const i=n.isWebGL2;let s;function o(h){s=h}let a,l;function d(h){a=h.type,l=h.bytesPerElement}function c(h,m){r.drawElements(s,m,a,h*l),e.update(m,s,1)}function u(h,m,g){if(g===0)return;let f,p;if(i)f=r,p="drawElementsInstanced";else if(f=t.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",f===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[p](s,m,a,h*l,g),e.update(m,s,g)}this.setMode=o,this.setIndex=d,this.render=c,this.renderInstances=u}function nm(r){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(e.calls++,o){case 4:e.triangles+=a*(s/3);break;case 1:e.lines+=a*(s/2);break;case 3:e.lines+=a*(s-1);break;case 2:e.lines+=a*s;break;case 0:e.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function im(r,t){return r[0]-t[0]}function rm(r,t){return Math.abs(t[1])-Math.abs(r[1])}function sm(r,t,e){const n={},i=new Float32Array(8),s=new WeakMap,o=new Re,a=[];for(let d=0;d<8;d++)a[d]=[d,0];function l(d,c,u,h){const m=d.morphTargetInfluences;if(t.isWebGL2===!0){const g=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,f=g!==void 0?g.length:0;let p=s.get(c);if(p===void 0||p.count!==f){let Y=function(){G.dispose(),s.delete(c),c.removeEventListener("dispose",Y)};p!==void 0&&p.texture.dispose();const _=c.morphAttributes.position!==void 0,w=c.morphAttributes.normal!==void 0,D=c.morphAttributes.color!==void 0,b=c.morphAttributes.position||[],C=c.morphAttributes.normal||[],x=c.morphAttributes.color||[];let S=0;_===!0&&(S=1),w===!0&&(S=2),D===!0&&(S=3);let F=c.attributes.position.count*S,U=1;F>t.maxTextureSize&&(U=Math.ceil(F/t.maxTextureSize),F=t.maxTextureSize);const k=new Float32Array(F*U*4*f),G=new Ac(k,F,U,f);G.type=ui,G.needsUpdate=!0;const z=S*4;for(let X=0;X<f;X++){const J=b[X],I=C[X],rt=x[X],tt=F*U*4*X;for(let it=0;it<J.count;it++){const et=it*z;_===!0&&(o.fromBufferAttribute(J,it),k[tt+et+0]=o.x,k[tt+et+1]=o.y,k[tt+et+2]=o.z,k[tt+et+3]=0),w===!0&&(o.fromBufferAttribute(I,it),k[tt+et+4]=o.x,k[tt+et+5]=o.y,k[tt+et+6]=o.z,k[tt+et+7]=0),D===!0&&(o.fromBufferAttribute(rt,it),k[tt+et+8]=o.x,k[tt+et+9]=o.y,k[tt+et+10]=o.z,k[tt+et+11]=rt.itemSize===4?o.w:1)}}p={count:f,texture:G,size:new Dt(F,U)},s.set(c,p),c.addEventListener("dispose",Y)}let v=0;for(let _=0;_<m.length;_++)v+=m[_];const M=c.morphTargetsRelative?1:1-v;h.getUniforms().setValue(r,"morphTargetBaseInfluence",M),h.getUniforms().setValue(r,"morphTargetInfluences",m),h.getUniforms().setValue(r,"morphTargetsTexture",p.texture,e),h.getUniforms().setValue(r,"morphTargetsTextureSize",p.size)}else{const g=m===void 0?0:m.length;let f=n[c.id];if(f===void 0||f.length!==g){f=[];for(let w=0;w<g;w++)f[w]=[w,0];n[c.id]=f}for(let w=0;w<g;w++){const D=f[w];D[0]=w,D[1]=m[w]}f.sort(rm);for(let w=0;w<8;w++)w<g&&f[w][1]?(a[w][0]=f[w][0],a[w][1]=f[w][1]):(a[w][0]=Number.MAX_SAFE_INTEGER,a[w][1]=0);a.sort(im);const p=c.morphAttributes.position,v=c.morphAttributes.normal;let M=0;for(let w=0;w<8;w++){const D=a[w],b=D[0],C=D[1];b!==Number.MAX_SAFE_INTEGER&&C?(p&&c.getAttribute("morphTarget"+w)!==p[b]&&c.setAttribute("morphTarget"+w,p[b]),v&&c.getAttribute("morphNormal"+w)!==v[b]&&c.setAttribute("morphNormal"+w,v[b]),i[w]=C,M+=C):(p&&c.hasAttribute("morphTarget"+w)===!0&&c.deleteAttribute("morphTarget"+w),v&&c.hasAttribute("morphNormal"+w)===!0&&c.deleteAttribute("morphNormal"+w),i[w]=0)}const _=c.morphTargetsRelative?1:1-M;h.getUniforms().setValue(r,"morphTargetBaseInfluence",_),h.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:l}}function om(r,t,e,n){let i=new WeakMap;function s(l){const d=n.render.frame,c=l.geometry,u=t.get(l,c);return i.get(u)!==d&&(t.update(u),i.set(u,d)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),e.update(l.instanceMatrix,34962),l.instanceColor!==null&&e.update(l.instanceColor,34962)),u}function o(){i=new WeakMap}function a(l){const d=l.target;d.removeEventListener("dispose",a),e.remove(d.instanceMatrix),d.instanceColor!==null&&e.remove(d.instanceColor)}return{update:s,dispose:o}}const Ic=new Ke,zc=new Ac,Bc=new Wh,Oc=new Lc,mu=[],gu=[],vu=new Float32Array(16),_u=new Float32Array(9),xu=new Float32Array(4);function rr(r,t,e){const n=r[0];if(n<=0||n>0)return r;const i=t*e;let s=mu[i];if(s===void 0&&(s=new Float32Array(i),mu[i]=s),t!==0){n.toArray(s,0);for(let o=1,a=0;o!==t;++o)a+=e,r[o].toArray(s,a)}return s}function be(r,t){if(r.length!==t.length)return!1;for(let e=0,n=r.length;e<n;e++)if(r[e]!==t[e])return!1;return!0}function Se(r,t){for(let e=0,n=t.length;e<n;e++)r[e]=t[e]}function Cs(r,t){let e=gu[t];e===void 0&&(e=new Int32Array(t),gu[t]=e);for(let n=0;n!==t;++n)e[n]=r.allocateTextureUnit();return e}function am(r,t){const e=this.cache;e[0]!==t&&(r.uniform1f(this.addr,t),e[0]=t)}function um(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(be(e,t))return;r.uniform2fv(this.addr,t),Se(e,t)}}function cm(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(r.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(be(e,t))return;r.uniform3fv(this.addr,t),Se(e,t)}}function lm(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(be(e,t))return;r.uniform4fv(this.addr,t),Se(e,t)}}function hm(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(be(e,t))return;r.uniformMatrix2fv(this.addr,!1,t),Se(e,t)}else{if(be(e,n))return;xu.set(n),r.uniformMatrix2fv(this.addr,!1,xu),Se(e,n)}}function fm(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(be(e,t))return;r.uniformMatrix3fv(this.addr,!1,t),Se(e,t)}else{if(be(e,n))return;_u.set(n),r.uniformMatrix3fv(this.addr,!1,_u),Se(e,n)}}function dm(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(be(e,t))return;r.uniformMatrix4fv(this.addr,!1,t),Se(e,t)}else{if(be(e,n))return;vu.set(n),r.uniformMatrix4fv(this.addr,!1,vu),Se(e,n)}}function pm(r,t){const e=this.cache;e[0]!==t&&(r.uniform1i(this.addr,t),e[0]=t)}function mm(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(be(e,t))return;r.uniform2iv(this.addr,t),Se(e,t)}}function gm(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(be(e,t))return;r.uniform3iv(this.addr,t),Se(e,t)}}function vm(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(be(e,t))return;r.uniform4iv(this.addr,t),Se(e,t)}}function _m(r,t){const e=this.cache;e[0]!==t&&(r.uniform1ui(this.addr,t),e[0]=t)}function xm(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(be(e,t))return;r.uniform2uiv(this.addr,t),Se(e,t)}}function ym(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(be(e,t))return;r.uniform3uiv(this.addr,t),Se(e,t)}}function wm(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(be(e,t))return;r.uniform4uiv(this.addr,t),Se(e,t)}}function Mm(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTexture2D(t||Ic,i)}function Dm(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||Bc,i)}function bm(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||Oc,i)}function Sm(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||zc,i)}function Em(r){switch(r){case 5126:return am;case 35664:return um;case 35665:return cm;case 35666:return lm;case 35674:return hm;case 35675:return fm;case 35676:return dm;case 5124:case 35670:return pm;case 35667:case 35671:return mm;case 35668:case 35672:return gm;case 35669:case 35673:return vm;case 5125:return _m;case 36294:return xm;case 36295:return ym;case 36296:return wm;case 35678:case 36198:case 36298:case 36306:case 35682:return Mm;case 35679:case 36299:case 36307:return Dm;case 35680:case 36300:case 36308:case 36293:return bm;case 36289:case 36303:case 36311:case 36292:return Sm}}function Am(r,t){r.uniform1fv(this.addr,t)}function Cm(r,t){const e=rr(t,this.size,2);r.uniform2fv(this.addr,e)}function Tm(r,t){const e=rr(t,this.size,3);r.uniform3fv(this.addr,e)}function Fm(r,t){const e=rr(t,this.size,4);r.uniform4fv(this.addr,e)}function Pm(r,t){const e=rr(t,this.size,4);r.uniformMatrix2fv(this.addr,!1,e)}function Lm(r,t){const e=rr(t,this.size,9);r.uniformMatrix3fv(this.addr,!1,e)}function Rm(r,t){const e=rr(t,this.size,16);r.uniformMatrix4fv(this.addr,!1,e)}function Nm(r,t){r.uniform1iv(this.addr,t)}function Im(r,t){r.uniform2iv(this.addr,t)}function zm(r,t){r.uniform3iv(this.addr,t)}function Bm(r,t){r.uniform4iv(this.addr,t)}function Om(r,t){r.uniform1uiv(this.addr,t)}function Um(r,t){r.uniform2uiv(this.addr,t)}function km(r,t){r.uniform3uiv(this.addr,t)}function Gm(r,t){r.uniform4uiv(this.addr,t)}function Vm(r,t,e){const n=this.cache,i=t.length,s=Cs(e,i);be(n,s)||(r.uniform1iv(this.addr,s),Se(n,s));for(let o=0;o!==i;++o)e.setTexture2D(t[o]||Ic,s[o])}function Hm(r,t,e){const n=this.cache,i=t.length,s=Cs(e,i);be(n,s)||(r.uniform1iv(this.addr,s),Se(n,s));for(let o=0;o!==i;++o)e.setTexture3D(t[o]||Bc,s[o])}function Wm(r,t,e){const n=this.cache,i=t.length,s=Cs(e,i);be(n,s)||(r.uniform1iv(this.addr,s),Se(n,s));for(let o=0;o!==i;++o)e.setTextureCube(t[o]||Oc,s[o])}function qm(r,t,e){const n=this.cache,i=t.length,s=Cs(e,i);be(n,s)||(r.uniform1iv(this.addr,s),Se(n,s));for(let o=0;o!==i;++o)e.setTexture2DArray(t[o]||zc,s[o])}function Xm(r){switch(r){case 5126:return Am;case 35664:return Cm;case 35665:return Tm;case 35666:return Fm;case 35674:return Pm;case 35675:return Lm;case 35676:return Rm;case 5124:case 35670:return Nm;case 35667:case 35671:return Im;case 35668:case 35672:return zm;case 35669:case 35673:return Bm;case 5125:return Om;case 36294:return Um;case 36295:return km;case 36296:return Gm;case 35678:case 36198:case 36298:case 36306:case 35682:return Vm;case 35679:case 36299:case 36307:return Hm;case 35680:case 36300:case 36308:case 36293:return Wm;case 36289:case 36303:case 36311:case 36292:return qm}}class Zm{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=Em(e.type)}}class jm{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=Xm(e.type)}}class Ym{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let s=0,o=i.length;s!==o;++s){const a=i[s];a.setValue(t,e[a.id],n)}}}const mo=/(\w+)(\])?(\[|\.)?/g;function yu(r,t){r.seq.push(t),r.map[t.id]=t}function $m(r,t,e){const n=r.name,i=n.length;for(mo.lastIndex=0;;){const s=mo.exec(n),o=mo.lastIndex;let a=s[1];const l=s[2]==="]",d=s[3];if(l&&(a=a|0),d===void 0||d==="["&&o+2===i){yu(e,d===void 0?new Zm(a,r,t):new jm(a,r,t));break}else{let u=e.map[a];u===void 0&&(u=new Ym(a),yu(e,u)),e=u}}}class fs{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const s=t.getActiveUniform(e,i),o=t.getUniformLocation(e,s.name);$m(s,o,this)}}setValue(t,e,n,i){const s=this.map[e];s!==void 0&&s.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let s=0,o=e.length;s!==o;++s){const a=e[s],l=n[a.id];l.needsUpdate!==!1&&a.setValue(t,l.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,s=t.length;i!==s;++i){const o=t[i];o.id in e&&n.push(o)}return n}}function wu(r,t,e){const n=r.createShader(t);return r.shaderSource(n,e),r.compileShader(n),n}let Jm=0;function Km(r,t){const e=r.split(`
`),n=[],i=Math.max(t-6,0),s=Math.min(t+6,e.length);for(let o=i;o<s;o++){const a=o+1;n.push(`${a===t?">":" "} ${a}: ${e[o]}`)}return n.join(`
`)}function Qm(r){switch(r){case vi:return["Linear","( value )"];case re:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function Mu(r,t,e){const n=r.getShaderParameter(t,35713),i=r.getShaderInfoLog(t).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const o=parseInt(s[1]);return e.toUpperCase()+`

`+i+`

`+Km(r.getShaderSource(t),o)}else return i}function t0(r,t){const e=Qm(t);return"vec4 "+r+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function e0(r,t){let e;switch(t){case rh:e="Linear";break;case sh:e="Reinhard";break;case oh:e="OptimizedCineon";break;case ah:e="ACESFilmic";break;case uh:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+r+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function n0(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(vr).join(`
`)}function i0(r){const t=[];for(const e in r){const n=r[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function r0(r,t){const e={},n=r.getProgramParameter(t,35721);for(let i=0;i<n;i++){const s=r.getActiveAttrib(t,i),o=s.name;let a=1;s.type===35674&&(a=2),s.type===35675&&(a=3),s.type===35676&&(a=4),e[o]={type:s.type,location:r.getAttribLocation(t,o),locationSize:a}}return e}function vr(r){return r!==""}function Du(r,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function bu(r,t){return r.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const s0=/^[ \t]*#include +<([\w\d./]+)>/gm;function Uo(r){return r.replace(s0,o0)}function o0(r,t){const e=Ht[t];if(e===void 0)throw new Error("Can not resolve #include <"+t+">");return Uo(e)}const a0=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Su(r){return r.replace(a0,u0)}function u0(r,t,e,n){let i="";for(let s=parseInt(t);s<parseInt(e);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Eu(r){let t="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?t+=`
#define HIGH_PRECISION`:r.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function c0(r){let t="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===gc?t="SHADOWMAP_TYPE_PCF":r.shadowMapType===zl?t="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===mr&&(t="SHADOWMAP_TYPE_VSM"),t}function l0(r){let t="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case $i:case Ji:t="ENVMAP_TYPE_CUBE";break;case As:t="ENVMAP_TYPE_CUBE_UV";break}return t}function h0(r){let t="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Ji:t="ENVMAP_MODE_REFRACTION";break}return t}function f0(r){let t="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case xc:t="ENVMAP_BLENDING_MULTIPLY";break;case nh:t="ENVMAP_BLENDING_MIX";break;case ih:t="ENVMAP_BLENDING_ADD";break}return t}function d0(r){const t=r.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function p0(r,t,e,n){const i=r.getContext(),s=e.defines;let o=e.vertexShader,a=e.fragmentShader;const l=c0(e),d=l0(e),c=h0(e),u=f0(e),h=d0(e),m=e.isWebGL2?"":n0(e),g=i0(s),f=i.createProgram();let p,v,M=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(p=[g].filter(vr).join(`
`),p.length>0&&(p+=`
`),v=[m,g].filter(vr).join(`
`),v.length>0&&(v+=`
`)):(p=[Eu(e),"#define SHADER_NAME "+e.shaderName,g,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.supportsVertexTextures?"#define VERTEX_TEXTURES":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.displacementMap&&e.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(vr).join(`
`),v=[m,Eu(e),"#define SHADER_NAME "+e.shaderName,g,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+d:"",e.envMap?"#define "+c:"",e.envMap?"#define "+u:"",h?"#define CUBEUV_TEXEL_WIDTH "+h.texelWidth:"",h?"#define CUBEUV_TEXEL_HEIGHT "+h.texelHeight:"",h?"#define CUBEUV_MAX_MIP "+h.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Un?"#define TONE_MAPPING":"",e.toneMapping!==Un?Ht.tonemapping_pars_fragment:"",e.toneMapping!==Un?e0("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",Ht.encodings_pars_fragment,t0("linearToOutputTexel",e.outputEncoding),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(vr).join(`
`)),o=Uo(o),o=Du(o,e),o=bu(o,e),a=Uo(a),a=Du(a,e),a=bu(a,e),o=Su(o),a=Su(a),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(M=`#version 300 es
`,p=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+p,v=["#define varying in",e.glslVersion===$a?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===$a?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const _=M+p+o,w=M+v+a,D=wu(i,35633,_),b=wu(i,35632,w);if(i.attachShader(f,D),i.attachShader(f,b),e.index0AttributeName!==void 0?i.bindAttribLocation(f,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(f,0,"position"),i.linkProgram(f),r.debug.checkShaderErrors){const S=i.getProgramInfoLog(f).trim(),F=i.getShaderInfoLog(D).trim(),U=i.getShaderInfoLog(b).trim();let k=!0,G=!0;if(i.getProgramParameter(f,35714)===!1){k=!1;const z=Mu(i,D,"vertex"),Y=Mu(i,b,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(f,35715)+`

Program Info Log: `+S+`
`+z+`
`+Y)}else S!==""?console.warn("THREE.WebGLProgram: Program Info Log:",S):(F===""||U==="")&&(G=!1);G&&(this.diagnostics={runnable:k,programLog:S,vertexShader:{log:F,prefix:p},fragmentShader:{log:U,prefix:v}})}i.deleteShader(D),i.deleteShader(b);let C;this.getUniforms=function(){return C===void 0&&(C=new fs(i,f)),C};let x;return this.getAttributes=function(){return x===void 0&&(x=r0(i,f)),x},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(f),this.program=void 0},this.name=e.shaderName,this.id=Jm++,this.cacheKey=t,this.usedTimes=1,this.program=f,this.vertexShader=D,this.fragmentShader=b,this}let m0=0;class g0{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new v0(t),e.set(t,n)),n}}class v0{constructor(t){this.id=m0++,this.code=t,this.usedTimes=0}}function _0(r,t,e,n,i,s,o){const a=new ra,l=new g0,d=[],c=i.isWebGL2,u=i.logarithmicDepthBuffer,h=i.vertexTextures;let m=i.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function f(x,S,F,U,k){const G=U.fog,z=k.geometry,Y=x.isMeshStandardMaterial?U.environment:null,X=(x.isMeshStandardMaterial?e:t).get(x.envMap||Y),J=X&&X.mapping===As?X.image.height:null,I=g[x.type];x.precision!==null&&(m=i.getMaxPrecision(x.precision),m!==x.precision&&console.warn("THREE.WebGLProgram.getParameters:",x.precision,"not supported, using",m,"instead."));const rt=z.morphAttributes.position||z.morphAttributes.normal||z.morphAttributes.color,tt=rt!==void 0?rt.length:0;let it=0;z.morphAttributes.position!==void 0&&(it=1),z.morphAttributes.normal!==void 0&&(it=2),z.morphAttributes.color!==void 0&&(it=3);let et,vt,B,L;if(I){const mt=wn[I];et=mt.vertexShader,vt=mt.fragmentShader}else et=x.vertexShader,vt=x.fragmentShader,l.update(x),B=l.getVertexShaderID(x),L=l.getFragmentShaderID(x);const A=r.getRenderTarget(),E=x.alphaTest>0,H=x.clearcoat>0,K=x.iridescence>0;return{isWebGL2:c,shaderID:I,shaderName:x.type,vertexShader:et,fragmentShader:vt,defines:x.defines,customVertexShaderID:B,customFragmentShaderID:L,isRawShaderMaterial:x.isRawShaderMaterial===!0,glslVersion:x.glslVersion,precision:m,instancing:k.isInstancedMesh===!0,instancingColor:k.isInstancedMesh===!0&&k.instanceColor!==null,supportsVertexTextures:h,outputEncoding:A===null?r.outputEncoding:A.isXRRenderTarget===!0?A.texture.encoding:vi,map:!!x.map,matcap:!!x.matcap,envMap:!!X,envMapMode:X&&X.mapping,envMapCubeUVHeight:J,lightMap:!!x.lightMap,aoMap:!!x.aoMap,emissiveMap:!!x.emissiveMap,bumpMap:!!x.bumpMap,normalMap:!!x.normalMap,objectSpaceNormalMap:x.normalMapType===Ah,tangentSpaceNormalMap:x.normalMapType===Mc,decodeVideoTexture:!!x.map&&x.map.isVideoTexture===!0&&x.map.encoding===re,clearcoat:H,clearcoatMap:H&&!!x.clearcoatMap,clearcoatRoughnessMap:H&&!!x.clearcoatRoughnessMap,clearcoatNormalMap:H&&!!x.clearcoatNormalMap,iridescence:K,iridescenceMap:K&&!!x.iridescenceMap,iridescenceThicknessMap:K&&!!x.iridescenceThicknessMap,displacementMap:!!x.displacementMap,roughnessMap:!!x.roughnessMap,metalnessMap:!!x.metalnessMap,specularMap:!!x.specularMap,specularIntensityMap:!!x.specularIntensityMap,specularColorMap:!!x.specularColorMap,opaque:x.transparent===!1&&x.blending===Xi,alphaMap:!!x.alphaMap,alphaTest:E,gradientMap:!!x.gradientMap,sheen:x.sheen>0,sheenColorMap:!!x.sheenColorMap,sheenRoughnessMap:!!x.sheenRoughnessMap,transmission:x.transmission>0,transmissionMap:!!x.transmissionMap,thicknessMap:!!x.thicknessMap,combine:x.combine,vertexTangents:!!x.normalMap&&!!z.attributes.tangent,vertexColors:x.vertexColors,vertexAlphas:x.vertexColors===!0&&!!z.attributes.color&&z.attributes.color.itemSize===4,vertexUvs:!!x.map||!!x.bumpMap||!!x.normalMap||!!x.specularMap||!!x.alphaMap||!!x.emissiveMap||!!x.roughnessMap||!!x.metalnessMap||!!x.clearcoatMap||!!x.clearcoatRoughnessMap||!!x.clearcoatNormalMap||!!x.iridescenceMap||!!x.iridescenceThicknessMap||!!x.displacementMap||!!x.transmissionMap||!!x.thicknessMap||!!x.specularIntensityMap||!!x.specularColorMap||!!x.sheenColorMap||!!x.sheenRoughnessMap,uvsVertexOnly:!(x.map||x.bumpMap||x.normalMap||x.specularMap||x.alphaMap||x.emissiveMap||x.roughnessMap||x.metalnessMap||x.clearcoatNormalMap||x.iridescenceMap||x.iridescenceThicknessMap||x.transmission>0||x.transmissionMap||x.thicknessMap||x.specularIntensityMap||x.specularColorMap||x.sheen>0||x.sheenColorMap||x.sheenRoughnessMap)&&!!x.displacementMap,fog:!!G,useFog:x.fog===!0,fogExp2:G&&G.isFogExp2,flatShading:!!x.flatShading,sizeAttenuation:x.sizeAttenuation,logarithmicDepthBuffer:u,skinning:k.isSkinnedMesh===!0,morphTargets:z.morphAttributes.position!==void 0,morphNormals:z.morphAttributes.normal!==void 0,morphColors:z.morphAttributes.color!==void 0,morphTargetsCount:tt,morphTextureStride:it,numDirLights:S.directional.length,numPointLights:S.point.length,numSpotLights:S.spot.length,numSpotLightMaps:S.spotLightMap.length,numRectAreaLights:S.rectArea.length,numHemiLights:S.hemi.length,numDirLightShadows:S.directionalShadowMap.length,numPointLightShadows:S.pointShadowMap.length,numSpotLightShadows:S.spotShadowMap.length,numSpotLightShadowsWithMaps:S.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:x.dithering,shadowMapEnabled:r.shadowMap.enabled&&F.length>0,shadowMapType:r.shadowMap.type,toneMapping:x.toneMapped?r.toneMapping:Un,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:x.premultipliedAlpha,doubleSided:x.side===Rr,flipSided:x.side===sn,useDepthPacking:!!x.depthPacking,depthPacking:x.depthPacking||0,index0AttributeName:x.index0AttributeName,extensionDerivatives:x.extensions&&x.extensions.derivatives,extensionFragDepth:x.extensions&&x.extensions.fragDepth,extensionDrawBuffers:x.extensions&&x.extensions.drawBuffers,extensionShaderTextureLOD:x.extensions&&x.extensions.shaderTextureLOD,rendererExtensionFragDepth:c||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||n.has("EXT_shader_texture_lod"),customProgramCacheKey:x.customProgramCacheKey()}}function p(x){const S=[];if(x.shaderID?S.push(x.shaderID):(S.push(x.customVertexShaderID),S.push(x.customFragmentShaderID)),x.defines!==void 0)for(const F in x.defines)S.push(F),S.push(x.defines[F]);return x.isRawShaderMaterial===!1&&(v(S,x),M(S,x),S.push(r.outputEncoding)),S.push(x.customProgramCacheKey),S.join()}function v(x,S){x.push(S.precision),x.push(S.outputEncoding),x.push(S.envMapMode),x.push(S.envMapCubeUVHeight),x.push(S.combine),x.push(S.vertexUvs),x.push(S.fogExp2),x.push(S.sizeAttenuation),x.push(S.morphTargetsCount),x.push(S.morphAttributeCount),x.push(S.numDirLights),x.push(S.numPointLights),x.push(S.numSpotLights),x.push(S.numSpotLightMaps),x.push(S.numHemiLights),x.push(S.numRectAreaLights),x.push(S.numDirLightShadows),x.push(S.numPointLightShadows),x.push(S.numSpotLightShadows),x.push(S.numSpotLightShadowsWithMaps),x.push(S.shadowMapType),x.push(S.toneMapping),x.push(S.numClippingPlanes),x.push(S.numClipIntersection),x.push(S.depthPacking)}function M(x,S){a.disableAll(),S.isWebGL2&&a.enable(0),S.supportsVertexTextures&&a.enable(1),S.instancing&&a.enable(2),S.instancingColor&&a.enable(3),S.map&&a.enable(4),S.matcap&&a.enable(5),S.envMap&&a.enable(6),S.lightMap&&a.enable(7),S.aoMap&&a.enable(8),S.emissiveMap&&a.enable(9),S.bumpMap&&a.enable(10),S.normalMap&&a.enable(11),S.objectSpaceNormalMap&&a.enable(12),S.tangentSpaceNormalMap&&a.enable(13),S.clearcoat&&a.enable(14),S.clearcoatMap&&a.enable(15),S.clearcoatRoughnessMap&&a.enable(16),S.clearcoatNormalMap&&a.enable(17),S.iridescence&&a.enable(18),S.iridescenceMap&&a.enable(19),S.iridescenceThicknessMap&&a.enable(20),S.displacementMap&&a.enable(21),S.specularMap&&a.enable(22),S.roughnessMap&&a.enable(23),S.metalnessMap&&a.enable(24),S.gradientMap&&a.enable(25),S.alphaMap&&a.enable(26),S.alphaTest&&a.enable(27),S.vertexColors&&a.enable(28),S.vertexAlphas&&a.enable(29),S.vertexUvs&&a.enable(30),S.vertexTangents&&a.enable(31),S.uvsVertexOnly&&a.enable(32),x.push(a.mask),a.disableAll(),S.fog&&a.enable(0),S.useFog&&a.enable(1),S.flatShading&&a.enable(2),S.logarithmicDepthBuffer&&a.enable(3),S.skinning&&a.enable(4),S.morphTargets&&a.enable(5),S.morphNormals&&a.enable(6),S.morphColors&&a.enable(7),S.premultipliedAlpha&&a.enable(8),S.shadowMapEnabled&&a.enable(9),S.physicallyCorrectLights&&a.enable(10),S.doubleSided&&a.enable(11),S.flipSided&&a.enable(12),S.useDepthPacking&&a.enable(13),S.dithering&&a.enable(14),S.specularIntensityMap&&a.enable(15),S.specularColorMap&&a.enable(16),S.transmission&&a.enable(17),S.transmissionMap&&a.enable(18),S.thicknessMap&&a.enable(19),S.sheen&&a.enable(20),S.sheenColorMap&&a.enable(21),S.sheenRoughnessMap&&a.enable(22),S.decodeVideoTexture&&a.enable(23),S.opaque&&a.enable(24),x.push(a.mask)}function _(x){const S=g[x.type];let F;if(S){const U=wn[S];F=nf.clone(U.uniforms)}else F=x.uniforms;return F}function w(x,S){let F;for(let U=0,k=d.length;U<k;U++){const G=d[U];if(G.cacheKey===S){F=G,++F.usedTimes;break}}return F===void 0&&(F=new p0(r,S,x,s),d.push(F)),F}function D(x){if(--x.usedTimes===0){const S=d.indexOf(x);d[S]=d[d.length-1],d.pop(),x.destroy()}}function b(x){l.remove(x)}function C(){l.dispose()}return{getParameters:f,getProgramCacheKey:p,getUniforms:_,acquireProgram:w,releaseProgram:D,releaseShaderCache:b,programs:d,dispose:C}}function x0(){let r=new WeakMap;function t(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function e(s){r.delete(s)}function n(s,o,a){r.get(s)[o]=a}function i(){r=new WeakMap}return{get:t,remove:e,update:n,dispose:i}}function y0(r,t){return r.groupOrder!==t.groupOrder?r.groupOrder-t.groupOrder:r.renderOrder!==t.renderOrder?r.renderOrder-t.renderOrder:r.material.id!==t.material.id?r.material.id-t.material.id:r.z!==t.z?r.z-t.z:r.id-t.id}function Au(r,t){return r.groupOrder!==t.groupOrder?r.groupOrder-t.groupOrder:r.renderOrder!==t.renderOrder?r.renderOrder-t.renderOrder:r.z!==t.z?t.z-r.z:r.id-t.id}function Cu(){const r=[];let t=0;const e=[],n=[],i=[];function s(){t=0,e.length=0,n.length=0,i.length=0}function o(u,h,m,g,f,p){let v=r[t];return v===void 0?(v={id:u.id,object:u,geometry:h,material:m,groupOrder:g,renderOrder:u.renderOrder,z:f,group:p},r[t]=v):(v.id=u.id,v.object=u,v.geometry=h,v.material=m,v.groupOrder=g,v.renderOrder=u.renderOrder,v.z=f,v.group=p),t++,v}function a(u,h,m,g,f,p){const v=o(u,h,m,g,f,p);m.transmission>0?n.push(v):m.transparent===!0?i.push(v):e.push(v)}function l(u,h,m,g,f,p){const v=o(u,h,m,g,f,p);m.transmission>0?n.unshift(v):m.transparent===!0?i.unshift(v):e.unshift(v)}function d(u,h){e.length>1&&e.sort(u||y0),n.length>1&&n.sort(h||Au),i.length>1&&i.sort(h||Au)}function c(){for(let u=t,h=r.length;u<h;u++){const m=r[u];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:e,transmissive:n,transparent:i,init:s,push:a,unshift:l,finish:c,sort:d}}function w0(){let r=new WeakMap;function t(n,i){const s=r.get(n);let o;return s===void 0?(o=new Cu,r.set(n,[o])):i>=s.length?(o=new Cu,s.push(o)):o=s[i],o}function e(){r=new WeakMap}return{get:t,dispose:e}}function M0(){const r={};return{get:function(t){if(r[t.id]!==void 0)return r[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new q,color:new Xt};break;case"SpotLight":e={position:new q,direction:new q,color:new Xt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new q,color:new Xt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new q,skyColor:new Xt,groundColor:new Xt};break;case"RectAreaLight":e={color:new Xt,position:new q,halfWidth:new q,halfHeight:new q};break}return r[t.id]=e,e}}}function D0(){const r={};return{get:function(t){if(r[t.id]!==void 0)return r[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Dt};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Dt};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Dt,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[t.id]=e,e}}}let b0=0;function S0(r,t){return(t.castShadow?2:0)-(r.castShadow?2:0)+(t.map?1:0)-(r.map?1:0)}function E0(r,t){const e=new M0,n=D0(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let c=0;c<9;c++)i.probe.push(new q);const s=new q,o=new Jt,a=new Jt;function l(c,u){let h=0,m=0,g=0;for(let U=0;U<9;U++)i.probe[U].set(0,0,0);let f=0,p=0,v=0,M=0,_=0,w=0,D=0,b=0,C=0,x=0;c.sort(S0);const S=u!==!0?Math.PI:1;for(let U=0,k=c.length;U<k;U++){const G=c[U],z=G.color,Y=G.intensity,X=G.distance,J=G.shadow&&G.shadow.map?G.shadow.map.texture:null;if(G.isAmbientLight)h+=z.r*Y*S,m+=z.g*Y*S,g+=z.b*Y*S;else if(G.isLightProbe)for(let I=0;I<9;I++)i.probe[I].addScaledVector(G.sh.coefficients[I],Y);else if(G.isDirectionalLight){const I=e.get(G);if(I.color.copy(G.color).multiplyScalar(G.intensity*S),G.castShadow){const rt=G.shadow,tt=n.get(G);tt.shadowBias=rt.bias,tt.shadowNormalBias=rt.normalBias,tt.shadowRadius=rt.radius,tt.shadowMapSize=rt.mapSize,i.directionalShadow[f]=tt,i.directionalShadowMap[f]=J,i.directionalShadowMatrix[f]=G.shadow.matrix,w++}i.directional[f]=I,f++}else if(G.isSpotLight){const I=e.get(G);I.position.setFromMatrixPosition(G.matrixWorld),I.color.copy(z).multiplyScalar(Y*S),I.distance=X,I.coneCos=Math.cos(G.angle),I.penumbraCos=Math.cos(G.angle*(1-G.penumbra)),I.decay=G.decay,i.spot[v]=I;const rt=G.shadow;if(G.map&&(i.spotLightMap[C]=G.map,C++,rt.updateMatrices(G),G.castShadow&&x++),i.spotLightMatrix[v]=rt.matrix,G.castShadow){const tt=n.get(G);tt.shadowBias=rt.bias,tt.shadowNormalBias=rt.normalBias,tt.shadowRadius=rt.radius,tt.shadowMapSize=rt.mapSize,i.spotShadow[v]=tt,i.spotShadowMap[v]=J,b++}v++}else if(G.isRectAreaLight){const I=e.get(G);I.color.copy(z).multiplyScalar(Y),I.halfWidth.set(G.width*.5,0,0),I.halfHeight.set(0,G.height*.5,0),i.rectArea[M]=I,M++}else if(G.isPointLight){const I=e.get(G);if(I.color.copy(G.color).multiplyScalar(G.intensity*S),I.distance=G.distance,I.decay=G.decay,G.castShadow){const rt=G.shadow,tt=n.get(G);tt.shadowBias=rt.bias,tt.shadowNormalBias=rt.normalBias,tt.shadowRadius=rt.radius,tt.shadowMapSize=rt.mapSize,tt.shadowCameraNear=rt.camera.near,tt.shadowCameraFar=rt.camera.far,i.pointShadow[p]=tt,i.pointShadowMap[p]=J,i.pointShadowMatrix[p]=G.shadow.matrix,D++}i.point[p]=I,p++}else if(G.isHemisphereLight){const I=e.get(G);I.skyColor.copy(G.color).multiplyScalar(Y*S),I.groundColor.copy(G.groundColor).multiplyScalar(Y*S),i.hemi[_]=I,_++}}M>0&&(t.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=At.LTC_FLOAT_1,i.rectAreaLTC2=At.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=At.LTC_HALF_1,i.rectAreaLTC2=At.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=h,i.ambient[1]=m,i.ambient[2]=g;const F=i.hash;(F.directionalLength!==f||F.pointLength!==p||F.spotLength!==v||F.rectAreaLength!==M||F.hemiLength!==_||F.numDirectionalShadows!==w||F.numPointShadows!==D||F.numSpotShadows!==b||F.numSpotMaps!==C)&&(i.directional.length=f,i.spot.length=v,i.rectArea.length=M,i.point.length=p,i.hemi.length=_,i.directionalShadow.length=w,i.directionalShadowMap.length=w,i.pointShadow.length=D,i.pointShadowMap.length=D,i.spotShadow.length=b,i.spotShadowMap.length=b,i.directionalShadowMatrix.length=w,i.pointShadowMatrix.length=D,i.spotLightMatrix.length=b+C-x,i.spotLightMap.length=C,i.numSpotLightShadowsWithMaps=x,F.directionalLength=f,F.pointLength=p,F.spotLength=v,F.rectAreaLength=M,F.hemiLength=_,F.numDirectionalShadows=w,F.numPointShadows=D,F.numSpotShadows=b,F.numSpotMaps=C,i.version=b0++)}function d(c,u){let h=0,m=0,g=0,f=0,p=0;const v=u.matrixWorldInverse;for(let M=0,_=c.length;M<_;M++){const w=c[M];if(w.isDirectionalLight){const D=i.directional[h];D.direction.setFromMatrixPosition(w.matrixWorld),s.setFromMatrixPosition(w.target.matrixWorld),D.direction.sub(s),D.direction.transformDirection(v),h++}else if(w.isSpotLight){const D=i.spot[g];D.position.setFromMatrixPosition(w.matrixWorld),D.position.applyMatrix4(v),D.direction.setFromMatrixPosition(w.matrixWorld),s.setFromMatrixPosition(w.target.matrixWorld),D.direction.sub(s),D.direction.transformDirection(v),g++}else if(w.isRectAreaLight){const D=i.rectArea[f];D.position.setFromMatrixPosition(w.matrixWorld),D.position.applyMatrix4(v),a.identity(),o.copy(w.matrixWorld),o.premultiply(v),a.extractRotation(o),D.halfWidth.set(w.width*.5,0,0),D.halfHeight.set(0,w.height*.5,0),D.halfWidth.applyMatrix4(a),D.halfHeight.applyMatrix4(a),f++}else if(w.isPointLight){const D=i.point[m];D.position.setFromMatrixPosition(w.matrixWorld),D.position.applyMatrix4(v),m++}else if(w.isHemisphereLight){const D=i.hemi[p];D.direction.setFromMatrixPosition(w.matrixWorld),D.direction.transformDirection(v),p++}}}return{setup:l,setupView:d,state:i}}function Tu(r,t){const e=new E0(r,t),n=[],i=[];function s(){n.length=0,i.length=0}function o(u){n.push(u)}function a(u){i.push(u)}function l(u){e.setup(n,u)}function d(u){e.setupView(n,u)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:e},setupLights:l,setupLightsView:d,pushLight:o,pushShadow:a}}function A0(r,t){let e=new WeakMap;function n(s,o=0){const a=e.get(s);let l;return a===void 0?(l=new Tu(r,t),e.set(s,[l])):o>=a.length?(l=new Tu(r,t),a.push(l)):l=a[o],l}function i(){e=new WeakMap}return{get:n,dispose:i}}class C0 extends ir{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Sh,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class T0 extends ir{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new q,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const F0=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,P0=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function L0(r,t,e){let n=new Rc;const i=new Dt,s=new Dt,o=new Re,a=new C0({depthPacking:Eh}),l=new T0,d={},c=e.maxTextureSize,u={0:sn,1:mi,2:Rr},h=new xi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Dt},radius:{value:4}},vertexShader:F0,fragmentShader:P0}),m=h.clone();m.defines.HORIZONTAL_PASS=1;const g=new me;g.setAttribute("position",new Dn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new Ve(g,h),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=gc,this.render=function(w,D,b){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||w.length===0)return;const C=r.getRenderTarget(),x=r.getActiveCubeFace(),S=r.getActiveMipmapLevel(),F=r.state;F.setBlending(jn),F.buffers.color.setClear(1,1,1,1),F.buffers.depth.setTest(!0),F.setScissorTest(!1);for(let U=0,k=w.length;U<k;U++){const G=w[U],z=G.shadow;if(z===void 0){console.warn("THREE.WebGLShadowMap:",G,"has no shadow.");continue}if(z.autoUpdate===!1&&z.needsUpdate===!1)continue;i.copy(z.mapSize);const Y=z.getFrameExtents();if(i.multiply(Y),s.copy(z.mapSize),(i.x>c||i.y>c)&&(i.x>c&&(s.x=Math.floor(c/Y.x),i.x=s.x*Y.x,z.mapSize.x=s.x),i.y>c&&(s.y=Math.floor(c/Y.y),i.y=s.y*Y.y,z.mapSize.y=s.y)),z.map===null){const J=this.type!==mr?{minFilter:Ge,magFilter:Ge}:{};z.map=new _i(i.x,i.y,J),z.map.texture.name=G.name+".shadowMap",z.camera.updateProjectionMatrix()}r.setRenderTarget(z.map),r.clear();const X=z.getViewportCount();for(let J=0;J<X;J++){const I=z.getViewport(J);o.set(s.x*I.x,s.y*I.y,s.x*I.z,s.y*I.w),F.viewport(o),z.updateMatrices(G,J),n=z.getFrustum(),_(D,b,z.camera,G,this.type)}z.isPointLightShadow!==!0&&this.type===mr&&v(z,b),z.needsUpdate=!1}p.needsUpdate=!1,r.setRenderTarget(C,x,S)};function v(w,D){const b=t.update(f);h.defines.VSM_SAMPLES!==w.blurSamples&&(h.defines.VSM_SAMPLES=w.blurSamples,m.defines.VSM_SAMPLES=w.blurSamples,h.needsUpdate=!0,m.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new _i(i.x,i.y)),h.uniforms.shadow_pass.value=w.map.texture,h.uniforms.resolution.value=w.mapSize,h.uniforms.radius.value=w.radius,r.setRenderTarget(w.mapPass),r.clear(),r.renderBufferDirect(D,null,b,h,f,null),m.uniforms.shadow_pass.value=w.mapPass.texture,m.uniforms.resolution.value=w.mapSize,m.uniforms.radius.value=w.radius,r.setRenderTarget(w.map),r.clear(),r.renderBufferDirect(D,null,b,m,f,null)}function M(w,D,b,C,x,S){let F=null;const U=b.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(U!==void 0)F=U;else if(F=b.isPointLight===!0?l:a,r.localClippingEnabled&&D.clipShadows===!0&&Array.isArray(D.clippingPlanes)&&D.clippingPlanes.length!==0||D.displacementMap&&D.displacementScale!==0||D.alphaMap&&D.alphaTest>0||D.map&&D.alphaTest>0){const k=F.uuid,G=D.uuid;let z=d[k];z===void 0&&(z={},d[k]=z);let Y=z[G];Y===void 0&&(Y=F.clone(),z[G]=Y),F=Y}return F.visible=D.visible,F.wireframe=D.wireframe,S===mr?F.side=D.shadowSide!==null?D.shadowSide:D.side:F.side=D.shadowSide!==null?D.shadowSide:u[D.side],F.alphaMap=D.alphaMap,F.alphaTest=D.alphaTest,F.map=D.map,F.clipShadows=D.clipShadows,F.clippingPlanes=D.clippingPlanes,F.clipIntersection=D.clipIntersection,F.displacementMap=D.displacementMap,F.displacementScale=D.displacementScale,F.displacementBias=D.displacementBias,F.wireframeLinewidth=D.wireframeLinewidth,F.linewidth=D.linewidth,b.isPointLight===!0&&F.isMeshDistanceMaterial===!0&&(F.referencePosition.setFromMatrixPosition(b.matrixWorld),F.nearDistance=C,F.farDistance=x),F}function _(w,D,b,C,x){if(w.visible===!1)return;if(w.layers.test(D.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&x===mr)&&(!w.frustumCulled||n.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,w.matrixWorld);const U=t.update(w),k=w.material;if(Array.isArray(k)){const G=U.groups;for(let z=0,Y=G.length;z<Y;z++){const X=G[z],J=k[X.materialIndex];if(J&&J.visible){const I=M(w,J,C,b.near,b.far,x);r.renderBufferDirect(b,null,U,I,w,X)}}}else if(k.visible){const G=M(w,k,C,b.near,b.far,x);r.renderBufferDirect(b,null,U,G,w,null)}}const F=w.children;for(let U=0,k=F.length;U<k;U++)_(F[U],D,b,C,x)}}function R0(r,t,e){const n=e.isWebGL2;function i(){let j=!1;const ut=new Re;let wt=null;const St=new Re(0,0,0,0);return{setMask:function(Ct){wt!==Ct&&!j&&(r.colorMask(Ct,Ct,Ct,Ct),wt=Ct)},setLocked:function(Ct){j=Ct},setClear:function(Ct,qt,Kt,se,Qe){Qe===!0&&(Ct*=se,qt*=se,Kt*=se),ut.set(Ct,qt,Kt,se),St.equals(ut)===!1&&(r.clearColor(Ct,qt,Kt,se),St.copy(ut))},reset:function(){j=!1,wt=null,St.set(-1,0,0,0)}}}function s(){let j=!1,ut=null,wt=null,St=null;return{setTest:function(Ct){Ct?E(2929):H(2929)},setMask:function(Ct){ut!==Ct&&!j&&(r.depthMask(Ct),ut=Ct)},setFunc:function(Ct){if(wt!==Ct){switch(Ct){case Yl:r.depthFunc(512);break;case $l:r.depthFunc(519);break;case Jl:r.depthFunc(513);break;case Lo:r.depthFunc(515);break;case Kl:r.depthFunc(514);break;case Ql:r.depthFunc(518);break;case th:r.depthFunc(516);break;case eh:r.depthFunc(517);break;default:r.depthFunc(515)}wt=Ct}},setLocked:function(Ct){j=Ct},setClear:function(Ct){St!==Ct&&(r.clearDepth(Ct),St=Ct)},reset:function(){j=!1,ut=null,wt=null,St=null}}}function o(){let j=!1,ut=null,wt=null,St=null,Ct=null,qt=null,Kt=null,se=null,Qe=null;return{setTest:function(te){j||(te?E(2960):H(2960))},setMask:function(te){ut!==te&&!j&&(r.stencilMask(te),ut=te)},setFunc:function(te,on,He){(wt!==te||St!==on||Ct!==He)&&(r.stencilFunc(te,on,He),wt=te,St=on,Ct=He)},setOp:function(te,on,He){(qt!==te||Kt!==on||se!==He)&&(r.stencilOp(te,on,He),qt=te,Kt=on,se=He)},setLocked:function(te){j=te},setClear:function(te){Qe!==te&&(r.clearStencil(te),Qe=te)},reset:function(){j=!1,ut=null,wt=null,St=null,Ct=null,qt=null,Kt=null,se=null,Qe=null}}}const a=new i,l=new s,d=new o,c=new WeakMap,u=new WeakMap;let h={},m={},g=new WeakMap,f=[],p=null,v=!1,M=null,_=null,w=null,D=null,b=null,C=null,x=null,S=!1,F=null,U=null,k=null,G=null,z=null;const Y=r.getParameter(35661);let X=!1,J=0;const I=r.getParameter(7938);I.indexOf("WebGL")!==-1?(J=parseFloat(/^WebGL (\d)/.exec(I)[1]),X=J>=1):I.indexOf("OpenGL ES")!==-1&&(J=parseFloat(/^OpenGL ES (\d)/.exec(I)[1]),X=J>=2);let rt=null,tt={};const it=r.getParameter(3088),et=r.getParameter(2978),vt=new Re().fromArray(it),B=new Re().fromArray(et);function L(j,ut,wt){const St=new Uint8Array(4),Ct=r.createTexture();r.bindTexture(j,Ct),r.texParameteri(j,10241,9728),r.texParameteri(j,10240,9728);for(let qt=0;qt<wt;qt++)r.texImage2D(ut+qt,0,6408,1,1,0,6408,5121,St);return Ct}const A={};A[3553]=L(3553,3553,1),A[34067]=L(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),d.setClear(0),E(2929),l.setFunc(Lo),bt(!1),Et(wa),E(2884),ct(jn);function E(j){h[j]!==!0&&(r.enable(j),h[j]=!0)}function H(j){h[j]!==!1&&(r.disable(j),h[j]=!1)}function K(j,ut){return m[j]!==ut?(r.bindFramebuffer(j,ut),m[j]=ut,n&&(j===36009&&(m[36160]=ut),j===36160&&(m[36009]=ut)),!0):!1}function V(j,ut){let wt=f,St=!1;if(j)if(wt=g.get(ut),wt===void 0&&(wt=[],g.set(ut,wt)),j.isWebGLMultipleRenderTargets){const Ct=j.texture;if(wt.length!==Ct.length||wt[0]!==36064){for(let qt=0,Kt=Ct.length;qt<Kt;qt++)wt[qt]=36064+qt;wt.length=Ct.length,St=!0}}else wt[0]!==36064&&(wt[0]=36064,St=!0);else wt[0]!==1029&&(wt[0]=1029,St=!0);St&&(e.isWebGL2?r.drawBuffers(wt):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(wt))}function mt(j){return p!==j?(r.useProgram(j),p=j,!0):!1}const ft={[Gi]:32774,[Ol]:32778,[Ul]:32779};if(n)ft[Sa]=32775,ft[Ea]=32776;else{const j=t.get("EXT_blend_minmax");j!==null&&(ft[Sa]=j.MIN_EXT,ft[Ea]=j.MAX_EXT)}const ht={[kl]:0,[Gl]:1,[Vl]:768,[vc]:770,[jl]:776,[Xl]:774,[Wl]:772,[Hl]:769,[_c]:771,[Zl]:775,[ql]:773};function ct(j,ut,wt,St,Ct,qt,Kt,se){if(j===jn){v===!0&&(H(3042),v=!1);return}if(v===!1&&(E(3042),v=!0),j!==Bl){if(j!==M||se!==S){if((_!==Gi||b!==Gi)&&(r.blendEquation(32774),_=Gi,b=Gi),se)switch(j){case Xi:r.blendFuncSeparate(1,771,1,771);break;case Ma:r.blendFunc(1,1);break;case Da:r.blendFuncSeparate(0,769,0,1);break;case ba:r.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",j);break}else switch(j){case Xi:r.blendFuncSeparate(770,771,1,771);break;case Ma:r.blendFunc(770,1);break;case Da:r.blendFuncSeparate(0,769,0,1);break;case ba:r.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",j);break}w=null,D=null,C=null,x=null,M=j,S=se}return}Ct=Ct||ut,qt=qt||wt,Kt=Kt||St,(ut!==_||Ct!==b)&&(r.blendEquationSeparate(ft[ut],ft[Ct]),_=ut,b=Ct),(wt!==w||St!==D||qt!==C||Kt!==x)&&(r.blendFuncSeparate(ht[wt],ht[St],ht[qt],ht[Kt]),w=wt,D=St,C=qt,x=Kt),M=j,S=!1}function _t(j,ut){j.side===Rr?H(2884):E(2884);let wt=j.side===sn;ut&&(wt=!wt),bt(wt),j.blending===Xi&&j.transparent===!1?ct(jn):ct(j.blending,j.blendEquation,j.blendSrc,j.blendDst,j.blendEquationAlpha,j.blendSrcAlpha,j.blendDstAlpha,j.premultipliedAlpha),l.setFunc(j.depthFunc),l.setTest(j.depthTest),l.setMask(j.depthWrite),a.setMask(j.colorWrite);const St=j.stencilWrite;d.setTest(St),St&&(d.setMask(j.stencilWriteMask),d.setFunc(j.stencilFunc,j.stencilRef,j.stencilFuncMask),d.setOp(j.stencilFail,j.stencilZFail,j.stencilZPass)),N(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits),j.alphaToCoverage===!0?E(32926):H(32926)}function bt(j){F!==j&&(j?r.frontFace(2304):r.frontFace(2305),F=j)}function Et(j){j!==Nl?(E(2884),j!==U&&(j===wa?r.cullFace(1029):j===Il?r.cullFace(1028):r.cullFace(1032))):H(2884),U=j}function $(j){j!==k&&(X&&r.lineWidth(j),k=j)}function N(j,ut,wt){j?(E(32823),(G!==ut||z!==wt)&&(r.polygonOffset(ut,wt),G=ut,z=wt)):H(32823)}function Tt(j){j?E(3089):H(3089)}function zt(j){j===void 0&&(j=33984+Y-1),rt!==j&&(r.activeTexture(j),rt=j)}function R(j,ut,wt){wt===void 0&&(rt===null?wt=33984+Y-1:wt=rt);let St=tt[wt];St===void 0&&(St={type:void 0,texture:void 0},tt[wt]=St),(St.type!==j||St.texture!==ut)&&(rt!==wt&&(r.activeTexture(wt),rt=wt),r.bindTexture(j,ut||A[j]),St.type=j,St.texture=ut)}function y(){const j=tt[rt];j!==void 0&&j.type!==void 0&&(r.bindTexture(j.type,null),j.type=void 0,j.texture=void 0)}function T(){try{r.compressedTexImage2D.apply(r,arguments)}catch(j){console.error("THREE.WebGLState:",j)}}function O(){try{r.compressedTexImage3D.apply(r,arguments)}catch(j){console.error("THREE.WebGLState:",j)}}function Z(){try{r.texSubImage2D.apply(r,arguments)}catch(j){console.error("THREE.WebGLState:",j)}}function nt(){try{r.texSubImage3D.apply(r,arguments)}catch(j){console.error("THREE.WebGLState:",j)}}function lt(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(j){console.error("THREE.WebGLState:",j)}}function st(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(j){console.error("THREE.WebGLState:",j)}}function W(){try{r.texStorage2D.apply(r,arguments)}catch(j){console.error("THREE.WebGLState:",j)}}function at(){try{r.texStorage3D.apply(r,arguments)}catch(j){console.error("THREE.WebGLState:",j)}}function yt(){try{r.texImage2D.apply(r,arguments)}catch(j){console.error("THREE.WebGLState:",j)}}function Mt(){try{r.texImage3D.apply(r,arguments)}catch(j){console.error("THREE.WebGLState:",j)}}function dt(j){vt.equals(j)===!1&&(r.scissor(j.x,j.y,j.z,j.w),vt.copy(j))}function Ft(j){B.equals(j)===!1&&(r.viewport(j.x,j.y,j.z,j.w),B.copy(j))}function It(j,ut){let wt=u.get(ut);wt===void 0&&(wt=new WeakMap,u.set(ut,wt));let St=wt.get(j);St===void 0&&(St=r.getUniformBlockIndex(ut,j.name),wt.set(j,St))}function kt(j,ut){const St=u.get(ut).get(j);c.get(ut)!==St&&(r.uniformBlockBinding(ut,St,j.__bindingPointIndex),c.set(ut,St))}function Wt(){r.disable(3042),r.disable(2884),r.disable(2929),r.disable(32823),r.disable(3089),r.disable(2960),r.disable(32926),r.blendEquation(32774),r.blendFunc(1,0),r.blendFuncSeparate(1,0,1,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(513),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(519,0,4294967295),r.stencilOp(7680,7680,7680),r.clearStencil(0),r.cullFace(1029),r.frontFace(2305),r.polygonOffset(0,0),r.activeTexture(33984),r.bindFramebuffer(36160,null),n===!0&&(r.bindFramebuffer(36009,null),r.bindFramebuffer(36008,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),h={},rt=null,tt={},m={},g=new WeakMap,f=[],p=null,v=!1,M=null,_=null,w=null,D=null,b=null,C=null,x=null,S=!1,F=null,U=null,k=null,G=null,z=null,vt.set(0,0,r.canvas.width,r.canvas.height),B.set(0,0,r.canvas.width,r.canvas.height),a.reset(),l.reset(),d.reset()}return{buffers:{color:a,depth:l,stencil:d},enable:E,disable:H,bindFramebuffer:K,drawBuffers:V,useProgram:mt,setBlending:ct,setMaterial:_t,setFlipSided:bt,setCullFace:Et,setLineWidth:$,setPolygonOffset:N,setScissorTest:Tt,activeTexture:zt,bindTexture:R,unbindTexture:y,compressedTexImage2D:T,compressedTexImage3D:O,texImage2D:yt,texImage3D:Mt,updateUBOMapping:It,uniformBlockBinding:kt,texStorage2D:W,texStorage3D:at,texSubImage2D:Z,texSubImage3D:nt,compressedTexSubImage2D:lt,compressedTexSubImage3D:st,scissor:dt,viewport:Ft,reset:Wt}}function N0(r,t,e,n,i,s,o){const a=i.isWebGL2,l=i.maxTextures,d=i.maxCubemapSize,c=i.maxTextureSize,u=i.maxSamples,h=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,m=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let f;const p=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function M(R,y){return v?new OffscreenCanvas(R,y):gs("canvas")}function _(R,y,T,O){let Z=1;if((R.width>O||R.height>O)&&(Z=O/Math.max(R.width,R.height)),Z<1||y===!0)if(typeof HTMLImageElement<"u"&&R instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&R instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&R instanceof ImageBitmap){const nt=y?ms:Math.floor,lt=nt(Z*R.width),st=nt(Z*R.height);f===void 0&&(f=M(lt,st));const W=T?M(lt,st):f;return W.width=lt,W.height=st,W.getContext("2d").drawImage(R,0,0,lt,st),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+R.width+"x"+R.height+") to ("+lt+"x"+st+")."),W}else return"data"in R&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+R.width+"x"+R.height+")."),R;return R}function w(R){return Oo(R.width)&&Oo(R.height)}function D(R){return a?!1:R.wrapS!==pn||R.wrapT!==pn||R.minFilter!==Ge&&R.minFilter!==rn}function b(R,y){return R.generateMipmaps&&y&&R.minFilter!==Ge&&R.minFilter!==rn}function C(R){r.generateMipmap(R)}function x(R,y,T,O,Z=!1){if(a===!1)return y;if(R!==null){if(r[R]!==void 0)return r[R];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+R+"'")}let nt=y;return y===6403&&(T===5126&&(nt=33326),T===5131&&(nt=33325),T===5121&&(nt=33321)),y===33319&&(T===5126&&(nt=33328),T===5131&&(nt=33327),T===5121&&(nt=33323)),y===6408&&(T===5126&&(nt=34836),T===5131&&(nt=34842),T===5121&&(nt=O===re&&Z===!1?35907:32856),T===32819&&(nt=32854),T===32820&&(nt=32855)),(nt===33325||nt===33326||nt===33327||nt===33328||nt===34842||nt===34836)&&t.get("EXT_color_buffer_float"),nt}function S(R,y,T){return b(R,T)===!0||R.isFramebufferTexture&&R.minFilter!==Ge&&R.minFilter!==rn?Math.log2(Math.max(y.width,y.height))+1:R.mipmaps!==void 0&&R.mipmaps.length>0?R.mipmaps.length:R.isCompressedTexture&&Array.isArray(R.image)?y.mipmaps.length:1}function F(R){return R===Ge||R===Aa||R===ks?9728:9729}function U(R){const y=R.target;y.removeEventListener("dispose",U),G(y),y.isVideoTexture&&g.delete(y)}function k(R){const y=R.target;y.removeEventListener("dispose",k),Y(y)}function G(R){const y=n.get(R);if(y.__webglInit===void 0)return;const T=R.source,O=p.get(T);if(O){const Z=O[y.__cacheKey];Z.usedTimes--,Z.usedTimes===0&&z(R),Object.keys(O).length===0&&p.delete(T)}n.remove(R)}function z(R){const y=n.get(R);r.deleteTexture(y.__webglTexture);const T=R.source,O=p.get(T);delete O[y.__cacheKey],o.memory.textures--}function Y(R){const y=R.texture,T=n.get(R),O=n.get(y);if(O.__webglTexture!==void 0&&(r.deleteTexture(O.__webglTexture),o.memory.textures--),R.depthTexture&&R.depthTexture.dispose(),R.isWebGLCubeRenderTarget)for(let Z=0;Z<6;Z++)r.deleteFramebuffer(T.__webglFramebuffer[Z]),T.__webglDepthbuffer&&r.deleteRenderbuffer(T.__webglDepthbuffer[Z]);else{if(r.deleteFramebuffer(T.__webglFramebuffer),T.__webglDepthbuffer&&r.deleteRenderbuffer(T.__webglDepthbuffer),T.__webglMultisampledFramebuffer&&r.deleteFramebuffer(T.__webglMultisampledFramebuffer),T.__webglColorRenderbuffer)for(let Z=0;Z<T.__webglColorRenderbuffer.length;Z++)T.__webglColorRenderbuffer[Z]&&r.deleteRenderbuffer(T.__webglColorRenderbuffer[Z]);T.__webglDepthRenderbuffer&&r.deleteRenderbuffer(T.__webglDepthRenderbuffer)}if(R.isWebGLMultipleRenderTargets)for(let Z=0,nt=y.length;Z<nt;Z++){const lt=n.get(y[Z]);lt.__webglTexture&&(r.deleteTexture(lt.__webglTexture),o.memory.textures--),n.remove(y[Z])}n.remove(y),n.remove(R)}let X=0;function J(){X=0}function I(){const R=X;return R>=l&&console.warn("THREE.WebGLTextures: Trying to use "+R+" texture units while this GPU supports only "+l),X+=1,R}function rt(R){const y=[];return y.push(R.wrapS),y.push(R.wrapT),y.push(R.wrapR||0),y.push(R.magFilter),y.push(R.minFilter),y.push(R.anisotropy),y.push(R.internalFormat),y.push(R.format),y.push(R.type),y.push(R.generateMipmaps),y.push(R.premultiplyAlpha),y.push(R.flipY),y.push(R.unpackAlignment),y.push(R.encoding),y.join()}function tt(R,y){const T=n.get(R);if(R.isVideoTexture&&Tt(R),R.isRenderTargetTexture===!1&&R.version>0&&T.__version!==R.version){const O=R.image;if(O===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(O.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{H(T,R,y);return}}e.bindTexture(3553,T.__webglTexture,33984+y)}function it(R,y){const T=n.get(R);if(R.version>0&&T.__version!==R.version){H(T,R,y);return}e.bindTexture(35866,T.__webglTexture,33984+y)}function et(R,y){const T=n.get(R);if(R.version>0&&T.__version!==R.version){H(T,R,y);return}e.bindTexture(32879,T.__webglTexture,33984+y)}function vt(R,y){const T=n.get(R);if(R.version>0&&T.__version!==R.version){K(T,R,y);return}e.bindTexture(34067,T.__webglTexture,33984+y)}const B={[Io]:10497,[pn]:33071,[zo]:33648},L={[Ge]:9728,[Aa]:9984,[ks]:9986,[rn]:9729,[ch]:9985,[Er]:9987};function A(R,y,T){if(T?(r.texParameteri(R,10242,B[y.wrapS]),r.texParameteri(R,10243,B[y.wrapT]),(R===32879||R===35866)&&r.texParameteri(R,32882,B[y.wrapR]),r.texParameteri(R,10240,L[y.magFilter]),r.texParameteri(R,10241,L[y.minFilter])):(r.texParameteri(R,10242,33071),r.texParameteri(R,10243,33071),(R===32879||R===35866)&&r.texParameteri(R,32882,33071),(y.wrapS!==pn||y.wrapT!==pn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(R,10240,F(y.magFilter)),r.texParameteri(R,10241,F(y.minFilter)),y.minFilter!==Ge&&y.minFilter!==rn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),t.has("EXT_texture_filter_anisotropic")===!0){const O=t.get("EXT_texture_filter_anisotropic");if(y.magFilter===Ge||y.minFilter!==ks&&y.minFilter!==Er||y.type===ui&&t.has("OES_texture_float_linear")===!1||a===!1&&y.type===Ar&&t.has("OES_texture_half_float_linear")===!1)return;(y.anisotropy>1||n.get(y).__currentAnisotropy)&&(r.texParameterf(R,O.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(y.anisotropy,i.getMaxAnisotropy())),n.get(y).__currentAnisotropy=y.anisotropy)}}function E(R,y){let T=!1;R.__webglInit===void 0&&(R.__webglInit=!0,y.addEventListener("dispose",U));const O=y.source;let Z=p.get(O);Z===void 0&&(Z={},p.set(O,Z));const nt=rt(y);if(nt!==R.__cacheKey){Z[nt]===void 0&&(Z[nt]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,T=!0),Z[nt].usedTimes++;const lt=Z[R.__cacheKey];lt!==void 0&&(Z[R.__cacheKey].usedTimes--,lt.usedTimes===0&&z(y)),R.__cacheKey=nt,R.__webglTexture=Z[nt].texture}return T}function H(R,y,T){let O=3553;(y.isDataArrayTexture||y.isCompressedArrayTexture)&&(O=35866),y.isData3DTexture&&(O=32879);const Z=E(R,y),nt=y.source;e.bindTexture(O,R.__webglTexture,33984+T);const lt=n.get(nt);if(nt.version!==lt.__version||Z===!0){e.activeTexture(33984+T),r.pixelStorei(37440,y.flipY),r.pixelStorei(37441,y.premultiplyAlpha),r.pixelStorei(3317,y.unpackAlignment),r.pixelStorei(37443,0);const st=D(y)&&w(y.image)===!1;let W=_(y.image,st,!1,c);W=zt(y,W);const at=w(W)||a,yt=s.convert(y.format,y.encoding);let Mt=s.convert(y.type),dt=x(y.internalFormat,yt,Mt,y.encoding,y.isVideoTexture);A(O,y,at);let Ft;const It=y.mipmaps,kt=a&&y.isVideoTexture!==!0,Wt=lt.__version===void 0||Z===!0,j=S(y,W,at);if(y.isDepthTexture)dt=6402,a?y.type===ui?dt=36012:y.type===ai?dt=33190:y.type===Zi?dt=35056:dt=33189:y.type===ui&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),y.format===hi&&dt===6402&&y.type!==wc&&y.type!==ai&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),y.type=ai,Mt=s.convert(y.type)),y.format===Ki&&dt===6402&&(dt=34041,y.type!==Zi&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),y.type=Zi,Mt=s.convert(y.type))),Wt&&(kt?e.texStorage2D(3553,1,dt,W.width,W.height):e.texImage2D(3553,0,dt,W.width,W.height,0,yt,Mt,null));else if(y.isDataTexture)if(It.length>0&&at){kt&&Wt&&e.texStorage2D(3553,j,dt,It[0].width,It[0].height);for(let ut=0,wt=It.length;ut<wt;ut++)Ft=It[ut],kt?e.texSubImage2D(3553,ut,0,0,Ft.width,Ft.height,yt,Mt,Ft.data):e.texImage2D(3553,ut,dt,Ft.width,Ft.height,0,yt,Mt,Ft.data);y.generateMipmaps=!1}else kt?(Wt&&e.texStorage2D(3553,j,dt,W.width,W.height),e.texSubImage2D(3553,0,0,0,W.width,W.height,yt,Mt,W.data)):e.texImage2D(3553,0,dt,W.width,W.height,0,yt,Mt,W.data);else if(y.isCompressedTexture)if(y.isCompressedArrayTexture){kt&&Wt&&e.texStorage3D(35866,j,dt,It[0].width,It[0].height,W.depth);for(let ut=0,wt=It.length;ut<wt;ut++)Ft=It[ut],y.format!==mn?yt!==null?kt?e.compressedTexSubImage3D(35866,ut,0,0,0,Ft.width,Ft.height,W.depth,yt,Ft.data,0,0):e.compressedTexImage3D(35866,ut,dt,Ft.width,Ft.height,W.depth,0,Ft.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):kt?e.texSubImage3D(35866,ut,0,0,0,Ft.width,Ft.height,W.depth,yt,Mt,Ft.data):e.texImage3D(35866,ut,dt,Ft.width,Ft.height,W.depth,0,yt,Mt,Ft.data)}else{kt&&Wt&&e.texStorage2D(3553,j,dt,It[0].width,It[0].height);for(let ut=0,wt=It.length;ut<wt;ut++)Ft=It[ut],y.format!==mn?yt!==null?kt?e.compressedTexSubImage2D(3553,ut,0,0,Ft.width,Ft.height,yt,Ft.data):e.compressedTexImage2D(3553,ut,dt,Ft.width,Ft.height,0,Ft.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):kt?e.texSubImage2D(3553,ut,0,0,Ft.width,Ft.height,yt,Mt,Ft.data):e.texImage2D(3553,ut,dt,Ft.width,Ft.height,0,yt,Mt,Ft.data)}else if(y.isDataArrayTexture)kt?(Wt&&e.texStorage3D(35866,j,dt,W.width,W.height,W.depth),e.texSubImage3D(35866,0,0,0,0,W.width,W.height,W.depth,yt,Mt,W.data)):e.texImage3D(35866,0,dt,W.width,W.height,W.depth,0,yt,Mt,W.data);else if(y.isData3DTexture)kt?(Wt&&e.texStorage3D(32879,j,dt,W.width,W.height,W.depth),e.texSubImage3D(32879,0,0,0,0,W.width,W.height,W.depth,yt,Mt,W.data)):e.texImage3D(32879,0,dt,W.width,W.height,W.depth,0,yt,Mt,W.data);else if(y.isFramebufferTexture){if(Wt)if(kt)e.texStorage2D(3553,j,dt,W.width,W.height);else{let ut=W.width,wt=W.height;for(let St=0;St<j;St++)e.texImage2D(3553,St,dt,ut,wt,0,yt,Mt,null),ut>>=1,wt>>=1}}else if(It.length>0&&at){kt&&Wt&&e.texStorage2D(3553,j,dt,It[0].width,It[0].height);for(let ut=0,wt=It.length;ut<wt;ut++)Ft=It[ut],kt?e.texSubImage2D(3553,ut,0,0,yt,Mt,Ft):e.texImage2D(3553,ut,dt,yt,Mt,Ft);y.generateMipmaps=!1}else kt?(Wt&&e.texStorage2D(3553,j,dt,W.width,W.height),e.texSubImage2D(3553,0,0,0,yt,Mt,W)):e.texImage2D(3553,0,dt,yt,Mt,W);b(y,at)&&C(O),lt.__version=nt.version,y.onUpdate&&y.onUpdate(y)}R.__version=y.version}function K(R,y,T){if(y.image.length!==6)return;const O=E(R,y),Z=y.source;e.bindTexture(34067,R.__webglTexture,33984+T);const nt=n.get(Z);if(Z.version!==nt.__version||O===!0){e.activeTexture(33984+T),r.pixelStorei(37440,y.flipY),r.pixelStorei(37441,y.premultiplyAlpha),r.pixelStorei(3317,y.unpackAlignment),r.pixelStorei(37443,0);const lt=y.isCompressedTexture||y.image[0].isCompressedTexture,st=y.image[0]&&y.image[0].isDataTexture,W=[];for(let ut=0;ut<6;ut++)!lt&&!st?W[ut]=_(y.image[ut],!1,!0,d):W[ut]=st?y.image[ut].image:y.image[ut],W[ut]=zt(y,W[ut]);const at=W[0],yt=w(at)||a,Mt=s.convert(y.format,y.encoding),dt=s.convert(y.type),Ft=x(y.internalFormat,Mt,dt,y.encoding),It=a&&y.isVideoTexture!==!0,kt=nt.__version===void 0||O===!0;let Wt=S(y,at,yt);A(34067,y,yt);let j;if(lt){It&&kt&&e.texStorage2D(34067,Wt,Ft,at.width,at.height);for(let ut=0;ut<6;ut++){j=W[ut].mipmaps;for(let wt=0;wt<j.length;wt++){const St=j[wt];y.format!==mn?Mt!==null?It?e.compressedTexSubImage2D(34069+ut,wt,0,0,St.width,St.height,Mt,St.data):e.compressedTexImage2D(34069+ut,wt,Ft,St.width,St.height,0,St.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):It?e.texSubImage2D(34069+ut,wt,0,0,St.width,St.height,Mt,dt,St.data):e.texImage2D(34069+ut,wt,Ft,St.width,St.height,0,Mt,dt,St.data)}}}else{j=y.mipmaps,It&&kt&&(j.length>0&&Wt++,e.texStorage2D(34067,Wt,Ft,W[0].width,W[0].height));for(let ut=0;ut<6;ut++)if(st){It?e.texSubImage2D(34069+ut,0,0,0,W[ut].width,W[ut].height,Mt,dt,W[ut].data):e.texImage2D(34069+ut,0,Ft,W[ut].width,W[ut].height,0,Mt,dt,W[ut].data);for(let wt=0;wt<j.length;wt++){const Ct=j[wt].image[ut].image;It?e.texSubImage2D(34069+ut,wt+1,0,0,Ct.width,Ct.height,Mt,dt,Ct.data):e.texImage2D(34069+ut,wt+1,Ft,Ct.width,Ct.height,0,Mt,dt,Ct.data)}}else{It?e.texSubImage2D(34069+ut,0,0,0,Mt,dt,W[ut]):e.texImage2D(34069+ut,0,Ft,Mt,dt,W[ut]);for(let wt=0;wt<j.length;wt++){const St=j[wt];It?e.texSubImage2D(34069+ut,wt+1,0,0,Mt,dt,St.image[ut]):e.texImage2D(34069+ut,wt+1,Ft,Mt,dt,St.image[ut])}}}b(y,yt)&&C(34067),nt.__version=Z.version,y.onUpdate&&y.onUpdate(y)}R.__version=y.version}function V(R,y,T,O,Z){const nt=s.convert(T.format,T.encoding),lt=s.convert(T.type),st=x(T.internalFormat,nt,lt,T.encoding);n.get(y).__hasExternalTextures||(Z===32879||Z===35866?e.texImage3D(Z,0,st,y.width,y.height,y.depth,0,nt,lt,null):e.texImage2D(Z,0,st,y.width,y.height,0,nt,lt,null)),e.bindFramebuffer(36160,R),N(y)?h.framebufferTexture2DMultisampleEXT(36160,O,Z,n.get(T).__webglTexture,0,$(y)):(Z===3553||Z>=34069&&Z<=34074)&&r.framebufferTexture2D(36160,O,Z,n.get(T).__webglTexture,0),e.bindFramebuffer(36160,null)}function mt(R,y,T){if(r.bindRenderbuffer(36161,R),y.depthBuffer&&!y.stencilBuffer){let O=33189;if(T||N(y)){const Z=y.depthTexture;Z&&Z.isDepthTexture&&(Z.type===ui?O=36012:Z.type===ai&&(O=33190));const nt=$(y);N(y)?h.renderbufferStorageMultisampleEXT(36161,nt,O,y.width,y.height):r.renderbufferStorageMultisample(36161,nt,O,y.width,y.height)}else r.renderbufferStorage(36161,O,y.width,y.height);r.framebufferRenderbuffer(36160,36096,36161,R)}else if(y.depthBuffer&&y.stencilBuffer){const O=$(y);T&&N(y)===!1?r.renderbufferStorageMultisample(36161,O,35056,y.width,y.height):N(y)?h.renderbufferStorageMultisampleEXT(36161,O,35056,y.width,y.height):r.renderbufferStorage(36161,34041,y.width,y.height),r.framebufferRenderbuffer(36160,33306,36161,R)}else{const O=y.isWebGLMultipleRenderTargets===!0?y.texture:[y.texture];for(let Z=0;Z<O.length;Z++){const nt=O[Z],lt=s.convert(nt.format,nt.encoding),st=s.convert(nt.type),W=x(nt.internalFormat,lt,st,nt.encoding),at=$(y);T&&N(y)===!1?r.renderbufferStorageMultisample(36161,at,W,y.width,y.height):N(y)?h.renderbufferStorageMultisampleEXT(36161,at,W,y.width,y.height):r.renderbufferStorage(36161,W,y.width,y.height)}}r.bindRenderbuffer(36161,null)}function ft(R,y){if(y&&y.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,R),!(y.depthTexture&&y.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(y.depthTexture).__webglTexture||y.depthTexture.image.width!==y.width||y.depthTexture.image.height!==y.height)&&(y.depthTexture.image.width=y.width,y.depthTexture.image.height=y.height,y.depthTexture.needsUpdate=!0),tt(y.depthTexture,0);const O=n.get(y.depthTexture).__webglTexture,Z=$(y);if(y.depthTexture.format===hi)N(y)?h.framebufferTexture2DMultisampleEXT(36160,36096,3553,O,0,Z):r.framebufferTexture2D(36160,36096,3553,O,0);else if(y.depthTexture.format===Ki)N(y)?h.framebufferTexture2DMultisampleEXT(36160,33306,3553,O,0,Z):r.framebufferTexture2D(36160,33306,3553,O,0);else throw new Error("Unknown depthTexture format")}function ht(R){const y=n.get(R),T=R.isWebGLCubeRenderTarget===!0;if(R.depthTexture&&!y.__autoAllocateDepthBuffer){if(T)throw new Error("target.depthTexture not supported in Cube render targets");ft(y.__webglFramebuffer,R)}else if(T){y.__webglDepthbuffer=[];for(let O=0;O<6;O++)e.bindFramebuffer(36160,y.__webglFramebuffer[O]),y.__webglDepthbuffer[O]=r.createRenderbuffer(),mt(y.__webglDepthbuffer[O],R,!1)}else e.bindFramebuffer(36160,y.__webglFramebuffer),y.__webglDepthbuffer=r.createRenderbuffer(),mt(y.__webglDepthbuffer,R,!1);e.bindFramebuffer(36160,null)}function ct(R,y,T){const O=n.get(R);y!==void 0&&V(O.__webglFramebuffer,R,R.texture,36064,3553),T!==void 0&&ht(R)}function _t(R){const y=R.texture,T=n.get(R),O=n.get(y);R.addEventListener("dispose",k),R.isWebGLMultipleRenderTargets!==!0&&(O.__webglTexture===void 0&&(O.__webglTexture=r.createTexture()),O.__version=y.version,o.memory.textures++);const Z=R.isWebGLCubeRenderTarget===!0,nt=R.isWebGLMultipleRenderTargets===!0,lt=w(R)||a;if(Z){T.__webglFramebuffer=[];for(let st=0;st<6;st++)T.__webglFramebuffer[st]=r.createFramebuffer()}else{if(T.__webglFramebuffer=r.createFramebuffer(),nt)if(i.drawBuffers){const st=R.texture;for(let W=0,at=st.length;W<at;W++){const yt=n.get(st[W]);yt.__webglTexture===void 0&&(yt.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&R.samples>0&&N(R)===!1){const st=nt?y:[y];T.__webglMultisampledFramebuffer=r.createFramebuffer(),T.__webglColorRenderbuffer=[],e.bindFramebuffer(36160,T.__webglMultisampledFramebuffer);for(let W=0;W<st.length;W++){const at=st[W];T.__webglColorRenderbuffer[W]=r.createRenderbuffer(),r.bindRenderbuffer(36161,T.__webglColorRenderbuffer[W]);const yt=s.convert(at.format,at.encoding),Mt=s.convert(at.type),dt=x(at.internalFormat,yt,Mt,at.encoding,R.isXRRenderTarget===!0),Ft=$(R);r.renderbufferStorageMultisample(36161,Ft,dt,R.width,R.height),r.framebufferRenderbuffer(36160,36064+W,36161,T.__webglColorRenderbuffer[W])}r.bindRenderbuffer(36161,null),R.depthBuffer&&(T.__webglDepthRenderbuffer=r.createRenderbuffer(),mt(T.__webglDepthRenderbuffer,R,!0)),e.bindFramebuffer(36160,null)}}if(Z){e.bindTexture(34067,O.__webglTexture),A(34067,y,lt);for(let st=0;st<6;st++)V(T.__webglFramebuffer[st],R,y,36064,34069+st);b(y,lt)&&C(34067),e.unbindTexture()}else if(nt){const st=R.texture;for(let W=0,at=st.length;W<at;W++){const yt=st[W],Mt=n.get(yt);e.bindTexture(3553,Mt.__webglTexture),A(3553,yt,lt),V(T.__webglFramebuffer,R,yt,36064+W,3553),b(yt,lt)&&C(3553)}e.unbindTexture()}else{let st=3553;(R.isWebGL3DRenderTarget||R.isWebGLArrayRenderTarget)&&(a?st=R.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),e.bindTexture(st,O.__webglTexture),A(st,y,lt),V(T.__webglFramebuffer,R,y,36064,st),b(y,lt)&&C(st),e.unbindTexture()}R.depthBuffer&&ht(R)}function bt(R){const y=w(R)||a,T=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let O=0,Z=T.length;O<Z;O++){const nt=T[O];if(b(nt,y)){const lt=R.isWebGLCubeRenderTarget?34067:3553,st=n.get(nt).__webglTexture;e.bindTexture(lt,st),C(lt),e.unbindTexture()}}}function Et(R){if(a&&R.samples>0&&N(R)===!1){const y=R.isWebGLMultipleRenderTargets?R.texture:[R.texture],T=R.width,O=R.height;let Z=16384;const nt=[],lt=R.stencilBuffer?33306:36096,st=n.get(R),W=R.isWebGLMultipleRenderTargets===!0;if(W)for(let at=0;at<y.length;at++)e.bindFramebuffer(36160,st.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064+at,36161,null),e.bindFramebuffer(36160,st.__webglFramebuffer),r.framebufferTexture2D(36009,36064+at,3553,null,0);e.bindFramebuffer(36008,st.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,st.__webglFramebuffer);for(let at=0;at<y.length;at++){nt.push(36064+at),R.depthBuffer&&nt.push(lt);const yt=st.__ignoreDepthValues!==void 0?st.__ignoreDepthValues:!1;if(yt===!1&&(R.depthBuffer&&(Z|=256),R.stencilBuffer&&(Z|=1024)),W&&r.framebufferRenderbuffer(36008,36064,36161,st.__webglColorRenderbuffer[at]),yt===!0&&(r.invalidateFramebuffer(36008,[lt]),r.invalidateFramebuffer(36009,[lt])),W){const Mt=n.get(y[at]).__webglTexture;r.framebufferTexture2D(36009,36064,3553,Mt,0)}r.blitFramebuffer(0,0,T,O,0,0,T,O,Z,9728),m&&r.invalidateFramebuffer(36008,nt)}if(e.bindFramebuffer(36008,null),e.bindFramebuffer(36009,null),W)for(let at=0;at<y.length;at++){e.bindFramebuffer(36160,st.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064+at,36161,st.__webglColorRenderbuffer[at]);const yt=n.get(y[at]).__webglTexture;e.bindFramebuffer(36160,st.__webglFramebuffer),r.framebufferTexture2D(36009,36064+at,3553,yt,0)}e.bindFramebuffer(36009,st.__webglMultisampledFramebuffer)}}function $(R){return Math.min(u,R.samples)}function N(R){const y=n.get(R);return a&&R.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&y.__useRenderToTexture!==!1}function Tt(R){const y=o.render.frame;g.get(R)!==y&&(g.set(R,y),R.update())}function zt(R,y){const T=R.encoding,O=R.format,Z=R.type;return R.isCompressedTexture===!0||R.isVideoTexture===!0||R.format===Bo||T!==vi&&(T===re?a===!1?t.has("EXT_sRGB")===!0&&O===mn?(R.format=Bo,R.minFilter=rn,R.generateMipmaps=!1):y=Sc.sRGBToLinear(y):(O!==mn||Z!==gi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",T)),y}this.allocateTextureUnit=I,this.resetTextureUnits=J,this.setTexture2D=tt,this.setTexture2DArray=it,this.setTexture3D=et,this.setTextureCube=vt,this.rebindTextures=ct,this.setupRenderTarget=_t,this.updateRenderTargetMipmap=bt,this.updateMultisampleRenderTarget=Et,this.setupDepthRenderbuffer=ht,this.setupFrameBufferTexture=V,this.useMultisampledRTT=N}function I0(r,t,e){const n=e.isWebGL2;function i(s,o=null){let a;if(s===gi)return 5121;if(s===dh)return 32819;if(s===ph)return 32820;if(s===lh)return 5120;if(s===hh)return 5122;if(s===wc)return 5123;if(s===fh)return 5124;if(s===ai)return 5125;if(s===ui)return 5126;if(s===Ar)return n?5131:(a=t.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===mh)return 6406;if(s===mn)return 6408;if(s===vh)return 6409;if(s===_h)return 6410;if(s===hi)return 6402;if(s===Ki)return 34041;if(s===gh)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(s===Bo)return a=t.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===xh)return 6403;if(s===yh)return 36244;if(s===wh)return 33319;if(s===Mh)return 33320;if(s===Dh)return 36249;if(s===Gs||s===Vs||s===Hs||s===Ws)if(o===re)if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===Gs)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Vs)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Hs)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Ws)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=t.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===Gs)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Vs)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Hs)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Ws)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Ca||s===Ta||s===Fa||s===Pa)if(a=t.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===Ca)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Ta)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Fa)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Pa)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===bh)return a=t.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===La||s===Ra)if(a=t.get("WEBGL_compressed_texture_etc"),a!==null){if(s===La)return o===re?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===Ra)return o===re?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Na||s===Ia||s===za||s===Ba||s===Oa||s===Ua||s===ka||s===Ga||s===Va||s===Ha||s===Wa||s===qa||s===Xa||s===Za)if(a=t.get("WEBGL_compressed_texture_astc"),a!==null){if(s===Na)return o===re?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Ia)return o===re?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===za)return o===re?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Ba)return o===re?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Oa)return o===re?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Ua)return o===re?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===ka)return o===re?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Ga)return o===re?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Va)return o===re?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Ha)return o===re?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Wa)return o===re?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===qa)return o===re?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===Xa)return o===re?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Za)return o===re?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===ja)if(a=t.get("EXT_texture_compression_bptc"),a!==null){if(s===ja)return o===re?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===Zi?n?34042:(a=t.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class z0 extends Je{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class ci extends Te{constructor(){super(),this.isGroup=!0,this.type="Group"}}const B0={type:"move"};class go{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ci,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ci,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new q,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new q),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ci,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new q,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new q),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,s=null,o=null;const a=this._targetRay,l=this._grip,d=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(d&&t.hand){o=!0;for(const f of t.hand.values()){const p=e.getJointPose(f,n),v=this._getHandJoint(d,f);p!==null&&(v.matrix.fromArray(p.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=p.radius),v.visible=p!==null}const c=d.joints["index-finger-tip"],u=d.joints["thumb-tip"],h=c.position.distanceTo(u.position),m=.02,g=.005;d.inputState.pinching&&h>m+g?(d.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!d.inputState.pinching&&h<=m-g&&(d.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(s=e.getPose(t.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(B0)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=s!==null),d!==null&&(d.visible=o!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new ci;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class O0 extends Ke{constructor(t,e,n,i,s,o,a,l,d,c){if(c=c!==void 0?c:hi,c!==hi&&c!==Ki)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&c===hi&&(n=ai),n===void 0&&c===Ki&&(n=Zi),super(null,i,s,o,a,l,c,n,d),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:Ge,this.minFilter=l!==void 0?l:Ge,this.flipY=!1,this.generateMipmaps=!1}}class U0 extends Jn{constructor(t,e){super();const n=this;let i=null,s=1,o=null,a="local-floor",l=null,d=null,c=null,u=null,h=null,m=null;const g=e.getContextAttributes();let f=null,p=null;const v=[],M=[],_=new Set,w=new Map,D=new Je;D.layers.enable(1),D.viewport=new Re;const b=new Je;b.layers.enable(2),b.viewport=new Re;const C=[D,b],x=new z0;x.layers.enable(1),x.layers.enable(2);let S=null,F=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(it){let et=v[it];return et===void 0&&(et=new go,v[it]=et),et.getTargetRaySpace()},this.getControllerGrip=function(it){let et=v[it];return et===void 0&&(et=new go,v[it]=et),et.getGripSpace()},this.getHand=function(it){let et=v[it];return et===void 0&&(et=new go,v[it]=et),et.getHandSpace()};function U(it){const et=M.indexOf(it.inputSource);if(et===-1)return;const vt=v[et];vt!==void 0&&vt.dispatchEvent({type:it.type,data:it.inputSource})}function k(){i.removeEventListener("select",U),i.removeEventListener("selectstart",U),i.removeEventListener("selectend",U),i.removeEventListener("squeeze",U),i.removeEventListener("squeezestart",U),i.removeEventListener("squeezeend",U),i.removeEventListener("end",k),i.removeEventListener("inputsourceschange",G);for(let it=0;it<v.length;it++){const et=M[it];et!==null&&(M[it]=null,v[it].disconnect(et))}S=null,F=null,t.setRenderTarget(f),h=null,u=null,c=null,i=null,p=null,tt.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(it){s=it,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(it){a=it,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(it){l=it},this.getBaseLayer=function(){return u!==null?u:h},this.getBinding=function(){return c},this.getFrame=function(){return m},this.getSession=function(){return i},this.setSession=async function(it){if(i=it,i!==null){if(f=t.getRenderTarget(),i.addEventListener("select",U),i.addEventListener("selectstart",U),i.addEventListener("selectend",U),i.addEventListener("squeeze",U),i.addEventListener("squeezestart",U),i.addEventListener("squeezeend",U),i.addEventListener("end",k),i.addEventListener("inputsourceschange",G),g.xrCompatible!==!0&&await e.makeXRCompatible(),i.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const et={antialias:i.renderState.layers===void 0?g.antialias:!0,alpha:g.alpha,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s};h=new XRWebGLLayer(i,e,et),i.updateRenderState({baseLayer:h}),p=new _i(h.framebufferWidth,h.framebufferHeight,{format:mn,type:gi,encoding:t.outputEncoding,stencilBuffer:g.stencil})}else{let et=null,vt=null,B=null;g.depth&&(B=g.stencil?35056:33190,et=g.stencil?Ki:hi,vt=g.stencil?Zi:ai);const L={colorFormat:32856,depthFormat:B,scaleFactor:s};c=new XRWebGLBinding(i,e),u=c.createProjectionLayer(L),i.updateRenderState({layers:[u]}),p=new _i(u.textureWidth,u.textureHeight,{format:mn,type:gi,depthTexture:new O0(u.textureWidth,u.textureHeight,vt,void 0,void 0,void 0,void 0,void 0,void 0,et),stencilBuffer:g.stencil,encoding:t.outputEncoding,samples:g.antialias?4:0});const A=t.properties.get(p);A.__ignoreDepthValues=u.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await i.requestReferenceSpace(a),tt.setContext(i),tt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function G(it){for(let et=0;et<it.removed.length;et++){const vt=it.removed[et],B=M.indexOf(vt);B>=0&&(M[B]=null,v[B].disconnect(vt))}for(let et=0;et<it.added.length;et++){const vt=it.added[et];let B=M.indexOf(vt);if(B===-1){for(let A=0;A<v.length;A++)if(A>=M.length){M.push(vt),B=A;break}else if(M[A]===null){M[A]=vt,B=A;break}if(B===-1)break}const L=v[B];L&&L.connect(vt)}}const z=new q,Y=new q;function X(it,et,vt){z.setFromMatrixPosition(et.matrixWorld),Y.setFromMatrixPosition(vt.matrixWorld);const B=z.distanceTo(Y),L=et.projectionMatrix.elements,A=vt.projectionMatrix.elements,E=L[14]/(L[10]-1),H=L[14]/(L[10]+1),K=(L[9]+1)/L[5],V=(L[9]-1)/L[5],mt=(L[8]-1)/L[0],ft=(A[8]+1)/A[0],ht=E*mt,ct=E*ft,_t=B/(-mt+ft),bt=_t*-mt;et.matrixWorld.decompose(it.position,it.quaternion,it.scale),it.translateX(bt),it.translateZ(_t),it.matrixWorld.compose(it.position,it.quaternion,it.scale),it.matrixWorldInverse.copy(it.matrixWorld).invert();const Et=E+_t,$=H+_t,N=ht-bt,Tt=ct+(B-bt),zt=K*H/$*Et,R=V*H/$*Et;it.projectionMatrix.makePerspective(N,Tt,zt,R,Et,$)}function J(it,et){et===null?it.matrixWorld.copy(it.matrix):it.matrixWorld.multiplyMatrices(et.matrixWorld,it.matrix),it.matrixWorldInverse.copy(it.matrixWorld).invert()}this.updateCamera=function(it){if(i===null)return;x.near=b.near=D.near=it.near,x.far=b.far=D.far=it.far,(S!==x.near||F!==x.far)&&(i.updateRenderState({depthNear:x.near,depthFar:x.far}),S=x.near,F=x.far);const et=it.parent,vt=x.cameras;J(x,et);for(let L=0;L<vt.length;L++)J(vt[L],et);x.matrixWorld.decompose(x.position,x.quaternion,x.scale),it.matrix.copy(x.matrix),it.matrix.decompose(it.position,it.quaternion,it.scale);const B=it.children;for(let L=0,A=B.length;L<A;L++)B[L].updateMatrixWorld(!0);vt.length===2?X(x,D,b):x.projectionMatrix.copy(D.projectionMatrix)},this.getCamera=function(){return x},this.getFoveation=function(){if(u!==null)return u.fixedFoveation;if(h!==null)return h.fixedFoveation},this.setFoveation=function(it){u!==null&&(u.fixedFoveation=it),h!==null&&h.fixedFoveation!==void 0&&(h.fixedFoveation=it)},this.getPlanes=function(){return _};let I=null;function rt(it,et){if(d=et.getViewerPose(l||o),m=et,d!==null){const vt=d.views;h!==null&&(t.setRenderTargetFramebuffer(p,h.framebuffer),t.setRenderTarget(p));let B=!1;vt.length!==x.cameras.length&&(x.cameras.length=0,B=!0);for(let L=0;L<vt.length;L++){const A=vt[L];let E=null;if(h!==null)E=h.getViewport(A);else{const K=c.getViewSubImage(u,A);E=K.viewport,L===0&&(t.setRenderTargetTextures(p,K.colorTexture,u.ignoreDepthValues?void 0:K.depthStencilTexture),t.setRenderTarget(p))}let H=C[L];H===void 0&&(H=new Je,H.layers.enable(L),H.viewport=new Re,C[L]=H),H.matrix.fromArray(A.transform.matrix),H.projectionMatrix.fromArray(A.projectionMatrix),H.viewport.set(E.x,E.y,E.width,E.height),L===0&&x.matrix.copy(H.matrix),B===!0&&x.cameras.push(H)}}for(let vt=0;vt<v.length;vt++){const B=M[vt],L=v[vt];B!==null&&L!==void 0&&L.update(B,et,l||o)}if(I&&I(it,et),et.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:et.detectedPlanes});let vt=null;for(const B of _)et.detectedPlanes.has(B)||(vt===null&&(vt=[]),vt.push(B));if(vt!==null)for(const B of vt)_.delete(B),w.delete(B),n.dispatchEvent({type:"planeremoved",data:B});for(const B of et.detectedPlanes)if(!_.has(B))_.add(B),w.set(B,et.lastChangedTime),n.dispatchEvent({type:"planeadded",data:B});else{const L=w.get(B);B.lastChangedTime>L&&(w.set(B,B.lastChangedTime),n.dispatchEvent({type:"planechanged",data:B}))}}m=null}const tt=new Nc;tt.setAnimationLoop(rt),this.setAnimationLoop=function(it){I=it},this.dispose=function(){}}}function k0(r,t){function e(f,p){p.color.getRGB(f.fogColor.value,Fc(r)),p.isFog?(f.fogNear.value=p.near,f.fogFar.value=p.far):p.isFogExp2&&(f.fogDensity.value=p.density)}function n(f,p,v,M,_){p.isMeshBasicMaterial||p.isMeshLambertMaterial?i(f,p):p.isMeshToonMaterial?(i(f,p),c(f,p)):p.isMeshPhongMaterial?(i(f,p),d(f,p)):p.isMeshStandardMaterial?(i(f,p),u(f,p),p.isMeshPhysicalMaterial&&h(f,p,_)):p.isMeshMatcapMaterial?(i(f,p),m(f,p)):p.isMeshDepthMaterial?i(f,p):p.isMeshDistanceMaterial?(i(f,p),g(f,p)):p.isMeshNormalMaterial?i(f,p):p.isLineBasicMaterial?(s(f,p),p.isLineDashedMaterial&&o(f,p)):p.isPointsMaterial?a(f,p,v,M):p.isSpriteMaterial?l(f,p):p.isShadowMaterial?(f.color.value.copy(p.color),f.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function i(f,p){f.opacity.value=p.opacity,p.color&&f.diffuse.value.copy(p.color),p.emissive&&f.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(f.map.value=p.map),p.alphaMap&&(f.alphaMap.value=p.alphaMap),p.bumpMap&&(f.bumpMap.value=p.bumpMap,f.bumpScale.value=p.bumpScale,p.side===sn&&(f.bumpScale.value*=-1)),p.displacementMap&&(f.displacementMap.value=p.displacementMap,f.displacementScale.value=p.displacementScale,f.displacementBias.value=p.displacementBias),p.emissiveMap&&(f.emissiveMap.value=p.emissiveMap),p.normalMap&&(f.normalMap.value=p.normalMap,f.normalScale.value.copy(p.normalScale),p.side===sn&&f.normalScale.value.negate()),p.specularMap&&(f.specularMap.value=p.specularMap),p.alphaTest>0&&(f.alphaTest.value=p.alphaTest);const v=t.get(p).envMap;if(v&&(f.envMap.value=v,f.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,f.reflectivity.value=p.reflectivity,f.ior.value=p.ior,f.refractionRatio.value=p.refractionRatio),p.lightMap){f.lightMap.value=p.lightMap;const w=r.physicallyCorrectLights!==!0?Math.PI:1;f.lightMapIntensity.value=p.lightMapIntensity*w}p.aoMap&&(f.aoMap.value=p.aoMap,f.aoMapIntensity.value=p.aoMapIntensity);let M;p.map?M=p.map:p.specularMap?M=p.specularMap:p.displacementMap?M=p.displacementMap:p.normalMap?M=p.normalMap:p.bumpMap?M=p.bumpMap:p.roughnessMap?M=p.roughnessMap:p.metalnessMap?M=p.metalnessMap:p.alphaMap?M=p.alphaMap:p.emissiveMap?M=p.emissiveMap:p.clearcoatMap?M=p.clearcoatMap:p.clearcoatNormalMap?M=p.clearcoatNormalMap:p.clearcoatRoughnessMap?M=p.clearcoatRoughnessMap:p.iridescenceMap?M=p.iridescenceMap:p.iridescenceThicknessMap?M=p.iridescenceThicknessMap:p.specularIntensityMap?M=p.specularIntensityMap:p.specularColorMap?M=p.specularColorMap:p.transmissionMap?M=p.transmissionMap:p.thicknessMap?M=p.thicknessMap:p.sheenColorMap?M=p.sheenColorMap:p.sheenRoughnessMap&&(M=p.sheenRoughnessMap),M!==void 0&&(M.isWebGLRenderTarget&&(M=M.texture),M.matrixAutoUpdate===!0&&M.updateMatrix(),f.uvTransform.value.copy(M.matrix));let _;p.aoMap?_=p.aoMap:p.lightMap&&(_=p.lightMap),_!==void 0&&(_.isWebGLRenderTarget&&(_=_.texture),_.matrixAutoUpdate===!0&&_.updateMatrix(),f.uv2Transform.value.copy(_.matrix))}function s(f,p){f.diffuse.value.copy(p.color),f.opacity.value=p.opacity}function o(f,p){f.dashSize.value=p.dashSize,f.totalSize.value=p.dashSize+p.gapSize,f.scale.value=p.scale}function a(f,p,v,M){f.diffuse.value.copy(p.color),f.opacity.value=p.opacity,f.size.value=p.size*v,f.scale.value=M*.5,p.map&&(f.map.value=p.map),p.alphaMap&&(f.alphaMap.value=p.alphaMap),p.alphaTest>0&&(f.alphaTest.value=p.alphaTest);let _;p.map?_=p.map:p.alphaMap&&(_=p.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),f.uvTransform.value.copy(_.matrix))}function l(f,p){f.diffuse.value.copy(p.color),f.opacity.value=p.opacity,f.rotation.value=p.rotation,p.map&&(f.map.value=p.map),p.alphaMap&&(f.alphaMap.value=p.alphaMap),p.alphaTest>0&&(f.alphaTest.value=p.alphaTest);let v;p.map?v=p.map:p.alphaMap&&(v=p.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),f.uvTransform.value.copy(v.matrix))}function d(f,p){f.specular.value.copy(p.specular),f.shininess.value=Math.max(p.shininess,1e-4)}function c(f,p){p.gradientMap&&(f.gradientMap.value=p.gradientMap)}function u(f,p){f.roughness.value=p.roughness,f.metalness.value=p.metalness,p.roughnessMap&&(f.roughnessMap.value=p.roughnessMap),p.metalnessMap&&(f.metalnessMap.value=p.metalnessMap),t.get(p).envMap&&(f.envMapIntensity.value=p.envMapIntensity)}function h(f,p,v){f.ior.value=p.ior,p.sheen>0&&(f.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),f.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(f.sheenColorMap.value=p.sheenColorMap),p.sheenRoughnessMap&&(f.sheenRoughnessMap.value=p.sheenRoughnessMap)),p.clearcoat>0&&(f.clearcoat.value=p.clearcoat,f.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(f.clearcoatMap.value=p.clearcoatMap),p.clearcoatRoughnessMap&&(f.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap),p.clearcoatNormalMap&&(f.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),f.clearcoatNormalMap.value=p.clearcoatNormalMap,p.side===sn&&f.clearcoatNormalScale.value.negate())),p.iridescence>0&&(f.iridescence.value=p.iridescence,f.iridescenceIOR.value=p.iridescenceIOR,f.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],f.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(f.iridescenceMap.value=p.iridescenceMap),p.iridescenceThicknessMap&&(f.iridescenceThicknessMap.value=p.iridescenceThicknessMap)),p.transmission>0&&(f.transmission.value=p.transmission,f.transmissionSamplerMap.value=v.texture,f.transmissionSamplerSize.value.set(v.width,v.height),p.transmissionMap&&(f.transmissionMap.value=p.transmissionMap),f.thickness.value=p.thickness,p.thicknessMap&&(f.thicknessMap.value=p.thicknessMap),f.attenuationDistance.value=p.attenuationDistance,f.attenuationColor.value.copy(p.attenuationColor)),f.specularIntensity.value=p.specularIntensity,f.specularColor.value.copy(p.specularColor),p.specularIntensityMap&&(f.specularIntensityMap.value=p.specularIntensityMap),p.specularColorMap&&(f.specularColorMap.value=p.specularColorMap)}function m(f,p){p.matcap&&(f.matcap.value=p.matcap)}function g(f,p){f.referencePosition.value.copy(p.referencePosition),f.nearDistance.value=p.nearDistance,f.farDistance.value=p.farDistance}return{refreshFogUniforms:e,refreshMaterialUniforms:n}}function G0(r,t,e,n){let i={},s={},o=[];const a=e.isWebGL2?r.getParameter(35375):0;function l(M,_){const w=_.program;n.uniformBlockBinding(M,w)}function d(M,_){let w=i[M.id];w===void 0&&(g(M),w=c(M),i[M.id]=w,M.addEventListener("dispose",p));const D=_.program;n.updateUBOMapping(M,D);const b=t.render.frame;s[M.id]!==b&&(h(M),s[M.id]=b)}function c(M){const _=u();M.__bindingPointIndex=_;const w=r.createBuffer(),D=M.__size,b=M.usage;return r.bindBuffer(35345,w),r.bufferData(35345,D,b),r.bindBuffer(35345,null),r.bindBufferBase(35345,_,w),w}function u(){for(let M=0;M<a;M++)if(o.indexOf(M)===-1)return o.push(M),M;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function h(M){const _=i[M.id],w=M.uniforms,D=M.__cache;r.bindBuffer(35345,_);for(let b=0,C=w.length;b<C;b++){const x=w[b];if(m(x,b,D)===!0){const S=x.__offset,F=Array.isArray(x.value)?x.value:[x.value];let U=0;for(let k=0;k<F.length;k++){const G=F[k],z=f(G);typeof G=="number"?(x.__data[0]=G,r.bufferSubData(35345,S+U,x.__data)):G.isMatrix3?(x.__data[0]=G.elements[0],x.__data[1]=G.elements[1],x.__data[2]=G.elements[2],x.__data[3]=G.elements[0],x.__data[4]=G.elements[3],x.__data[5]=G.elements[4],x.__data[6]=G.elements[5],x.__data[7]=G.elements[0],x.__data[8]=G.elements[6],x.__data[9]=G.elements[7],x.__data[10]=G.elements[8],x.__data[11]=G.elements[0]):(G.toArray(x.__data,U),U+=z.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(35345,S,x.__data)}}r.bindBuffer(35345,null)}function m(M,_,w){const D=M.value;if(w[_]===void 0){if(typeof D=="number")w[_]=D;else{const b=Array.isArray(D)?D:[D],C=[];for(let x=0;x<b.length;x++)C.push(b[x].clone());w[_]=C}return!0}else if(typeof D=="number"){if(w[_]!==D)return w[_]=D,!0}else{const b=Array.isArray(w[_])?w[_]:[w[_]],C=Array.isArray(D)?D:[D];for(let x=0;x<b.length;x++){const S=b[x];if(S.equals(C[x])===!1)return S.copy(C[x]),!0}}return!1}function g(M){const _=M.uniforms;let w=0;const D=16;let b=0;for(let C=0,x=_.length;C<x;C++){const S=_[C],F={boundary:0,storage:0},U=Array.isArray(S.value)?S.value:[S.value];for(let k=0,G=U.length;k<G;k++){const z=U[k],Y=f(z);F.boundary+=Y.boundary,F.storage+=Y.storage}if(S.__data=new Float32Array(F.storage/Float32Array.BYTES_PER_ELEMENT),S.__offset=w,C>0){b=w%D;const k=D-b;b!==0&&k-F.boundary<0&&(w+=D-b,S.__offset=w)}w+=F.storage}return b=w%D,b>0&&(w+=D-b),M.__size=w,M.__cache={},this}function f(M){const _={boundary:0,storage:0};return typeof M=="number"?(_.boundary=4,_.storage=4):M.isVector2?(_.boundary=8,_.storage=8):M.isVector3||M.isColor?(_.boundary=16,_.storage=12):M.isVector4?(_.boundary=16,_.storage=16):M.isMatrix3?(_.boundary=48,_.storage=48):M.isMatrix4?(_.boundary=64,_.storage=64):M.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",M),_}function p(M){const _=M.target;_.removeEventListener("dispose",p);const w=o.indexOf(_.__bindingPointIndex);o.splice(w,1),r.deleteBuffer(i[_.id]),delete i[_.id],delete s[_.id]}function v(){for(const M in i)r.deleteBuffer(i[M]);o=[],i={},s={}}return{bind:l,update:d,dispose:v}}function V0(){const r=gs("canvas");return r.style.display="block",r}function aa(r={}){this.isWebGLRenderer=!0;const t=r.canvas!==void 0?r.canvas:V0(),e=r.context!==void 0?r.context:null,n=r.depth!==void 0?r.depth:!0,i=r.stencil!==void 0?r.stencil:!0,s=r.antialias!==void 0?r.antialias:!1,o=r.premultipliedAlpha!==void 0?r.premultipliedAlpha:!0,a=r.preserveDrawingBuffer!==void 0?r.preserveDrawingBuffer:!1,l=r.powerPreference!==void 0?r.powerPreference:"default",d=r.failIfMajorPerformanceCaveat!==void 0?r.failIfMajorPerformanceCaveat:!1;let c;e!==null?c=e.getContextAttributes().alpha:c=r.alpha!==void 0?r.alpha:!1;let u=null,h=null;const m=[],g=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=vi,this.physicallyCorrectLights=!1,this.toneMapping=Un,this.toneMappingExposure=1;const f=this;let p=!1,v=0,M=0,_=null,w=-1,D=null;const b=new Re,C=new Re;let x=null,S=t.width,F=t.height,U=1,k=null,G=null;const z=new Re(0,0,S,F),Y=new Re(0,0,S,F);let X=!1;const J=new Rc;let I=!1,rt=!1,tt=null;const it=new Jt,et=new Dt,vt=new q,B={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function L(){return _===null?U:1}let A=e;function E(P,ot){for(let pt=0;pt<P.length;pt++){const Q=P[pt],gt=t.getContext(Q,ot);if(gt!==null)return gt}return null}try{const P={alpha:!0,depth:n,stencil:i,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:d};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${ea}`),t.addEventListener("webglcontextlost",dt,!1),t.addEventListener("webglcontextrestored",Ft,!1),t.addEventListener("webglcontextcreationerror",It,!1),A===null){const ot=["webgl2","webgl","experimental-webgl"];if(f.isWebGL1Renderer===!0&&ot.shift(),A=E(ot,P),A===null)throw E(ot)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}A.getShaderPrecisionFormat===void 0&&(A.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(P){throw console.error("THREE.WebGLRenderer: "+P.message),P}let H,K,V,mt,ft,ht,ct,_t,bt,Et,$,N,Tt,zt,R,y,T,O,Z,nt,lt,st,W,at;function yt(){H=new Qp(A),K=new Xp(A,H,r),H.init(K),st=new I0(A,H,K),V=new R0(A,H,K),mt=new nm,ft=new x0,ht=new N0(A,H,V,ft,K,st,mt),ct=new jp(f),_t=new Kp(f),bt=new lf(A,K),W=new Wp(A,H,bt,K),Et=new tm(A,bt,mt,W),$=new om(A,Et,bt,mt),Z=new sm(A,K,ht),y=new Zp(ft),N=new _0(f,ct,_t,H,K,W,y),Tt=new k0(f,ft),zt=new w0,R=new A0(H,K),O=new Hp(f,ct,_t,V,$,c,o),T=new L0(f,$,K),at=new G0(A,mt,K,V),nt=new qp(A,H,mt,K),lt=new em(A,H,mt,K),mt.programs=N.programs,f.capabilities=K,f.extensions=H,f.properties=ft,f.renderLists=zt,f.shadowMap=T,f.state=V,f.info=mt}yt();const Mt=new U0(f,A);this.xr=Mt,this.getContext=function(){return A},this.getContextAttributes=function(){return A.getContextAttributes()},this.forceContextLoss=function(){const P=H.get("WEBGL_lose_context");P&&P.loseContext()},this.forceContextRestore=function(){const P=H.get("WEBGL_lose_context");P&&P.restoreContext()},this.getPixelRatio=function(){return U},this.setPixelRatio=function(P){P!==void 0&&(U=P,this.setSize(S,F,!1))},this.getSize=function(P){return P.set(S,F)},this.setSize=function(P,ot,pt){if(Mt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}S=P,F=ot,t.width=Math.floor(P*U),t.height=Math.floor(ot*U),pt!==!1&&(t.style.width=P+"px",t.style.height=ot+"px"),this.setViewport(0,0,P,ot)},this.getDrawingBufferSize=function(P){return P.set(S*U,F*U).floor()},this.setDrawingBufferSize=function(P,ot,pt){S=P,F=ot,U=pt,t.width=Math.floor(P*pt),t.height=Math.floor(ot*pt),this.setViewport(0,0,P,ot)},this.getCurrentViewport=function(P){return P.copy(b)},this.getViewport=function(P){return P.copy(z)},this.setViewport=function(P,ot,pt,Q){P.isVector4?z.set(P.x,P.y,P.z,P.w):z.set(P,ot,pt,Q),V.viewport(b.copy(z).multiplyScalar(U).floor())},this.getScissor=function(P){return P.copy(Y)},this.setScissor=function(P,ot,pt,Q){P.isVector4?Y.set(P.x,P.y,P.z,P.w):Y.set(P,ot,pt,Q),V.scissor(C.copy(Y).multiplyScalar(U).floor())},this.getScissorTest=function(){return X},this.setScissorTest=function(P){V.setScissorTest(X=P)},this.setOpaqueSort=function(P){k=P},this.setTransparentSort=function(P){G=P},this.getClearColor=function(P){return P.copy(O.getClearColor())},this.setClearColor=function(){O.setClearColor.apply(O,arguments)},this.getClearAlpha=function(){return O.getClearAlpha()},this.setClearAlpha=function(){O.setClearAlpha.apply(O,arguments)},this.clear=function(P=!0,ot=!0,pt=!0){let Q=0;P&&(Q|=16384),ot&&(Q|=256),pt&&(Q|=1024),A.clear(Q)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",dt,!1),t.removeEventListener("webglcontextrestored",Ft,!1),t.removeEventListener("webglcontextcreationerror",It,!1),zt.dispose(),R.dispose(),ft.dispose(),ct.dispose(),_t.dispose(),$.dispose(),W.dispose(),at.dispose(),N.dispose(),Mt.dispose(),Mt.removeEventListener("sessionstart",St),Mt.removeEventListener("sessionend",Ct),tt&&(tt.dispose(),tt=null),qt.stop()};function dt(P){P.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function Ft(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1;const P=mt.autoReset,ot=T.enabled,pt=T.autoUpdate,Q=T.needsUpdate,gt=T.type;yt(),mt.autoReset=P,T.enabled=ot,T.autoUpdate=pt,T.needsUpdate=Q,T.type=gt}function It(P){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",P.statusMessage)}function kt(P){const ot=P.target;ot.removeEventListener("dispose",kt),Wt(ot)}function Wt(P){j(P),ft.remove(P)}function j(P){const ot=ft.get(P).programs;ot!==void 0&&(ot.forEach(function(pt){N.releaseProgram(pt)}),P.isShaderMaterial&&N.releaseShaderCache(P))}this.renderBufferDirect=function(P,ot,pt,Q,gt,Rt){ot===null&&(ot=B);const Ot=gt.isMesh&&gt.matrixWorld.determinant()<0,Gt=Bs(P,ot,pt,Q,gt);V.setMaterial(Q,Ot);let Vt=pt.index,$t=1;Q.wireframe===!0&&(Vt=Et.getWireframeAttribute(pt),$t=2);const Zt=pt.drawRange,jt=pt.attributes.position;let le=Zt.start*$t,Oe=(Zt.start+Zt.count)*$t;Rt!==null&&(le=Math.max(le,Rt.start*$t),Oe=Math.min(Oe,(Rt.start+Rt.count)*$t)),Vt!==null?(le=Math.max(le,0),Oe=Math.min(Oe,Vt.count)):jt!=null&&(le=Math.max(le,0),Oe=Math.min(Oe,jt.count));const an=Oe-le;if(an<0||an===1/0)return;W.setup(gt,Q,Gt,pt,Vt);let En,he=nt;if(Vt!==null&&(En=bt.get(Vt),he=lt,he.setIndex(En)),gt.isMesh)Q.wireframe===!0?(V.setLineWidth(Q.wireframeLinewidth*L()),he.setMode(1)):he.setMode(4);else if(gt.isLine){let Yt=Q.linewidth;Yt===void 0&&(Yt=1),V.setLineWidth(Yt*L()),gt.isLineSegments?he.setMode(1):gt.isLineLoop?he.setMode(2):he.setMode(3)}else gt.isPoints?he.setMode(0):gt.isSprite&&he.setMode(4);if(gt.isInstancedMesh)he.renderInstances(le,an,gt.count);else if(pt.isInstancedBufferGeometry){const Yt=pt._maxInstanceCount!==void 0?pt._maxInstanceCount:1/0,or=Math.min(pt.instanceCount,Yt);he.renderInstances(le,an,or)}else he.render(le,an)},this.compile=function(P,ot){function pt(Q,gt,Rt){Q.transparent===!0&&Q.side===Ur?(Q.side=sn,Q.needsUpdate=!0,He(Q,gt,Rt),Q.side=mi,Q.needsUpdate=!0,He(Q,gt,Rt),Q.side=Ur):He(Q,gt,Rt)}h=R.get(P),h.init(),g.push(h),P.traverseVisible(function(Q){Q.isLight&&Q.layers.test(ot.layers)&&(h.pushLight(Q),Q.castShadow&&h.pushShadow(Q))}),h.setupLights(f.physicallyCorrectLights),P.traverse(function(Q){const gt=Q.material;if(gt)if(Array.isArray(gt))for(let Rt=0;Rt<gt.length;Rt++){const Ot=gt[Rt];pt(Ot,P,Q)}else pt(gt,P,Q)}),g.pop(),h=null};let ut=null;function wt(P){ut&&ut(P)}function St(){qt.stop()}function Ct(){qt.start()}const qt=new Nc;qt.setAnimationLoop(wt),typeof self<"u"&&qt.setContext(self),this.setAnimationLoop=function(P){ut=P,Mt.setAnimationLoop(P),P===null?qt.stop():qt.start()},Mt.addEventListener("sessionstart",St),Mt.addEventListener("sessionend",Ct),this.render=function(P,ot){if(ot!==void 0&&ot.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(p===!0)return;P.matrixWorldAutoUpdate===!0&&P.updateMatrixWorld(),ot.parent===null&&ot.matrixWorldAutoUpdate===!0&&ot.updateMatrixWorld(),Mt.enabled===!0&&Mt.isPresenting===!0&&(Mt.cameraAutoUpdate===!0&&Mt.updateCamera(ot),ot=Mt.getCamera()),P.isScene===!0&&P.onBeforeRender(f,P,ot,_),h=R.get(P,g.length),h.init(),g.push(h),it.multiplyMatrices(ot.projectionMatrix,ot.matrixWorldInverse),J.setFromProjectionMatrix(it),rt=this.localClippingEnabled,I=y.init(this.clippingPlanes,rt,ot),u=zt.get(P,m.length),u.init(),m.push(u),Kt(P,ot,0,f.sortObjects),u.finish(),f.sortObjects===!0&&u.sort(k,G),I===!0&&y.beginShadows();const pt=h.state.shadowsArray;if(T.render(pt,P,ot),I===!0&&y.endShadows(),this.info.autoReset===!0&&this.info.reset(),O.render(u,P),h.setupLights(f.physicallyCorrectLights),ot.isArrayCamera){const Q=ot.cameras;for(let gt=0,Rt=Q.length;gt<Rt;gt++){const Ot=Q[gt];se(u,P,Ot,Ot.viewport)}}else se(u,P,ot);_!==null&&(ht.updateMultisampleRenderTarget(_),ht.updateRenderTargetMipmap(_)),P.isScene===!0&&P.onAfterRender(f,P,ot),W.resetDefaultState(),w=-1,D=null,g.pop(),g.length>0?h=g[g.length-1]:h=null,m.pop(),m.length>0?u=m[m.length-1]:u=null};function Kt(P,ot,pt,Q){if(P.visible===!1)return;if(P.layers.test(ot.layers)){if(P.isGroup)pt=P.renderOrder;else if(P.isLOD)P.autoUpdate===!0&&P.update(ot);else if(P.isLight)h.pushLight(P),P.castShadow&&h.pushShadow(P);else if(P.isSprite){if(!P.frustumCulled||J.intersectsSprite(P)){Q&&vt.setFromMatrixPosition(P.matrixWorld).applyMatrix4(it);const Ot=$.update(P),Gt=P.material;Gt.visible&&u.push(P,Ot,Gt,pt,vt.z,null)}}else if((P.isMesh||P.isLine||P.isPoints)&&(P.isSkinnedMesh&&P.skeleton.frame!==mt.render.frame&&(P.skeleton.update(),P.skeleton.frame=mt.render.frame),!P.frustumCulled||J.intersectsObject(P))){Q&&vt.setFromMatrixPosition(P.matrixWorld).applyMatrix4(it);const Ot=$.update(P),Gt=P.material;if(Array.isArray(Gt)){const Vt=Ot.groups;for(let $t=0,Zt=Vt.length;$t<Zt;$t++){const jt=Vt[$t],le=Gt[jt.materialIndex];le&&le.visible&&u.push(P,Ot,le,pt,vt.z,jt)}}else Gt.visible&&u.push(P,Ot,Gt,pt,vt.z,null)}}const Rt=P.children;for(let Ot=0,Gt=Rt.length;Ot<Gt;Ot++)Kt(Rt[Ot],ot,pt,Q)}function se(P,ot,pt,Q){const gt=P.opaque,Rt=P.transmissive,Ot=P.transparent;h.setupLightsView(pt),Rt.length>0&&Qe(gt,ot,pt),Q&&V.viewport(b.copy(Q)),gt.length>0&&te(gt,ot,pt),Rt.length>0&&te(Rt,ot,pt),Ot.length>0&&te(Ot,ot,pt),V.buffers.depth.setTest(!0),V.buffers.depth.setMask(!0),V.buffers.color.setMask(!0),V.setPolygonOffset(!1)}function Qe(P,ot,pt){const Q=K.isWebGL2;tt===null&&(tt=new _i(1,1,{generateMipmaps:!0,type:H.has("EXT_color_buffer_half_float")?Ar:gi,minFilter:Er,samples:Q&&s===!0?4:0})),f.getDrawingBufferSize(et),Q?tt.setSize(et.x,et.y):tt.setSize(ms(et.x),ms(et.y));const gt=f.getRenderTarget();f.setRenderTarget(tt),f.clear();const Rt=f.toneMapping;f.toneMapping=Un,te(P,ot,pt),f.toneMapping=Rt,ht.updateMultisampleRenderTarget(tt),ht.updateRenderTargetMipmap(tt),f.setRenderTarget(gt)}function te(P,ot,pt){const Q=ot.isScene===!0?ot.overrideMaterial:null;for(let gt=0,Rt=P.length;gt<Rt;gt++){const Ot=P[gt],Gt=Ot.object,Vt=Ot.geometry,$t=Q===null?Ot.material:Q,Zt=Ot.group;Gt.layers.test(pt.layers)&&on(Gt,ot,pt,Vt,$t,Zt)}}function on(P,ot,pt,Q,gt,Rt){P.onBeforeRender(f,ot,pt,Q,gt,Rt),P.modelViewMatrix.multiplyMatrices(pt.matrixWorldInverse,P.matrixWorld),P.normalMatrix.getNormalMatrix(P.modelViewMatrix),gt.onBeforeRender(f,ot,pt,Q,P,Rt),gt.transparent===!0&&gt.side===Ur?(gt.side=sn,gt.needsUpdate=!0,f.renderBufferDirect(pt,ot,Q,gt,P,Rt),gt.side=mi,gt.needsUpdate=!0,f.renderBufferDirect(pt,ot,Q,gt,P,Rt),gt.side=Ur):f.renderBufferDirect(pt,ot,Q,gt,P,Rt),P.onAfterRender(f,ot,pt,Q,gt,Rt)}function He(P,ot,pt){ot.isScene!==!0&&(ot=B);const Q=ft.get(P),gt=h.state.lights,Rt=h.state.shadowsArray,Ot=gt.state.version,Gt=N.getParameters(P,gt.state,Rt,ot,pt),Vt=N.getProgramCacheKey(Gt);let $t=Q.programs;Q.environment=P.isMeshStandardMaterial?ot.environment:null,Q.fog=ot.fog,Q.envMap=(P.isMeshStandardMaterial?_t:ct).get(P.envMap||Q.environment),$t===void 0&&(P.addEventListener("dispose",kt),$t=new Map,Q.programs=$t);let Zt=$t.get(Vt);if(Zt!==void 0){if(Q.currentProgram===Zt&&Q.lightsStateVersion===Ot)return Br(P,Gt),Zt}else Gt.uniforms=N.getUniforms(P),P.onBuild(pt,Gt,f),P.onBeforeCompile(Gt,f),Zt=N.acquireProgram(Gt,Vt),$t.set(Vt,Zt),Q.uniforms=Gt.uniforms;const jt=Q.uniforms;(!P.isShaderMaterial&&!P.isRawShaderMaterial||P.clipping===!0)&&(jt.clippingPlanes=y.uniform),Br(P,Gt),Q.needsLights=Us(P),Q.lightsStateVersion=Ot,Q.needsLights&&(jt.ambientLightColor.value=gt.state.ambient,jt.lightProbe.value=gt.state.probe,jt.directionalLights.value=gt.state.directional,jt.directionalLightShadows.value=gt.state.directionalShadow,jt.spotLights.value=gt.state.spot,jt.spotLightShadows.value=gt.state.spotShadow,jt.rectAreaLights.value=gt.state.rectArea,jt.ltc_1.value=gt.state.rectAreaLTC1,jt.ltc_2.value=gt.state.rectAreaLTC2,jt.pointLights.value=gt.state.point,jt.pointLightShadows.value=gt.state.pointShadow,jt.hemisphereLights.value=gt.state.hemi,jt.directionalShadowMap.value=gt.state.directionalShadowMap,jt.directionalShadowMatrix.value=gt.state.directionalShadowMatrix,jt.spotShadowMap.value=gt.state.spotShadowMap,jt.spotLightMatrix.value=gt.state.spotLightMatrix,jt.spotLightMap.value=gt.state.spotLightMap,jt.pointShadowMap.value=gt.state.pointShadowMap,jt.pointShadowMatrix.value=gt.state.pointShadowMatrix);const le=Zt.getUniforms(),Oe=fs.seqWithValue(le.seq,jt);return Q.currentProgram=Zt,Q.uniformsList=Oe,Zt}function Br(P,ot){const pt=ft.get(P);pt.outputEncoding=ot.outputEncoding,pt.instancing=ot.instancing,pt.skinning=ot.skinning,pt.morphTargets=ot.morphTargets,pt.morphNormals=ot.morphNormals,pt.morphColors=ot.morphColors,pt.morphTargetsCount=ot.morphTargetsCount,pt.numClippingPlanes=ot.numClippingPlanes,pt.numIntersection=ot.numClipIntersection,pt.vertexAlphas=ot.vertexAlphas,pt.vertexTangents=ot.vertexTangents,pt.toneMapping=ot.toneMapping}function Bs(P,ot,pt,Q,gt){ot.isScene!==!0&&(ot=B),ht.resetTextureUnits();const Rt=ot.fog,Ot=Q.isMeshStandardMaterial?ot.environment:null,Gt=_===null?f.outputEncoding:_.isXRRenderTarget===!0?_.texture.encoding:vi,Vt=(Q.isMeshStandardMaterial?_t:ct).get(Q.envMap||Ot),$t=Q.vertexColors===!0&&!!pt.attributes.color&&pt.attributes.color.itemSize===4,Zt=!!Q.normalMap&&!!pt.attributes.tangent,jt=!!pt.morphAttributes.position,le=!!pt.morphAttributes.normal,Oe=!!pt.morphAttributes.color,an=Q.toneMapped?f.toneMapping:Un,En=pt.morphAttributes.position||pt.morphAttributes.normal||pt.morphAttributes.color,he=En!==void 0?En.length:0,Yt=ft.get(Q),or=h.state.lights;if(I===!0&&(rt===!0||P!==D)){const Ae=P===D&&Q.id===w;y.setState(Q,P,Ae)}let ve=!1;Q.version===Yt.__version?(Yt.needsLights&&Yt.lightsStateVersion!==or.state.version||Yt.outputEncoding!==Gt||gt.isInstancedMesh&&Yt.instancing===!1||!gt.isInstancedMesh&&Yt.instancing===!0||gt.isSkinnedMesh&&Yt.skinning===!1||!gt.isSkinnedMesh&&Yt.skinning===!0||Yt.envMap!==Vt||Q.fog===!0&&Yt.fog!==Rt||Yt.numClippingPlanes!==void 0&&(Yt.numClippingPlanes!==y.numPlanes||Yt.numIntersection!==y.numIntersection)||Yt.vertexAlphas!==$t||Yt.vertexTangents!==Zt||Yt.morphTargets!==jt||Yt.morphNormals!==le||Yt.morphColors!==Oe||Yt.toneMapping!==an||K.isWebGL2===!0&&Yt.morphTargetsCount!==he)&&(ve=!0):(ve=!0,Yt.__version=Q.version);let An=Yt.currentProgram;ve===!0&&(An=He(Q,ot,gt));let kn=!1,ye=!1,pe=!1;const Ee=An.getUniforms(),Cn=Yt.uniforms;if(V.useProgram(An.program)&&(kn=!0,ye=!0,pe=!0),Q.id!==w&&(w=Q.id,ye=!0),kn||D!==P){if(Ee.setValue(A,"projectionMatrix",P.projectionMatrix),K.logarithmicDepthBuffer&&Ee.setValue(A,"logDepthBufFC",2/(Math.log(P.far+1)/Math.LN2)),D!==P&&(D=P,ye=!0,pe=!0),Q.isShaderMaterial||Q.isMeshPhongMaterial||Q.isMeshToonMaterial||Q.isMeshStandardMaterial||Q.envMap){const Ae=Ee.map.cameraPosition;Ae!==void 0&&Ae.setValue(A,vt.setFromMatrixPosition(P.matrixWorld))}(Q.isMeshPhongMaterial||Q.isMeshToonMaterial||Q.isMeshLambertMaterial||Q.isMeshBasicMaterial||Q.isMeshStandardMaterial||Q.isShaderMaterial)&&Ee.setValue(A,"isOrthographic",P.isOrthographicCamera===!0),(Q.isMeshPhongMaterial||Q.isMeshToonMaterial||Q.isMeshLambertMaterial||Q.isMeshBasicMaterial||Q.isMeshStandardMaterial||Q.isShaderMaterial||Q.isShadowMaterial||gt.isSkinnedMesh)&&Ee.setValue(A,"viewMatrix",P.matrixWorldInverse)}if(gt.isSkinnedMesh){Ee.setOptional(A,gt,"bindMatrix"),Ee.setOptional(A,gt,"bindMatrixInverse");const Ae=gt.skeleton;Ae&&(K.floatVertexTextures?(Ae.boneTexture===null&&Ae.computeBoneTexture(),Ee.setValue(A,"boneTexture",Ae.boneTexture,ht),Ee.setValue(A,"boneTextureSize",Ae.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Gn=pt.morphAttributes;if((Gn.position!==void 0||Gn.normal!==void 0||Gn.color!==void 0&&K.isWebGL2===!0)&&Z.update(gt,pt,Q,An),(ye||Yt.receiveShadow!==gt.receiveShadow)&&(Yt.receiveShadow=gt.receiveShadow,Ee.setValue(A,"receiveShadow",gt.receiveShadow)),Q.isMeshGouraudMaterial&&Q.envMap!==null&&(Cn.envMap.value=Vt,Cn.flipEnvMap.value=Vt.isCubeTexture&&Vt.isRenderTargetTexture===!1?-1:1),ye&&(Ee.setValue(A,"toneMappingExposure",f.toneMappingExposure),Yt.needsLights&&Os(Cn,pe),Rt&&Q.fog===!0&&Tt.refreshFogUniforms(Cn,Rt),Tt.refreshMaterialUniforms(Cn,Q,U,F,tt),fs.upload(A,Yt.uniformsList,Cn,ht)),Q.isShaderMaterial&&Q.uniformsNeedUpdate===!0&&(fs.upload(A,Yt.uniformsList,Cn,ht),Q.uniformsNeedUpdate=!1),Q.isSpriteMaterial&&Ee.setValue(A,"center",gt.center),Ee.setValue(A,"modelViewMatrix",gt.modelViewMatrix),Ee.setValue(A,"normalMatrix",gt.normalMatrix),Ee.setValue(A,"modelMatrix",gt.matrixWorld),Q.isShaderMaterial||Q.isRawShaderMaterial){const Ae=Q.uniformsGroups;for(let bi=0,Or=Ae.length;bi<Or;bi++)if(K.isWebGL2){const Tn=Ae[bi];at.update(Tn,An),at.bind(Tn,An)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return An}function Os(P,ot){P.ambientLightColor.needsUpdate=ot,P.lightProbe.needsUpdate=ot,P.directionalLights.needsUpdate=ot,P.directionalLightShadows.needsUpdate=ot,P.pointLights.needsUpdate=ot,P.pointLightShadows.needsUpdate=ot,P.spotLights.needsUpdate=ot,P.spotLightShadows.needsUpdate=ot,P.rectAreaLights.needsUpdate=ot,P.hemisphereLights.needsUpdate=ot}function Us(P){return P.isMeshLambertMaterial||P.isMeshToonMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.isShadowMaterial||P.isShaderMaterial&&P.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return _},this.setRenderTargetTextures=function(P,ot,pt){ft.get(P.texture).__webglTexture=ot,ft.get(P.depthTexture).__webglTexture=pt;const Q=ft.get(P);Q.__hasExternalTextures=!0,Q.__hasExternalTextures&&(Q.__autoAllocateDepthBuffer=pt===void 0,Q.__autoAllocateDepthBuffer||H.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Q.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(P,ot){const pt=ft.get(P);pt.__webglFramebuffer=ot,pt.__useDefaultFramebuffer=ot===void 0},this.setRenderTarget=function(P,ot=0,pt=0){_=P,v=ot,M=pt;let Q=!0,gt=null,Rt=!1,Ot=!1;if(P){const Vt=ft.get(P);Vt.__useDefaultFramebuffer!==void 0?(V.bindFramebuffer(36160,null),Q=!1):Vt.__webglFramebuffer===void 0?ht.setupRenderTarget(P):Vt.__hasExternalTextures&&ht.rebindTextures(P,ft.get(P.texture).__webglTexture,ft.get(P.depthTexture).__webglTexture);const $t=P.texture;($t.isData3DTexture||$t.isDataArrayTexture||$t.isCompressedArrayTexture)&&(Ot=!0);const Zt=ft.get(P).__webglFramebuffer;P.isWebGLCubeRenderTarget?(gt=Zt[ot],Rt=!0):K.isWebGL2&&P.samples>0&&ht.useMultisampledRTT(P)===!1?gt=ft.get(P).__webglMultisampledFramebuffer:gt=Zt,b.copy(P.viewport),C.copy(P.scissor),x=P.scissorTest}else b.copy(z).multiplyScalar(U).floor(),C.copy(Y).multiplyScalar(U).floor(),x=X;if(V.bindFramebuffer(36160,gt)&&K.drawBuffers&&Q&&V.drawBuffers(P,gt),V.viewport(b),V.scissor(C),V.setScissorTest(x),Rt){const Vt=ft.get(P.texture);A.framebufferTexture2D(36160,36064,34069+ot,Vt.__webglTexture,pt)}else if(Ot){const Vt=ft.get(P.texture),$t=ot||0;A.framebufferTextureLayer(36160,36064,Vt.__webglTexture,pt||0,$t)}w=-1},this.readRenderTargetPixels=function(P,ot,pt,Q,gt,Rt,Ot){if(!(P&&P.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Gt=ft.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&Ot!==void 0&&(Gt=Gt[Ot]),Gt){V.bindFramebuffer(36160,Gt);try{const Vt=P.texture,$t=Vt.format,Zt=Vt.type;if($t!==mn&&st.convert($t)!==A.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const jt=Zt===Ar&&(H.has("EXT_color_buffer_half_float")||K.isWebGL2&&H.has("EXT_color_buffer_float"));if(Zt!==gi&&st.convert(Zt)!==A.getParameter(35738)&&!(Zt===ui&&(K.isWebGL2||H.has("OES_texture_float")||H.has("WEBGL_color_buffer_float")))&&!jt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ot>=0&&ot<=P.width-Q&&pt>=0&&pt<=P.height-gt&&A.readPixels(ot,pt,Q,gt,st.convert($t),st.convert(Zt),Rt)}finally{const Vt=_!==null?ft.get(_).__webglFramebuffer:null;V.bindFramebuffer(36160,Vt)}}},this.copyFramebufferToTexture=function(P,ot,pt=0){const Q=Math.pow(2,-pt),gt=Math.floor(ot.image.width*Q),Rt=Math.floor(ot.image.height*Q);ht.setTexture2D(ot,0),A.copyTexSubImage2D(3553,pt,0,0,P.x,P.y,gt,Rt),V.unbindTexture()},this.copyTextureToTexture=function(P,ot,pt,Q=0){const gt=ot.image.width,Rt=ot.image.height,Ot=st.convert(pt.format),Gt=st.convert(pt.type);ht.setTexture2D(pt,0),A.pixelStorei(37440,pt.flipY),A.pixelStorei(37441,pt.premultiplyAlpha),A.pixelStorei(3317,pt.unpackAlignment),ot.isDataTexture?A.texSubImage2D(3553,Q,P.x,P.y,gt,Rt,Ot,Gt,ot.image.data):ot.isCompressedTexture?A.compressedTexSubImage2D(3553,Q,P.x,P.y,ot.mipmaps[0].width,ot.mipmaps[0].height,Ot,ot.mipmaps[0].data):A.texSubImage2D(3553,Q,P.x,P.y,Ot,Gt,ot.image),Q===0&&pt.generateMipmaps&&A.generateMipmap(3553),V.unbindTexture()},this.copyTextureToTexture3D=function(P,ot,pt,Q,gt=0){if(f.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Rt=P.max.x-P.min.x+1,Ot=P.max.y-P.min.y+1,Gt=P.max.z-P.min.z+1,Vt=st.convert(Q.format),$t=st.convert(Q.type);let Zt;if(Q.isData3DTexture)ht.setTexture3D(Q,0),Zt=32879;else if(Q.isDataArrayTexture)ht.setTexture2DArray(Q,0),Zt=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}A.pixelStorei(37440,Q.flipY),A.pixelStorei(37441,Q.premultiplyAlpha),A.pixelStorei(3317,Q.unpackAlignment);const jt=A.getParameter(3314),le=A.getParameter(32878),Oe=A.getParameter(3316),an=A.getParameter(3315),En=A.getParameter(32877),he=pt.isCompressedTexture?pt.mipmaps[0]:pt.image;A.pixelStorei(3314,he.width),A.pixelStorei(32878,he.height),A.pixelStorei(3316,P.min.x),A.pixelStorei(3315,P.min.y),A.pixelStorei(32877,P.min.z),pt.isDataTexture||pt.isData3DTexture?A.texSubImage3D(Zt,gt,ot.x,ot.y,ot.z,Rt,Ot,Gt,Vt,$t,he.data):pt.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),A.compressedTexSubImage3D(Zt,gt,ot.x,ot.y,ot.z,Rt,Ot,Gt,Vt,he.data)):A.texSubImage3D(Zt,gt,ot.x,ot.y,ot.z,Rt,Ot,Gt,Vt,$t,he),A.pixelStorei(3314,jt),A.pixelStorei(32878,le),A.pixelStorei(3316,Oe),A.pixelStorei(3315,an),A.pixelStorei(32877,En),gt===0&&Q.generateMipmaps&&A.generateMipmap(Zt),V.unbindTexture()},this.initTexture=function(P){P.isCubeTexture?ht.setTextureCube(P,0):P.isData3DTexture?ht.setTexture3D(P,0):P.isDataArrayTexture||P.isCompressedArrayTexture?ht.setTexture2DArray(P,0):ht.setTexture2D(P,0),V.unbindTexture()},this.resetState=function(){v=0,M=0,_=null,V.reset(),W.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class H0 extends aa{}H0.prototype.isWebGL1Renderer=!0;class ua{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new Xt(t),this.density=e}clone(){return new ua(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Uc extends Te{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.backgroundIntensity=this.backgroundIntensity),e}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(t){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=t}}class di extends ir{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Xt(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Fu=new q,Pu=new q,Lu=new Jt,vo=new ia,rs=new Nr;class wr extends Te{constructor(t=new me,e=new di){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,s=e.count;i<s;i++)Fu.fromBufferAttribute(e,i-1),Pu.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=Fu.distanceTo(Pu);t.setAttribute("lineDistance",new Qt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),rs.copy(n.boundingSphere),rs.applyMatrix4(i),rs.radius+=s,t.ray.intersectsSphere(rs)===!1)return;Lu.copy(i).invert(),vo.copy(t.ray).applyMatrix4(Lu);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,d=new q,c=new q,u=new q,h=new q,m=this.isLineSegments?2:1,g=n.index,p=n.attributes.position;if(g!==null){const v=Math.max(0,o.start),M=Math.min(g.count,o.start+o.count);for(let _=v,w=M-1;_<w;_+=m){const D=g.getX(_),b=g.getX(_+1);if(d.fromBufferAttribute(p,D),c.fromBufferAttribute(p,b),vo.distanceSqToSegment(d,c,h,u)>l)continue;h.applyMatrix4(this.matrixWorld);const x=t.ray.origin.distanceTo(h);x<t.near||x>t.far||e.push({distance:x,point:u.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,o.start),M=Math.min(p.count,o.start+o.count);for(let _=v,w=M-1;_<w;_+=m){if(d.fromBufferAttribute(p,_),c.fromBufferAttribute(p,_+1),vo.distanceSqToSegment(d,c,h,u)>l)continue;h.applyMatrix4(this.matrixWorld);const b=t.ray.origin.distanceTo(h);b<t.near||b>t.far||e.push({distance:b,point:u.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}const Ru=new q,Nu=new q;class kc extends wr{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,s=e.count;i<s;i+=2)Ru.fromBufferAttribute(e,i),Nu.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Ru.distanceTo(Nu);t.setAttribute("lineDistance",new Qt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Sn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),s=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),s+=n.distanceTo(i),e.push(s),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const s=n.length;let o;e?o=e:o=t*n[s-1];let a=0,l=s-1,d;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),d=n[i]-o,d<0)a=i+1;else if(d>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(s-1);const c=n[i],h=n[i+1]-c,m=(o-c)/h;return(i+m)/(s-1)}getTangent(t,e){let i=t-1e-4,s=t+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),l=e||(o.isVector2?new Dt:new q);return l.copy(a).sub(o).normalize(),l}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new q,i=[],s=[],o=[],a=new q,l=new Jt;for(let m=0;m<=t;m++){const g=m/t;i[m]=this.getTangentAt(g,new q)}s[0]=new q,o[0]=new q;let d=Number.MAX_VALUE;const c=Math.abs(i[0].x),u=Math.abs(i[0].y),h=Math.abs(i[0].z);c<=d&&(d=c,n.set(1,0,0)),u<=d&&(d=u,n.set(0,1,0)),h<=d&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let m=1;m<=t;m++){if(s[m]=s[m-1].clone(),o[m]=o[m-1].clone(),a.crossVectors(i[m-1],i[m]),a.length()>Number.EPSILON){a.normalize();const g=Math.acos(ze(i[m-1].dot(i[m]),-1,1));s[m].applyMatrix4(l.makeRotationAxis(a,g))}o[m].crossVectors(i[m],s[m])}if(e===!0){let m=Math.acos(ze(s[0].dot(s[t]),-1,1));m/=t,i[0].dot(a.crossVectors(s[0],s[t]))>0&&(m=-m);for(let g=1;g<=t;g++)s[g].applyMatrix4(l.makeRotationAxis(i[g],m*g)),o[g].crossVectors(i[g],s[g])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class li extends Sn{constructor(t=0,e=0,n=1,i=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(t,e){const n=e||new Dt,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+t*s;let l=this.aX+this.xRadius*Math.cos(a),d=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const c=Math.cos(this.aRotation),u=Math.sin(this.aRotation),h=l-this.aX,m=d-this.aY;l=h*c-m*u+this.aX,d=h*u+m*c+this.aY}return n.set(l,d)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class W0 extends li{constructor(t,e,n,i,s,o){super(t,e,n,n,i,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function ca(){let r=0,t=0,e=0,n=0;function i(s,o,a,l){r=s,t=a,e=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,d){i(o,a,d*(a-s),d*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,d,c,u){let h=(o-s)/d-(a-s)/(d+c)+(a-o)/c,m=(a-o)/c-(l-o)/(c+u)+(l-a)/u;h*=c,m*=c,i(o,a,h,m)},calc:function(s){const o=s*s,a=o*s;return r+t*s+e*o+n*a}}}const ss=new q,_o=new ca,xo=new ca,yo=new ca;class q0 extends Sn{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new q){const n=e,i=this.points,s=i.length,o=(s-(this.closed?0:1))*t;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let d,c;this.closed||a>0?d=i[(a-1)%s]:(ss.subVectors(i[0],i[1]).add(i[0]),d=ss);const u=i[a%s],h=i[(a+1)%s];if(this.closed||a+2<s?c=i[(a+2)%s]:(ss.subVectors(i[s-1],i[s-2]).add(i[s-1]),c=ss),this.curveType==="centripetal"||this.curveType==="chordal"){const m=this.curveType==="chordal"?.5:.25;let g=Math.pow(d.distanceToSquared(u),m),f=Math.pow(u.distanceToSquared(h),m),p=Math.pow(h.distanceToSquared(c),m);f<1e-4&&(f=1),g<1e-4&&(g=f),p<1e-4&&(p=f),_o.initNonuniformCatmullRom(d.x,u.x,h.x,c.x,g,f,p),xo.initNonuniformCatmullRom(d.y,u.y,h.y,c.y,g,f,p),yo.initNonuniformCatmullRom(d.z,u.z,h.z,c.z,g,f,p)}else this.curveType==="catmullrom"&&(_o.initCatmullRom(d.x,u.x,h.x,c.x,this.tension),xo.initCatmullRom(d.y,u.y,h.y,c.y,this.tension),yo.initCatmullRom(d.z,u.z,h.z,c.z,this.tension));return n.set(_o.calc(l),xo.calc(l),yo.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new q().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Iu(r,t,e,n,i){const s=(n-t)*.5,o=(i-e)*.5,a=r*r,l=r*a;return(2*e-2*n+s+o)*l+(-3*e+3*n-2*s-o)*a+s*r+e}function X0(r,t){const e=1-r;return e*e*t}function Z0(r,t){return 2*(1-r)*r*t}function j0(r,t){return r*r*t}function Mr(r,t,e,n){return X0(r,t)+Z0(r,e)+j0(r,n)}function Y0(r,t){const e=1-r;return e*e*e*t}function $0(r,t){const e=1-r;return 3*e*e*r*t}function J0(r,t){return 3*(1-r)*r*r*t}function K0(r,t){return r*r*r*t}function Dr(r,t,e,n,i){return Y0(r,t)+$0(r,e)+J0(r,n)+K0(r,i)}class Gc extends Sn{constructor(t=new Dt,e=new Dt,n=new Dt,i=new Dt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new Dt){const n=e,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Dr(t,i.x,s.x,o.x,a.x),Dr(t,i.y,s.y,o.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Q0 extends Sn{constructor(t=new q,e=new q,n=new q,i=new q){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new q){const n=e,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Dr(t,i.x,s.x,o.x,a.x),Dr(t,i.y,s.y,o.y,a.y),Dr(t,i.z,s.z,o.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class la extends Sn{constructor(t=new Dt,e=new Dt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new Dt){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new Dt;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class tg extends Sn{constructor(t=new q,e=new q){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new q){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Vc extends Sn{constructor(t=new Dt,e=new Dt,n=new Dt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Dt){const n=e,i=this.v0,s=this.v1,o=this.v2;return n.set(Mr(t,i.x,s.x,o.x),Mr(t,i.y,s.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class eg extends Sn{constructor(t=new q,e=new q,n=new q){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new q){const n=e,i=this.v0,s=this.v1,o=this.v2;return n.set(Mr(t,i.x,s.x,o.x),Mr(t,i.y,s.y,o.y),Mr(t,i.z,s.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Hc extends Sn{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new Dt){const n=e,i=this.points,s=(i.length-1)*t,o=Math.floor(s),a=s-o,l=i[o===0?o:o-1],d=i[o],c=i[o>i.length-2?i.length-1:o+1],u=i[o>i.length-3?i.length-1:o+2];return n.set(Iu(a,l.x,d.x,c.x,u.x),Iu(a,l.y,d.y,c.y,u.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new Dt().fromArray(i))}return this}}var ng=Object.freeze({__proto__:null,ArcCurve:W0,CatmullRomCurve3:q0,CubicBezierCurve:Gc,CubicBezierCurve3:Q0,EllipseCurve:li,LineCurve:la,LineCurve3:tg,QuadraticBezierCurve:Vc,QuadraticBezierCurve3:eg,SplineCurve:Hc});class ig extends Sn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new la(e,t))}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,a=this.curves[s],l=a.getLength(),d=l===0?0:1-o/l;return a.getPointAt(d,e)}s++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],a=o.isEllipseCurve?t*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?t*o.points.length:t,l=o.getPoints(a);for(let d=0;d<l.length;d++){const c=l[d];n&&n.equals(c)||(e.push(c),n=c)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new ng[i.type]().fromJSON(i))}return this}}class ji extends ig{constructor(t){super(),this.type="Path",this.currentPoint=new Dt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new la(this.currentPoint.clone(),new Dt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const s=new Vc(this.currentPoint.clone(),new Dt(t,e),new Dt(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,s,o){const a=new Gc(this.currentPoint.clone(),new Dt(t,e),new Dt(n,i),new Dt(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Hc(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+a,e+l,n,i,s,o),this}absarc(t,e,n,i,s,o){return this.absellipse(t,e,n,n,i,s,o),this}ellipse(t,e,n,i,s,o,a,l){const d=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+d,e+c,n,i,s,o,a,l),this}absellipse(t,e,n,i,s,o,a,l){const d=new li(t,e,n,i,s,o,a,l);if(this.curves.length>0){const u=d.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(d);const c=d.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class ha extends me{constructor(t=1,e=1,n=1,i=32,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const d=this;i=Math.floor(i),s=Math.floor(s);const c=[],u=[],h=[],m=[];let g=0;const f=[],p=n/2;let v=0;M(),o===!1&&(t>0&&_(!0),e>0&&_(!1)),this.setIndex(c),this.setAttribute("position",new Qt(u,3)),this.setAttribute("normal",new Qt(h,3)),this.setAttribute("uv",new Qt(m,2));function M(){const w=new q,D=new q;let b=0;const C=(e-t)/n;for(let x=0;x<=s;x++){const S=[],F=x/s,U=F*(e-t)+t;for(let k=0;k<=i;k++){const G=k/i,z=G*l+a,Y=Math.sin(z),X=Math.cos(z);D.x=U*Y,D.y=-F*n+p,D.z=U*X,u.push(D.x,D.y,D.z),w.set(Y,C,X).normalize(),h.push(w.x,w.y,w.z),m.push(G,1-F),S.push(g++)}f.push(S)}for(let x=0;x<i;x++)for(let S=0;S<s;S++){const F=f[S][x],U=f[S+1][x],k=f[S+1][x+1],G=f[S][x+1];c.push(F,U,G),c.push(U,k,G),b+=6}d.addGroup(v,b,0),v+=b}function _(w){const D=g,b=new Dt,C=new q;let x=0;const S=w===!0?t:e,F=w===!0?1:-1;for(let k=1;k<=i;k++)u.push(0,p*F,0),h.push(0,F,0),m.push(.5,.5),g++;const U=g;for(let k=0;k<=i;k++){const z=k/i*l+a,Y=Math.cos(z),X=Math.sin(z);C.x=S*X,C.y=p*F,C.z=S*Y,u.push(C.x,C.y,C.z),h.push(0,F,0),b.x=Y*.5+.5,b.y=X*.5*F+.5,m.push(b.x,b.y),g++}for(let k=0;k<i;k++){const G=D+k,z=U+k;w===!0?c.push(z,z+1,G):c.push(z+1,z,G),x+=3}d.addGroup(v,x,w===!0?1:2),v+=x}}static fromJSON(t){return new ha(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class br extends ji{constructor(t){super(t),this.uuid=Mi(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new ji().fromJSON(i))}return this}}const rg={triangulate:function(r,t,e=2){const n=t&&t.length,i=n?t[0]*e:r.length;let s=Wc(r,0,i,e,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,d,c,u,h,m;if(n&&(s=cg(r,t,s,e)),r.length>80*e){a=d=r[0],l=c=r[1];for(let g=e;g<i;g+=e)u=r[g],h=r[g+1],u<a&&(a=u),h<l&&(l=h),u>d&&(d=u),h>c&&(c=h);m=Math.max(d-a,c-l),m=m!==0?32767/m:0}return Tr(s,o,e,a,l,m,0),o}};function Wc(r,t,e,n,i){let s,o;if(i===yg(r,t,e,n)>0)for(s=t;s<e;s+=n)o=zu(s,r[s],r[s+1],o);else for(s=e-n;s>=t;s-=n)o=zu(s,r[s],r[s+1],o);return o&&Ts(o,o.next)&&(Pr(o),o=o.next),o}function yi(r,t){if(!r)return r;t||(t=r);let e=r,n;do if(n=!1,!e.steiner&&(Ts(e,e.next)||ue(e.prev,e,e.next)===0)){if(Pr(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function Tr(r,t,e,n,i,s,o){if(!r)return;!o&&s&&pg(r,n,i,s);let a=r,l,d;for(;r.prev!==r.next;){if(l=r.prev,d=r.next,s?og(r,n,i,s):sg(r)){t.push(l.i/e|0),t.push(r.i/e|0),t.push(d.i/e|0),Pr(r),r=d.next,a=d.next;continue}if(r=d,r===a){o?o===1?(r=ag(yi(r),t,e),Tr(r,t,e,n,i,s,2)):o===2&&ug(r,t,e,n,i,s):Tr(yi(r),t,e,n,i,s,1);break}}}function sg(r){const t=r.prev,e=r,n=r.next;if(ue(t,e,n)>=0)return!1;const i=t.x,s=e.x,o=n.x,a=t.y,l=e.y,d=n.y,c=i<s?i<o?i:o:s<o?s:o,u=a<l?a<d?a:d:l<d?l:d,h=i>s?i>o?i:o:s>o?s:o,m=a>l?a>d?a:d:l>d?l:d;let g=n.next;for(;g!==t;){if(g.x>=c&&g.x<=h&&g.y>=u&&g.y<=m&&Hi(i,a,s,l,o,d,g.x,g.y)&&ue(g.prev,g,g.next)>=0)return!1;g=g.next}return!0}function og(r,t,e,n){const i=r.prev,s=r,o=r.next;if(ue(i,s,o)>=0)return!1;const a=i.x,l=s.x,d=o.x,c=i.y,u=s.y,h=o.y,m=a<l?a<d?a:d:l<d?l:d,g=c<u?c<h?c:h:u<h?u:h,f=a>l?a>d?a:d:l>d?l:d,p=c>u?c>h?c:h:u>h?u:h,v=ko(m,g,t,e,n),M=ko(f,p,t,e,n);let _=r.prevZ,w=r.nextZ;for(;_&&_.z>=v&&w&&w.z<=M;){if(_.x>=m&&_.x<=f&&_.y>=g&&_.y<=p&&_!==i&&_!==o&&Hi(a,c,l,u,d,h,_.x,_.y)&&ue(_.prev,_,_.next)>=0||(_=_.prevZ,w.x>=m&&w.x<=f&&w.y>=g&&w.y<=p&&w!==i&&w!==o&&Hi(a,c,l,u,d,h,w.x,w.y)&&ue(w.prev,w,w.next)>=0))return!1;w=w.nextZ}for(;_&&_.z>=v;){if(_.x>=m&&_.x<=f&&_.y>=g&&_.y<=p&&_!==i&&_!==o&&Hi(a,c,l,u,d,h,_.x,_.y)&&ue(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;w&&w.z<=M;){if(w.x>=m&&w.x<=f&&w.y>=g&&w.y<=p&&w!==i&&w!==o&&Hi(a,c,l,u,d,h,w.x,w.y)&&ue(w.prev,w,w.next)>=0)return!1;w=w.nextZ}return!0}function ag(r,t,e){let n=r;do{const i=n.prev,s=n.next.next;!Ts(i,s)&&qc(i,n,n.next,s)&&Fr(i,s)&&Fr(s,i)&&(t.push(i.i/e|0),t.push(n.i/e|0),t.push(s.i/e|0),Pr(n),Pr(n.next),n=r=s),n=n.next}while(n!==r);return yi(n)}function ug(r,t,e,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&vg(o,a)){let l=Xc(o,a);o=yi(o,o.next),l=yi(l,l.next),Tr(o,t,e,n,i,s,0),Tr(l,t,e,n,i,s,0);return}a=a.next}o=o.next}while(o!==r)}function cg(r,t,e,n){const i=[];let s,o,a,l,d;for(s=0,o=t.length;s<o;s++)a=t[s]*n,l=s<o-1?t[s+1]*n:r.length,d=Wc(r,a,l,n,!1),d===d.next&&(d.steiner=!0),i.push(gg(d));for(i.sort(lg),s=0;s<i.length;s++)e=hg(i[s],e);return e}function lg(r,t){return r.x-t.x}function hg(r,t){const e=fg(r,t);if(!e)return t;const n=Xc(e,r);return yi(n,n.next),yi(e,e.next)}function fg(r,t){let e=t,n=-1/0,i;const s=r.x,o=r.y;do{if(o<=e.y&&o>=e.next.y&&e.next.y!==e.y){const h=e.x+(o-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(h<=s&&h>n&&(n=h,i=e.x<e.next.x?e:e.next,h===s))return i}e=e.next}while(e!==t);if(!i)return null;const a=i,l=i.x,d=i.y;let c=1/0,u;e=i;do s>=e.x&&e.x>=l&&s!==e.x&&Hi(o<d?s:n,o,l,d,o<d?n:s,o,e.x,e.y)&&(u=Math.abs(o-e.y)/(s-e.x),Fr(e,r)&&(u<c||u===c&&(e.x>i.x||e.x===i.x&&dg(i,e)))&&(i=e,c=u)),e=e.next;while(e!==a);return i}function dg(r,t){return ue(r.prev,r,t.prev)<0&&ue(t.next,r,r.next)<0}function pg(r,t,e,n){let i=r;do i.z===0&&(i.z=ko(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,mg(i)}function mg(r){let t,e,n,i,s,o,a,l,d=1;do{for(e=r,r=null,s=null,o=0;e;){for(o++,n=e,a=0,t=0;t<d&&(a++,n=n.nextZ,!!n);t++);for(l=d;a>0||l>0&&n;)a!==0&&(l===0||!n||e.z<=n.z)?(i=e,e=e.nextZ,a--):(i=n,n=n.nextZ,l--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;e=n}s.nextZ=null,d*=2}while(o>1);return r}function ko(r,t,e,n,i){return r=(r-e)*i|0,t=(t-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,r|t<<1}function gg(r){let t=r,e=r;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==r);return e}function Hi(r,t,e,n,i,s,o,a){return(i-o)*(t-a)>=(r-o)*(s-a)&&(r-o)*(n-a)>=(e-o)*(t-a)&&(e-o)*(s-a)>=(i-o)*(n-a)}function vg(r,t){return r.next.i!==t.i&&r.prev.i!==t.i&&!_g(r,t)&&(Fr(r,t)&&Fr(t,r)&&xg(r,t)&&(ue(r.prev,r,t.prev)||ue(r,t.prev,t))||Ts(r,t)&&ue(r.prev,r,r.next)>0&&ue(t.prev,t,t.next)>0)}function ue(r,t,e){return(t.y-r.y)*(e.x-t.x)-(t.x-r.x)*(e.y-t.y)}function Ts(r,t){return r.x===t.x&&r.y===t.y}function qc(r,t,e,n){const i=as(ue(r,t,e)),s=as(ue(r,t,n)),o=as(ue(e,n,r)),a=as(ue(e,n,t));return!!(i!==s&&o!==a||i===0&&os(r,e,t)||s===0&&os(r,n,t)||o===0&&os(e,r,n)||a===0&&os(e,t,n))}function os(r,t,e){return t.x<=Math.max(r.x,e.x)&&t.x>=Math.min(r.x,e.x)&&t.y<=Math.max(r.y,e.y)&&t.y>=Math.min(r.y,e.y)}function as(r){return r>0?1:r<0?-1:0}function _g(r,t){let e=r;do{if(e.i!==r.i&&e.next.i!==r.i&&e.i!==t.i&&e.next.i!==t.i&&qc(e,e.next,r,t))return!0;e=e.next}while(e!==r);return!1}function Fr(r,t){return ue(r.prev,r,r.next)<0?ue(r,t,r.next)>=0&&ue(r,r.prev,t)>=0:ue(r,t,r.prev)<0||ue(r,r.next,t)<0}function xg(r,t){let e=r,n=!1;const i=(r.x+t.x)/2,s=(r.y+t.y)/2;do e.y>s!=e.next.y>s&&e.next.y!==e.y&&i<(e.next.x-e.x)*(s-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==r);return n}function Xc(r,t){const e=new Go(r.i,r.x,r.y),n=new Go(t.i,t.x,t.y),i=r.next,s=t.prev;return r.next=t,t.prev=r,e.next=i,i.prev=e,n.next=e,e.prev=n,s.next=n,n.prev=s,n}function zu(r,t,e,n){const i=new Go(r,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Pr(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Go(r,t,e){this.i=r,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function yg(r,t,e,n){let i=0;for(let s=t,o=e-n;s<e;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class pi{static area(t){const e=t.length;let n=0;for(let i=e-1,s=0;s<e;i=s++)n+=t[i].x*t[s].y-t[s].x*t[i].y;return n*.5}static isClockWise(t){return pi.area(t)<0}static triangulateShape(t,e){const n=[],i=[],s=[];Bu(t),Ou(n,t);let o=t.length;e.forEach(Bu);for(let l=0;l<e.length;l++)i.push(o),o+=e[l].length,Ou(n,e[l]);const a=rg.triangulate(n,i);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function Bu(r){const t=r.length;t>2&&r[t-1].equals(r[0])&&r.pop()}function Ou(r,t){for(let e=0;e<t.length;e++)r.push(t[e].x),r.push(t[e].y)}class fa extends me{constructor(t=.5,e=1,n=32,i=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],d=[],c=[];let u=t;const h=(e-t)/i,m=new q,g=new Dt;for(let f=0;f<=i;f++){for(let p=0;p<=n;p++){const v=s+p/n*o;m.x=u*Math.cos(v),m.y=u*Math.sin(v),l.push(m.x,m.y,m.z),d.push(0,0,1),g.x=(m.x/e+1)/2,g.y=(m.y/e+1)/2,c.push(g.x,g.y)}u+=h}for(let f=0;f<i;f++){const p=f*(n+1);for(let v=0;v<n;v++){const M=v+p,_=M,w=M+n+1,D=M+n+2,b=M+1;a.push(_,w,b),a.push(w,D,b)}}this.setIndex(a),this.setAttribute("position",new Qt(l,3)),this.setAttribute("normal",new Qt(d,3)),this.setAttribute("uv",new Qt(c,2))}static fromJSON(t){return new fa(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class da extends me{constructor(t=new br([new Dt(0,.5),new Dt(-.5,-.5),new Dt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],s=[],o=[];let a=0,l=0;if(Array.isArray(t)===!1)d(t);else for(let c=0;c<t.length;c++)d(t[c]),this.addGroup(a,l,c),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new Qt(i,3)),this.setAttribute("normal",new Qt(s,3)),this.setAttribute("uv",new Qt(o,2));function d(c){const u=i.length/3,h=c.extractPoints(e);let m=h.shape;const g=h.holes;pi.isClockWise(m)===!1&&(m=m.reverse());for(let p=0,v=g.length;p<v;p++){const M=g[p];pi.isClockWise(M)===!0&&(g[p]=M.reverse())}const f=pi.triangulateShape(m,g);for(let p=0,v=g.length;p<v;p++){const M=g[p];m=m.concat(M)}for(let p=0,v=m.length;p<v;p++){const M=m[p];i.push(M.x,M.y,0),s.push(0,0,1),o.push(M.x,M.y)}for(let p=0,v=f.length;p<v;p++){const M=f[p],_=M[0]+u,w=M[1]+u,D=M[2]+u;n.push(_,w,D),l+=3}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return wg(e,t)}static fromJSON(t,e){const n=[];for(let i=0,s=t.shapes.length;i<s;i++){const o=e[t.shapes[i]];n.push(o)}return new da(n,t.curveSegments)}}function wg(r,t){if(t.shapes=[],Array.isArray(r))for(let e=0,n=r.length;e<n;e++){const i=r[e];t.shapes.push(i.uuid)}else t.shapes.push(r.uuid);return t}class pa extends me{constructor(t=1,e=32,n=16,i=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let d=0;const c=[],u=new q,h=new q,m=[],g=[],f=[],p=[];for(let v=0;v<=n;v++){const M=[],_=v/n;let w=0;v==0&&o==0?w=.5/e:v==n&&l==Math.PI&&(w=-.5/e);for(let D=0;D<=e;D++){const b=D/e;u.x=-t*Math.cos(i+b*s)*Math.sin(o+_*a),u.y=t*Math.cos(o+_*a),u.z=t*Math.sin(i+b*s)*Math.sin(o+_*a),g.push(u.x,u.y,u.z),h.copy(u).normalize(),f.push(h.x,h.y,h.z),p.push(b+w,1-_),M.push(d++)}c.push(M)}for(let v=0;v<n;v++)for(let M=0;M<e;M++){const _=c[v][M+1],w=c[v][M],D=c[v+1][M],b=c[v+1][M+1];(v!==0||o>0)&&m.push(_,w,b),(v!==n-1||l<Math.PI)&&m.push(w,D,b)}this.setIndex(m),this.setAttribute("position",new Qt(g,3)),this.setAttribute("normal",new Qt(f,3)),this.setAttribute("uv",new Qt(p,2))}static fromJSON(t){return new pa(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Mg extends ir{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Xt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mc,this.normalScale=new Dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}const Uu={enabled:!1,files:{},add:function(r,t){this.enabled!==!1&&(this.files[r]=t)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Dg{constructor(t,e,n){const i=this;let s=!1,o=0,a=0,l;const d=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(c){a++,s===!1&&i.onStart!==void 0&&i.onStart(c,o,a),s=!0},this.itemEnd=function(c){o++,i.onProgress!==void 0&&i.onProgress(c,o,a),o===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(c){i.onError!==void 0&&i.onError(c)},this.resolveURL=function(c){return l?l(c):c},this.setURLModifier=function(c){return l=c,this},this.addHandler=function(c,u){return d.push(c,u),this},this.removeHandler=function(c){const u=d.indexOf(c);return u!==-1&&d.splice(u,2),this},this.getHandler=function(c){for(let u=0,h=d.length;u<h;u+=2){const m=d[u],g=d[u+1];if(m.global&&(m.lastIndex=0),m.test(c))return g}return null}}}const bg=new Dg;class Zc{constructor(t){this.manager=t!==void 0?t:bg,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,s){n.load(t,i,e,s)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const In={};class Sg extends Error{constructor(t,e){super(t),this.response=e}}class Eg extends Zc{constructor(t){super(t)}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=Uu.get(t);if(s!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(s),this.manager.itemEnd(t)},0),s;if(In[t]!==void 0){In[t].push({onLoad:e,onProgress:n,onError:i});return}In[t]=[],In[t].push({onLoad:e,onProgress:n,onError:i});const o=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(d=>{if(d.status===200||d.status===0){if(d.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||d.body===void 0||d.body.getReader===void 0)return d;const c=In[t],u=d.body.getReader(),h=d.headers.get("Content-Length")||d.headers.get("X-File-Size"),m=h?parseInt(h):0,g=m!==0;let f=0;const p=new ReadableStream({start(v){M();function M(){u.read().then(({done:_,value:w})=>{if(_)v.close();else{f+=w.byteLength;const D=new ProgressEvent("progress",{lengthComputable:g,loaded:f,total:m});for(let b=0,C=c.length;b<C;b++){const x=c[b];x.onProgress&&x.onProgress(D)}v.enqueue(w),M()}})}}});return new Response(p)}else throw new Sg(`fetch for "${d.url}" responded with ${d.status}: ${d.statusText}`,d)}).then(d=>{switch(l){case"arraybuffer":return d.arrayBuffer();case"blob":return d.blob();case"document":return d.text().then(c=>new DOMParser().parseFromString(c,a));case"json":return d.json();default:if(a===void 0)return d.text();{const u=/charset="?([^;"\s]*)"?/i.exec(a),h=u&&u[1]?u[1].toLowerCase():void 0,m=new TextDecoder(h);return d.arrayBuffer().then(g=>m.decode(g))}}}).then(d=>{Uu.add(t,d);const c=In[t];delete In[t];for(let u=0,h=c.length;u<h;u++){const m=c[u];m.onLoad&&m.onLoad(d)}}).catch(d=>{const c=In[t];if(c===void 0)throw this.manager.itemError(t),d;delete In[t];for(let u=0,h=c.length;u<h;u++){const m=c[u];m.onError&&m.onError(d)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class jc extends Te{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Xt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}class Ag extends jc{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Te.DefaultUp),this.updateMatrix(),this.groundColor=new Xt(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}class Cg extends jc{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class Yc{constructor(t,e,n=0,i=1/0){this.ray=new ia(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new ra,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,n=[]){return Vo(t,this,n,e),n.sort(ku),n}intersectObjects(t,e=!0,n=[]){for(let i=0,s=t.length;i<s;i++)Vo(t[i],this,n,e);return n.sort(ku),n}}function ku(r,t){return r.distance-t.distance}function Vo(r,t,e,n){if(r.layers.test(t.layers)&&r.raycast(t,e),n===!0){const i=r.children;for(let s=0,o=i.length;s<o;s++)Vo(i[s],t,e,!0)}}const Gu=new Dt;class Tg{constructor(t=new Dt(1/0,1/0),e=new Dt(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Gu.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Gu.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}class Fg extends kc{constructor(t=10,e=10,n=4473924,i=8947848){n=new Xt(n),i=new Xt(i);const s=e/2,o=t/e,a=t/2,l=[],d=[];for(let h=0,m=0,g=-a;h<=e;h++,g+=o){l.push(-a,0,g,a,0,g),l.push(g,0,-a,g,0,a);const f=h===s?n:i;f.toArray(d,m),m+=3,f.toArray(d,m),m+=3,f.toArray(d,m),m+=3,f.toArray(d,m),m+=3}const c=new me;c.setAttribute("position",new Qt(l,3)),c.setAttribute("color",new Qt(d,3));const u=new di({vertexColors:!0,toneMapped:!1});super(c,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Vu=new q;let us,wo;class Pg extends Te{constructor(t=new q(0,0,1),e=new q(0,0,0),n=1,i=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",us===void 0&&(us=new me,us.setAttribute("position",new Qt([0,0,0,0,1,0],3)),wo=new ha(0,.5,1,5,1),wo.translate(0,-.5,0)),this.position.copy(e),this.line=new wr(us,new di({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Ve(wo,new Qi({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,s,o)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Vu.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Vu,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Lg extends kc{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new me;i.setAttribute("position",new Qt(e,3)),i.setAttribute("color",new Qt(n,3));const s=new di({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(t,e,n){const i=new Xt,s=this.geometry.attributes.color.array;return i.set(t),i.toArray(s,0),i.toArray(s,3),i.set(e),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class ii{constructor(){this.type="ShapePath",this.color=new Xt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new ji,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,s,o){return this.currentPath.bezierCurveTo(t,e,n,i,s,o),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(v){const M=[];for(let _=0,w=v.length;_<w;_++){const D=v[_],b=new br;b.curves=D.curves,M.push(b)}return M}function n(v,M){const _=M.length;let w=!1;for(let D=_-1,b=0;b<_;D=b++){let C=M[D],x=M[b],S=x.x-C.x,F=x.y-C.y;if(Math.abs(F)>Number.EPSILON){if(F<0&&(C=M[b],S=-S,x=M[D],F=-F),v.y<C.y||v.y>x.y)continue;if(v.y===C.y){if(v.x===C.x)return!0}else{const U=F*(v.x-C.x)-S*(v.y-C.y);if(U===0)return!0;if(U<0)continue;w=!w}}else{if(v.y!==C.y)continue;if(x.x<=v.x&&v.x<=C.x||C.x<=v.x&&v.x<=x.x)return!0}}return w}const i=pi.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,a,l;const d=[];if(s.length===1)return a=s[0],l=new br,l.curves=a.curves,d.push(l),d;let c=!i(s[0].getPoints());c=t?!c:c;const u=[],h=[];let m=[],g=0,f;h[g]=void 0,m[g]=[];for(let v=0,M=s.length;v<M;v++)a=s[v],f=a.getPoints(),o=i(f),o=t?!o:o,o?(!c&&h[g]&&g++,h[g]={s:new br,p:f},h[g].s.curves=a.curves,c&&g++,m[g]=[]):m[g].push({h:a,p:f[0]});if(!h[0])return e(s);if(h.length>1){let v=!1,M=0;for(let _=0,w=h.length;_<w;_++)u[_]=[];for(let _=0,w=h.length;_<w;_++){const D=m[_];for(let b=0;b<D.length;b++){const C=D[b];let x=!0;for(let S=0;S<h.length;S++)n(C.p,h[S].p)&&(_!==S&&M++,x?(x=!1,u[S].push(C)):v=!0);x&&u[_].push(C)}}M>0&&v===!1&&(m=u)}let p;for(let v=0,M=h.length;v<M;v++){l=h[v].s,d.push(l),p=m[v];for(let _=0,w=p.length;_<w;_++)l.holes.push(p[_].h)}return d}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ea}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ea);const Lt={IDLE:Symbol(),ROTATE:Symbol(),PAN:Symbol(),SCALE:Symbol(),FOV:Symbol(),FOCUS:Symbol(),ZROTATE:Symbol(),TOUCH_MULTI:Symbol(),ANIMATION_FOCUS:Symbol(),ANIMATION_ROTATE:Symbol()},ee={NONE:Symbol(),ONE_FINGER:Symbol(),ONE_FINGER_SWITCHED:Symbol(),TWO_FINGER:Symbol(),MULT_FINGER:Symbol(),CURSOR:Symbol()},Ut={x:0,y:0},$e={camera:new Jt,gizmos:new Jt},ie={type:"change"},hn={type:"start"},en={type:"end"},Rg=new Yc,xe=new q,Hu=new Jt,Wu=new Jt,fn=new q;class Ng extends Jn{constructor(t,e,n=null){super(),this.camera=null,this.domElement=e,this.scene=n,this.target=new q,this._currentTarget=new q,this.radiusFactor=.67,this.mouseActions=[],this._mouseOp=null,this._v2_1=new Dt,this._v3_1=new q,this._v3_2=new q,this._m4_1=new Jt,this._m4_2=new Jt,this._quat=new Kn,this._translationMatrix=new Jt,this._rotationMatrix=new Jt,this._scaleMatrix=new Jt,this._rotationAxis=new q,this._cameraMatrixState=new Jt,this._cameraProjectionState=new Jt,this._fovState=1,this._upState=new q,this._zoomState=1,this._nearPos=0,this._farPos=0,this._gizmoMatrixState=new Jt,this._up0=new q,this._zoom0=1,this._fov0=0,this._initialNear=0,this._nearPos0=0,this._initialFar=0,this._farPos0=0,this._cameraMatrixState0=new Jt,this._gizmoMatrixState0=new Jt,this._button=-1,this._touchStart=[],this._touchCurrent=[],this._input=ee.NONE,this._switchSensibility=32,this._startFingerDistance=0,this._currentFingerDistance=0,this._startFingerRotation=0,this._currentFingerRotation=0,this._devPxRatio=0,this._downValid=!0,this._nclicks=0,this._downEvents=[],this._downStart=0,this._clickStart=0,this._maxDownTime=250,this._maxInterval=300,this._posThreshold=24,this._movementThreshold=24,this._currentCursorPosition=new q,this._startCursorPosition=new q,this._grid=null,this._gridPosition=new q,this._gizmos=new ci,this._curvePts=128,this._timeStart=-1,this._animationId=-1,this.focusAnimationTime=500,this._timePrev=0,this._timeCurrent=0,this._anglePrev=0,this._angleCurrent=0,this._cursorPosPrev=new q,this._cursorPosCurr=new q,this._wPrev=0,this._wCurr=0,this.adjustNearFar=!1,this.scaleFactor=1.1,this.dampingFactor=25,this.wMax=20,this.enableAnimations=!0,this.enableGrid=!1,this.cursorZoom=!1,this.minFov=5,this.maxFov=90,this.enabled=!0,this.enablePan=!0,this.enableRotate=!0,this.enableZoom=!0,this.enableGizmos=!0,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this._tbRadius=1,this._state=Lt.IDLE,this.setCamera(t),this.scene!=null&&this.scene.add(this._gizmos),this.domElement.style.touchAction="none",this._devPxRatio=window.devicePixelRatio,this.initializeMouseActions(),this.domElement.addEventListener("contextmenu",this.onContextMenu),this.domElement.addEventListener("wheel",this.onWheel),this.domElement.addEventListener("pointerdown",this.onPointerDown),this.domElement.addEventListener("pointercancel",this.onPointerCancel),window.addEventListener("resize",this.onWindowResize)}onWindowResize=()=>{const t=(this._gizmos.scale.x+this._gizmos.scale.y+this._gizmos.scale.z)/3;this._tbRadius=this.calculateTbRadius(this.camera);const e=this._tbRadius/t,i=new li(0,0,e,e).getPoints(this._curvePts),s=new me().setFromPoints(i);for(const o in this._gizmos.children)this._gizmos.children[o].geometry=s;this.dispatchEvent(ie)};onContextMenu=t=>{if(this.enabled){for(let e=0;e<this.mouseActions.length;e++)if(this.mouseActions[e].mouse==2){t.preventDefault();break}}};onPointerCancel=()=>{this._touchStart.splice(0,this._touchStart.length),this._touchCurrent.splice(0,this._touchCurrent.length),this._input=ee.NONE};onPointerDown=t=>{if(t.button==0&&t.isPrimary?(this._downValid=!0,this._downEvents.push(t),this._downStart=performance.now()):this._downValid=!1,t.pointerType=="touch"&&this._input!=ee.CURSOR)switch(this._touchStart.push(t),this._touchCurrent.push(t),this._input){case ee.NONE:this._input=ee.ONE_FINGER,this.onSinglePanStart(t,"ROTATE"),window.addEventListener("pointermove",this.onPointerMove),window.addEventListener("pointerup",this.onPointerUp);break;case ee.ONE_FINGER:case ee.ONE_FINGER_SWITCHED:this._input=ee.TWO_FINGER,this.onRotateStart(),this.onPinchStart(),this.onDoublePanStart();break;case ee.TWO_FINGER:this._input=ee.MULT_FINGER,this.onTriplePanStart(t);break}else if(t.pointerType!="touch"&&this._input==ee.NONE){let e=null;t.ctrlKey||t.metaKey?e="CTRL":t.shiftKey&&(e="SHIFT"),this._mouseOp=this.getOpFromAction(t.button,e),this._mouseOp!=null&&(window.addEventListener("pointermove",this.onPointerMove),window.addEventListener("pointerup",this.onPointerUp),this._input=ee.CURSOR,this._button=t.button,this.onSinglePanStart(t,this._mouseOp))}};onPointerMove=t=>{if(t.pointerType=="touch"&&this._input!=ee.CURSOR)switch(this._input){case ee.ONE_FINGER:this.updateTouchEvent(t),this.onSinglePanMove(t,Lt.ROTATE);break;case ee.ONE_FINGER_SWITCHED:if(this.calculatePointersDistance(this._touchCurrent[0],t)*this._devPxRatio>=this._switchSensibility){this._input=ee.ONE_FINGER,this.updateTouchEvent(t),this.onSinglePanStart(t,"ROTATE");break}break;case ee.TWO_FINGER:this.updateTouchEvent(t),this.onRotateMove(),this.onPinchMove(),this.onDoublePanMove();break;case ee.MULT_FINGER:this.updateTouchEvent(t),this.onTriplePanMove(t);break}else if(t.pointerType!="touch"&&this._input==ee.CURSOR){let e=null;t.ctrlKey||t.metaKey?e="CTRL":t.shiftKey&&(e="SHIFT");const n=this.getOpStateFromAction(this._button,e);n!=null&&this.onSinglePanMove(t,n)}this._downValid&&this.calculatePointersDistance(this._downEvents[this._downEvents.length-1],t)*this._devPxRatio>this._movementThreshold&&(this._downValid=!1)};onPointerUp=t=>{if(t.pointerType=="touch"&&this._input!=ee.CURSOR){const e=this._touchCurrent.length;for(let n=0;n<e;n++)if(this._touchCurrent[n].pointerId==t.pointerId){this._touchCurrent.splice(n,1),this._touchStart.splice(n,1);break}switch(this._input){case ee.ONE_FINGER:case ee.ONE_FINGER_SWITCHED:window.removeEventListener("pointermove",this.onPointerMove),window.removeEventListener("pointerup",this.onPointerUp),this._input=ee.NONE,this.onSinglePanEnd();break;case ee.TWO_FINGER:this.onDoublePanEnd(t),this.onPinchEnd(t),this.onRotateEnd(t),this._input=ee.ONE_FINGER_SWITCHED;break;case ee.MULT_FINGER:this._touchCurrent.length==0&&(window.removeEventListener("pointermove",this.onPointerMove),window.removeEventListener("pointerup",this.onPointerUp),this._input=ee.NONE,this.onTriplePanEnd());break}}else t.pointerType!="touch"&&this._input==ee.CURSOR&&(window.removeEventListener("pointermove",this.onPointerMove),window.removeEventListener("pointerup",this.onPointerUp),this._input=ee.NONE,this.onSinglePanEnd(),this._button=-1);if(t.isPrimary)if(this._downValid)if(t.timeStamp-this._downEvents[this._downEvents.length-1].timeStamp<=this._maxDownTime)if(this._nclicks==0)this._nclicks=1,this._clickStart=performance.now();else{const n=t.timeStamp-this._clickStart,i=this.calculatePointersDistance(this._downEvents[1],this._downEvents[0])*this._devPxRatio;n<=this._maxInterval&&i<=this._posThreshold?(this._nclicks=0,this._downEvents.splice(0,this._downEvents.length),this.onDoubleTap(t)):(this._nclicks=1,this._downEvents.shift(),this._clickStart=performance.now())}else this._downValid=!1,this._nclicks=0,this._downEvents.splice(0,this._downEvents.length);else this._nclicks=0,this._downEvents.splice(0,this._downEvents.length)};onWheel=t=>{if(this.enabled&&this.enableZoom){let e=null;t.ctrlKey||t.metaKey?e="CTRL":t.shiftKey&&(e="SHIFT");const n=this.getOpFromAction("WHEEL",e);if(n!=null){t.preventDefault(),this.dispatchEvent(hn);const i=125;let s=t.deltaY/i,o=1;switch(s>0?o=1/this.scaleFactor:s<0&&(o=this.scaleFactor),n){case"ZOOM":if(this.updateTbState(Lt.SCALE,!0),s>0?o=1/Math.pow(this.scaleFactor,s):s<0&&(o=Math.pow(this.scaleFactor,-s)),this.cursorZoom&&this.enablePan){let a;this.camera.isOrthographicCamera?a=this.unprojectOnTbPlane(this.camera,t.clientX,t.clientY,this.domElement).applyQuaternion(this.camera.quaternion).multiplyScalar(1/this.camera.zoom).add(this._gizmos.position):this.camera.isPerspectiveCamera&&(a=this.unprojectOnTbPlane(this.camera,t.clientX,t.clientY,this.domElement).applyQuaternion(this.camera.quaternion).add(this._gizmos.position)),this.applyTransformMatrix(this.scale(o,a))}else this.applyTransformMatrix(this.scale(o,this._gizmos.position));this._grid!=null&&(this.disposeGrid(),this.drawGrid()),this.updateTbState(Lt.IDLE,!1),this.dispatchEvent(ie),this.dispatchEvent(en);break;case"FOV":if(this.camera.isPerspectiveCamera){this.updateTbState(Lt.FOV,!0),t.deltaX!=0&&(s=t.deltaX/i,o=1,s>0?o=1/Math.pow(this.scaleFactor,s):s<0&&(o=Math.pow(this.scaleFactor,-s))),this._v3_1.setFromMatrixPosition(this._cameraMatrixState);const a=this._v3_1.distanceTo(this._gizmos.position);let l=a/o;l=fe.clamp(l,this.minDistance,this.maxDistance);const d=a*Math.tan(fe.DEG2RAD*this.camera.fov*.5);let c=fe.RAD2DEG*(Math.atan(d/l)*2);c>this.maxFov?c=this.maxFov:c<this.minFov&&(c=this.minFov);const u=d/Math.tan(fe.DEG2RAD*(c/2));o=a/u,this.setFov(c),this.applyTransformMatrix(this.scale(o,this._gizmos.position,!1))}this._grid!=null&&(this.disposeGrid(),this.drawGrid()),this.updateTbState(Lt.IDLE,!1),this.dispatchEvent(ie),this.dispatchEvent(en);break}}}};onSinglePanStart=(t,e)=>{if(this.enabled)switch(this.dispatchEvent(hn),this.setCenter(t.clientX,t.clientY),e){case"PAN":if(!this.enablePan)return;this._animationId!=-1&&(cancelAnimationFrame(this._animationId),this._animationId=-1,this._timeStart=-1,this.activateGizmos(!1),this.dispatchEvent(ie)),this.updateTbState(Lt.PAN,!0),this._startCursorPosition.copy(this.unprojectOnTbPlane(this.camera,Ut.x,Ut.y,this.domElement)),this.enableGrid&&(this.drawGrid(),this.dispatchEvent(ie));break;case"ROTATE":if(!this.enableRotate)return;this._animationId!=-1&&(cancelAnimationFrame(this._animationId),this._animationId=-1,this._timeStart=-1),this.updateTbState(Lt.ROTATE,!0),this._startCursorPosition.copy(this.unprojectOnTbSurface(this.camera,Ut.x,Ut.y,this.domElement,this._tbRadius)),this.activateGizmos(!0),this.enableAnimations&&(this._timePrev=this._timeCurrent=performance.now(),this._angleCurrent=this._anglePrev=0,this._cursorPosPrev.copy(this._startCursorPosition),this._cursorPosCurr.copy(this._cursorPosPrev),this._wCurr=0,this._wPrev=this._wCurr),this.dispatchEvent(ie);break;case"FOV":if(!this.camera.isPerspectiveCamera||!this.enableZoom)return;this._animationId!=-1&&(cancelAnimationFrame(this._animationId),this._animationId=-1,this._timeStart=-1,this.activateGizmos(!1),this.dispatchEvent(ie)),this.updateTbState(Lt.FOV,!0),this._startCursorPosition.setY(this.getCursorNDC(Ut.x,Ut.y,this.domElement).y*.5),this._currentCursorPosition.copy(this._startCursorPosition);break;case"ZOOM":if(!this.enableZoom)return;this._animationId!=-1&&(cancelAnimationFrame(this._animationId),this._animationId=-1,this._timeStart=-1,this.activateGizmos(!1),this.dispatchEvent(ie)),this.updateTbState(Lt.SCALE,!0),this._startCursorPosition.setY(this.getCursorNDC(Ut.x,Ut.y,this.domElement).y*.5),this._currentCursorPosition.copy(this._startCursorPosition);break}};onSinglePanMove=(t,e)=>{if(this.enabled){const n=e!=this._state;switch(this.setCenter(t.clientX,t.clientY),e){case Lt.PAN:this.enablePan&&(n?(this.dispatchEvent(en),this.dispatchEvent(hn),this.updateTbState(e,!0),this._startCursorPosition.copy(this.unprojectOnTbPlane(this.camera,Ut.x,Ut.y,this.domElement)),this.enableGrid&&this.drawGrid(),this.activateGizmos(!1)):(this._currentCursorPosition.copy(this.unprojectOnTbPlane(this.camera,Ut.x,Ut.y,this.domElement)),this.applyTransformMatrix(this.pan(this._startCursorPosition,this._currentCursorPosition))));break;case Lt.ROTATE:if(this.enableRotate)if(n)this.dispatchEvent(en),this.dispatchEvent(hn),this.updateTbState(e,!0),this._startCursorPosition.copy(this.unprojectOnTbSurface(this.camera,Ut.x,Ut.y,this.domElement,this._tbRadius)),this.enableGrid&&this.disposeGrid(),this.activateGizmos(!0);else{this._currentCursorPosition.copy(this.unprojectOnTbSurface(this.camera,Ut.x,Ut.y,this.domElement,this._tbRadius));const i=this._startCursorPosition.distanceTo(this._currentCursorPosition),s=this._startCursorPosition.angleTo(this._currentCursorPosition),o=Math.max(i/this._tbRadius,s);this.applyTransformMatrix(this.rotate(this.calculateRotationAxis(this._startCursorPosition,this._currentCursorPosition),o)),this.enableAnimations&&(this._timePrev=this._timeCurrent,this._timeCurrent=performance.now(),this._anglePrev=this._angleCurrent,this._angleCurrent=o,this._cursorPosPrev.copy(this._cursorPosCurr),this._cursorPosCurr.copy(this._currentCursorPosition),this._wPrev=this._wCurr,this._wCurr=this.calculateAngularSpeed(this._anglePrev,this._angleCurrent,this._timePrev,this._timeCurrent))}break;case Lt.SCALE:if(this.enableZoom)if(n)this.dispatchEvent(en),this.dispatchEvent(hn),this.updateTbState(e,!0),this._startCursorPosition.setY(this.getCursorNDC(Ut.x,Ut.y,this.domElement).y*.5),this._currentCursorPosition.copy(this._startCursorPosition),this.enableGrid&&this.disposeGrid(),this.activateGizmos(!1);else{this._currentCursorPosition.setY(this.getCursorNDC(Ut.x,Ut.y,this.domElement).y*.5);const s=this._currentCursorPosition.y-this._startCursorPosition.y;let o=1;s<0?o=1/Math.pow(this.scaleFactor,-s*8):s>0&&(o=Math.pow(this.scaleFactor,s*8)),this._v3_1.setFromMatrixPosition(this._gizmoMatrixState),this.applyTransformMatrix(this.scale(o,this._v3_1))}break;case Lt.FOV:if(this.enableZoom&&this.camera.isPerspectiveCamera)if(n)this.dispatchEvent(en),this.dispatchEvent(hn),this.updateTbState(e,!0),this._startCursorPosition.setY(this.getCursorNDC(Ut.x,Ut.y,this.domElement).y*.5),this._currentCursorPosition.copy(this._startCursorPosition),this.enableGrid&&this.disposeGrid(),this.activateGizmos(!1);else{this._currentCursorPosition.setY(this.getCursorNDC(Ut.x,Ut.y,this.domElement).y*.5);const s=this._currentCursorPosition.y-this._startCursorPosition.y;let o=1;s<0?o=1/Math.pow(this.scaleFactor,-s*8):s>0&&(o=Math.pow(this.scaleFactor,s*8)),this._v3_1.setFromMatrixPosition(this._cameraMatrixState);const a=this._v3_1.distanceTo(this._gizmos.position);let l=a/o;l=fe.clamp(l,this.minDistance,this.maxDistance);const d=a*Math.tan(fe.DEG2RAD*this._fovState*.5);let c=fe.RAD2DEG*(Math.atan(d/l)*2);c=fe.clamp(c,this.minFov,this.maxFov);const u=d/Math.tan(fe.DEG2RAD*(c/2));o=a/u,this._v3_2.setFromMatrixPosition(this._gizmoMatrixState),this.setFov(c),this.applyTransformMatrix(this.scale(o,this._v3_2,!1)),xe.copy(this._gizmos.position).sub(this.camera.position).normalize().multiplyScalar(u/a),this._m4_1.makeTranslation(xe.x,xe.y,xe.z)}break}this.dispatchEvent(ie)}};onSinglePanEnd=()=>{if(this._state==Lt.ROTATE){if(!this.enableRotate)return;if(this.enableAnimations)if(performance.now()-this._timeCurrent<120){const e=Math.abs((this._wPrev+this._wCurr)/2),n=this;this._animationId=window.requestAnimationFrame(function(i){n.updateTbState(Lt.ANIMATION_ROTATE,!0);const s=n.calculateRotationAxis(n._cursorPosPrev,n._cursorPosCurr);n.onRotationAnim(i,s,Math.min(e,n.wMax))})}else this.updateTbState(Lt.IDLE,!1),this.activateGizmos(!1),this.dispatchEvent(ie);else this.updateTbState(Lt.IDLE,!1),this.activateGizmos(!1),this.dispatchEvent(ie)}else(this._state==Lt.PAN||this._state==Lt.IDLE)&&(this.updateTbState(Lt.IDLE,!1),this.enableGrid&&this.disposeGrid(),this.activateGizmos(!1),this.dispatchEvent(ie));this.dispatchEvent(en)};onDoubleTap=t=>{if(this.enabled&&this.enablePan&&this.scene!=null){this.dispatchEvent(hn),this.setCenter(t.clientX,t.clientY);const e=this.unprojectOnObj(this.getCursorNDC(Ut.x,Ut.y,this.domElement),this.camera);if(e!=null&&this.enableAnimations){const n=this;this._animationId!=-1&&window.cancelAnimationFrame(this._animationId),this._timeStart=-1,this._animationId=window.requestAnimationFrame(function(i){n.updateTbState(Lt.ANIMATION_FOCUS,!0),n.onFocusAnim(i,e,n._cameraMatrixState,n._gizmoMatrixState)})}else e!=null&&!this.enableAnimations&&(this.updateTbState(Lt.FOCUS,!0),this.focus(e,this.scaleFactor),this.updateTbState(Lt.IDLE,!1),this.dispatchEvent(ie))}this.dispatchEvent(en)};onDoublePanStart=()=>{this.enabled&&this.enablePan&&(this.dispatchEvent(hn),this.updateTbState(Lt.PAN,!0),this.setCenter((this._touchCurrent[0].clientX+this._touchCurrent[1].clientX)/2,(this._touchCurrent[0].clientY+this._touchCurrent[1].clientY)/2),this._startCursorPosition.copy(this.unprojectOnTbPlane(this.camera,Ut.x,Ut.y,this.domElement,!0)),this._currentCursorPosition.copy(this._startCursorPosition),this.activateGizmos(!1))};onDoublePanMove=()=>{this.enabled&&this.enablePan&&(this.setCenter((this._touchCurrent[0].clientX+this._touchCurrent[1].clientX)/2,(this._touchCurrent[0].clientY+this._touchCurrent[1].clientY)/2),this._state!=Lt.PAN&&(this.updateTbState(Lt.PAN,!0),this._startCursorPosition.copy(this._currentCursorPosition)),this._currentCursorPosition.copy(this.unprojectOnTbPlane(this.camera,Ut.x,Ut.y,this.domElement,!0)),this.applyTransformMatrix(this.pan(this._startCursorPosition,this._currentCursorPosition,!0)),this.dispatchEvent(ie))};onDoublePanEnd=()=>{this.updateTbState(Lt.IDLE,!1),this.dispatchEvent(en)};onRotateStart=()=>{this.enabled&&this.enableRotate&&(this.dispatchEvent(hn),this.updateTbState(Lt.ZROTATE,!0),this._startFingerRotation=this.getAngle(this._touchCurrent[1],this._touchCurrent[0])+this.getAngle(this._touchStart[1],this._touchStart[0]),this._currentFingerRotation=this._startFingerRotation,this.camera.getWorldDirection(this._rotationAxis),!this.enablePan&&!this.enableZoom&&this.activateGizmos(!0))};onRotateMove=()=>{if(this.enabled&&this.enableRotate){this.setCenter((this._touchCurrent[0].clientX+this._touchCurrent[1].clientX)/2,(this._touchCurrent[0].clientY+this._touchCurrent[1].clientY)/2);let t;this._state!=Lt.ZROTATE&&(this.updateTbState(Lt.ZROTATE,!0),this._startFingerRotation=this._currentFingerRotation),this._currentFingerRotation=this.getAngle(this._touchCurrent[1],this._touchCurrent[0])+this.getAngle(this._touchStart[1],this._touchStart[0]),this.enablePan?(this._v3_2.setFromMatrixPosition(this._gizmoMatrixState),t=this.unprojectOnTbPlane(this.camera,Ut.x,Ut.y,this.domElement).applyQuaternion(this.camera.quaternion).multiplyScalar(1/this.camera.zoom).add(this._v3_2)):t=new q().setFromMatrixPosition(this._gizmoMatrixState);const e=fe.DEG2RAD*(this._startFingerRotation-this._currentFingerRotation);this.applyTransformMatrix(this.zRotate(t,e)),this.dispatchEvent(ie)}};onRotateEnd=()=>{this.updateTbState(Lt.IDLE,!1),this.activateGizmos(!1),this.dispatchEvent(en)};onPinchStart=()=>{this.enabled&&this.enableZoom&&(this.dispatchEvent(hn),this.updateTbState(Lt.SCALE,!0),this._startFingerDistance=this.calculatePointersDistance(this._touchCurrent[0],this._touchCurrent[1]),this._currentFingerDistance=this._startFingerDistance,this.activateGizmos(!1))};onPinchMove=()=>{if(this.enabled&&this.enableZoom){this.setCenter((this._touchCurrent[0].clientX+this._touchCurrent[1].clientX)/2,(this._touchCurrent[0].clientY+this._touchCurrent[1].clientY)/2);const t=12;this._state!=Lt.SCALE&&(this._startFingerDistance=this._currentFingerDistance,this.updateTbState(Lt.SCALE,!0)),this._currentFingerDistance=Math.max(this.calculatePointersDistance(this._touchCurrent[0],this._touchCurrent[1]),t*this._devPxRatio);const e=this._currentFingerDistance/this._startFingerDistance;let n;this.enablePan?this.camera.isOrthographicCamera?n=this.unprojectOnTbPlane(this.camera,Ut.x,Ut.y,this.domElement).applyQuaternion(this.camera.quaternion).multiplyScalar(1/this.camera.zoom).add(this._gizmos.position):this.camera.isPerspectiveCamera&&(n=this.unprojectOnTbPlane(this.camera,Ut.x,Ut.y,this.domElement).applyQuaternion(this.camera.quaternion).add(this._gizmos.position)):n=this._gizmos.position,this.applyTransformMatrix(this.scale(e,n)),this.dispatchEvent(ie)}};onPinchEnd=()=>{this.updateTbState(Lt.IDLE,!1),this.dispatchEvent(en)};onTriplePanStart=()=>{if(this.enabled&&this.enableZoom){this.dispatchEvent(hn),this.updateTbState(Lt.SCALE,!0);let t=0,e=0;const n=this._touchCurrent.length;for(let i=0;i<n;i++)t+=this._touchCurrent[i].clientX,e+=this._touchCurrent[i].clientY;this.setCenter(t/n,e/n),this._startCursorPosition.setY(this.getCursorNDC(Ut.x,Ut.y,this.domElement).y*.5),this._currentCursorPosition.copy(this._startCursorPosition)}};onTriplePanMove=()=>{if(this.enabled&&this.enableZoom){let t=0,e=0;const n=this._touchCurrent.length;for(let h=0;h<n;h++)t+=this._touchCurrent[h].clientX,e+=this._touchCurrent[h].clientY;this.setCenter(t/n,e/n);const i=8;this._currentCursorPosition.setY(this.getCursorNDC(Ut.x,Ut.y,this.domElement).y*.5);const s=this._currentCursorPosition.y-this._startCursorPosition.y;let o=1;s<0?o=1/Math.pow(this.scaleFactor,-s*i):s>0&&(o=Math.pow(this.scaleFactor,s*i)),this._v3_1.setFromMatrixPosition(this._cameraMatrixState);const a=this._v3_1.distanceTo(this._gizmos.position);let l=a/o;l=fe.clamp(l,this.minDistance,this.maxDistance);const d=a*Math.tan(fe.DEG2RAD*this._fovState*.5);let c=fe.RAD2DEG*(Math.atan(d/l)*2);c=fe.clamp(c,this.minFov,this.maxFov);const u=d/Math.tan(fe.DEG2RAD*(c/2));o=a/u,this._v3_2.setFromMatrixPosition(this._gizmoMatrixState),this.setFov(c),this.applyTransformMatrix(this.scale(o,this._v3_2,!1)),xe.copy(this._gizmos.position).sub(this.camera.position).normalize().multiplyScalar(u/a),this._m4_1.makeTranslation(xe.x,xe.y,xe.z),this.dispatchEvent(ie)}};onTriplePanEnd=()=>{this.updateTbState(Lt.IDLE,!1),this.dispatchEvent(en)};setCenter=(t,e)=>{Ut.x=t,Ut.y=e};initializeMouseActions=()=>{this.setMouseAction("PAN",0,"CTRL"),this.setMouseAction("PAN",2),this.setMouseAction("ROTATE",0),this.setMouseAction("ZOOM","WHEEL"),this.setMouseAction("ZOOM",1),this.setMouseAction("FOV","WHEEL","SHIFT"),this.setMouseAction("FOV",1,"SHIFT")};compareMouseAction=(t,e)=>t.operation==e.operation?t.mouse==e.mouse&&t.key==e.key:!1;setMouseAction=(t,e,n=null)=>{const i=["PAN","ROTATE","ZOOM","FOV"],s=[0,1,2,"WHEEL"],o=["CTRL","SHIFT",null];let a;if(!i.includes(t)||!s.includes(e)||!o.includes(n)||e=="WHEEL"&&t!="ZOOM"&&t!="FOV")return!1;switch(t){case"PAN":a=Lt.PAN;break;case"ROTATE":a=Lt.ROTATE;break;case"ZOOM":a=Lt.SCALE;break;case"FOV":a=Lt.FOV;break}const l={operation:t,mouse:e,key:n,state:a};for(let d=0;d<this.mouseActions.length;d++)if(this.mouseActions[d].mouse==l.mouse&&this.mouseActions[d].key==l.key)return this.mouseActions.splice(d,1,l),!0;return this.mouseActions.push(l),!0};unsetMouseAction=(t,e=null)=>{for(let n=0;n<this.mouseActions.length;n++)if(this.mouseActions[n].mouse==t&&this.mouseActions[n].key==e)return this.mouseActions.splice(n,1),!0;return!1};getOpFromAction=(t,e)=>{let n;for(let i=0;i<this.mouseActions.length;i++)if(n=this.mouseActions[i],n.mouse==t&&n.key==e)return n.operation;if(e!=null){for(let i=0;i<this.mouseActions.length;i++)if(n=this.mouseActions[i],n.mouse==t&&n.key==null)return n.operation}return null};getOpStateFromAction=(t,e)=>{let n;for(let i=0;i<this.mouseActions.length;i++)if(n=this.mouseActions[i],n.mouse==t&&n.key==e)return n.state;if(e!=null){for(let i=0;i<this.mouseActions.length;i++)if(n=this.mouseActions[i],n.mouse==t&&n.key==null)return n.state}return null};getAngle=(t,e)=>Math.atan2(e.clientY-t.clientY,e.clientX-t.clientX)*180/Math.PI;updateTouchEvent=t=>{for(let e=0;e<this._touchCurrent.length;e++)if(this._touchCurrent[e].pointerId==t.pointerId){this._touchCurrent.splice(e,1,t);break}};applyTransformMatrix(t){if(t.camera!=null&&(this._m4_1.copy(this._cameraMatrixState).premultiply(t.camera),this._m4_1.decompose(this.camera.position,this.camera.quaternion,this.camera.scale),this.camera.updateMatrix(),(this._state==Lt.ROTATE||this._state==Lt.ZROTATE||this._state==Lt.ANIMATION_ROTATE)&&this.camera.up.copy(this._upState).applyQuaternion(this.camera.quaternion)),t.gizmos!=null&&(this._m4_1.copy(this._gizmoMatrixState).premultiply(t.gizmos),this._m4_1.decompose(this._gizmos.position,this._gizmos.quaternion,this._gizmos.scale),this._gizmos.updateMatrix()),this._state==Lt.SCALE||this._state==Lt.FOCUS||this._state==Lt.ANIMATION_FOCUS)if(this._tbRadius=this.calculateTbRadius(this.camera),this.adjustNearFar){const e=this.camera.position.distanceTo(this._gizmos.position),n=new Di;n.setFromObject(this._gizmos);const i=new Nr;n.getBoundingSphere(i);const s=Math.max(this._nearPos0,i.radius+i.center.length()),o=e-this._initialNear,a=Math.min(s,o);this.camera.near=e-a;const l=Math.min(this._farPos0,-i.radius+i.center.length()),d=e-this._initialFar,c=Math.min(l,d);this.camera.far=e-c,this.camera.updateProjectionMatrix()}else{let e=!1;this.camera.near!=this._initialNear&&(this.camera.near=this._initialNear,e=!0),this.camera.far!=this._initialFar&&(this.camera.far=this._initialFar,e=!0),e&&this.camera.updateProjectionMatrix()}}calculateAngularSpeed=(t,e,n,i)=>{const s=e-t,o=(i-n)/1e3;return o==0?0:s/o};calculatePointersDistance=(t,e)=>Math.sqrt(Math.pow(e.clientX-t.clientX,2)+Math.pow(e.clientY-t.clientY,2));calculateRotationAxis=(t,e)=>(this._rotationMatrix.extractRotation(this._cameraMatrixState),this._quat.setFromRotationMatrix(this._rotationMatrix),this._rotationAxis.crossVectors(t,e).applyQuaternion(this._quat),this._rotationAxis.normalize().clone());calculateTbRadius=t=>{const e=t.position.distanceTo(this._gizmos.position);if(t.type=="PerspectiveCamera"){const n=fe.DEG2RAD*t.fov*.5,i=Math.atan(t.aspect*Math.tan(n));return Math.tan(Math.min(n,i))*e*this.radiusFactor}else if(t.type=="OrthographicCamera")return Math.min(t.top,t.right)*this.radiusFactor};focus=(t,e,n=1)=>{xe.copy(t).sub(this._gizmos.position).multiplyScalar(n),this._translationMatrix.makeTranslation(xe.x,xe.y,xe.z),Hu.copy(this._gizmoMatrixState),this._gizmoMatrixState.premultiply(this._translationMatrix),this._gizmoMatrixState.decompose(this._gizmos.position,this._gizmos.quaternion,this._gizmos.scale),Wu.copy(this._cameraMatrixState),this._cameraMatrixState.premultiply(this._translationMatrix),this._cameraMatrixState.decompose(this.camera.position,this.camera.quaternion,this.camera.scale),this.enableZoom&&this.applyTransformMatrix(this.scale(e,this._gizmos.position)),this._gizmoMatrixState.copy(Hu),this._cameraMatrixState.copy(Wu)};drawGrid=()=>{if(this.scene!=null){let n,i,s,o;if(this.camera.isOrthographicCamera){const a=this.camera.right-this.camera.left,l=this.camera.bottom-this.camera.top;s=Math.max(a,l),o=s/20,n=s/this.camera.zoom*3,i=n/o*this.camera.zoom}else if(this.camera.isPerspectiveCamera){const a=this.camera.position.distanceTo(this._gizmos.position),l=fe.DEG2RAD*this.camera.fov*.5,d=Math.atan(this.camera.aspect*Math.tan(l));s=Math.tan(Math.max(l,d))*a*2,o=s/20,n=s*3,i=n/o}this._grid==null&&(this._grid=new Fg(n,i,8947848,8947848),this._grid.position.copy(this._gizmos.position),this._gridPosition.copy(this._grid.position),this._grid.quaternion.copy(this.camera.quaternion),this._grid.rotateX(Math.PI*.5),this.scene.add(this._grid))}};dispose=()=>{this._animationId!=-1&&window.cancelAnimationFrame(this._animationId),this.domElement.removeEventListener("pointerdown",this.onPointerDown),this.domElement.removeEventListener("pointercancel",this.onPointerCancel),this.domElement.removeEventListener("wheel",this.onWheel),this.domElement.removeEventListener("contextmenu",this.onContextMenu),window.removeEventListener("pointermove",this.onPointerMove),window.removeEventListener("pointerup",this.onPointerUp),window.removeEventListener("resize",this.onWindowResize),this.scene!==null&&this.scene.remove(this._gizmos),this.disposeGrid()};disposeGrid=()=>{this._grid!=null&&this.scene!=null&&(this.scene.remove(this._grid),this._grid=null)};easeOutCubic=t=>1-Math.pow(1-t,3);activateGizmos=t=>{const e=this._gizmos.children[0],n=this._gizmos.children[1],i=this._gizmos.children[2];t?(e.material.setValues({opacity:1}),n.material.setValues({opacity:1}),i.material.setValues({opacity:1})):(e.material.setValues({opacity:.6}),n.material.setValues({opacity:.6}),i.material.setValues({opacity:.6}))};getCursorNDC=(t,e,n)=>{const i=n.getBoundingClientRect();return this._v2_1.setX((t-i.left)/i.width*2-1),this._v2_1.setY((i.bottom-e)/i.height*2-1),this._v2_1.clone()};getCursorPosition=(t,e,n)=>(this._v2_1.copy(this.getCursorNDC(t,e,n)),this._v2_1.x*=(this.camera.right-this.camera.left)*.5,this._v2_1.y*=(this.camera.top-this.camera.bottom)*.5,this._v2_1.clone());setCamera=t=>{t.lookAt(this.target),t.updateMatrix(),t.type=="PerspectiveCamera"&&(this._fov0=t.fov,this._fovState=t.fov),this._cameraMatrixState0.copy(t.matrix),this._cameraMatrixState.copy(this._cameraMatrixState0),this._cameraProjectionState.copy(t.projectionMatrix),this._zoom0=t.zoom,this._zoomState=this._zoom0,this._initialNear=t.near,this._nearPos0=t.position.distanceTo(this.target)-t.near,this._nearPos=this._initialNear,this._initialFar=t.far,this._farPos0=t.position.distanceTo(this.target)-t.far,this._farPos=this._initialFar,this._up0.copy(t.up),this._upState.copy(t.up),this.camera=t,this.camera.updateProjectionMatrix(),this._tbRadius=this.calculateTbRadius(t),this.makeGizmos(this.target,this._tbRadius)};setGizmosVisible(t){this._gizmos.visible=t,this.dispatchEvent(ie)}setTbRadius(t){this.radiusFactor=t,this._tbRadius=this.calculateTbRadius(this.camera);const n=new li(0,0,this._tbRadius,this._tbRadius).getPoints(this._curvePts),i=new me().setFromPoints(n);for(const s in this._gizmos.children)this._gizmos.children[s].geometry=i;this.dispatchEvent(ie)}makeGizmos=(t,e)=>{const i=new li(0,0,e,e).getPoints(this._curvePts),s=new me().setFromPoints(i),o=new di({color:16744576,fog:!1,transparent:!0,opacity:.6}),a=new di({color:8454016,fog:!1,transparent:!0,opacity:.6}),l=new di({color:8421631,fog:!1,transparent:!0,opacity:.6}),d=new wr(s,o),c=new wr(s,a),u=new wr(s,l),h=Math.PI*.5;if(d.rotation.x=h,c.rotation.y=h,this._gizmoMatrixState0.identity().setPosition(t),this._gizmoMatrixState.copy(this._gizmoMatrixState0),this.camera.zoom!==1){const m=1/this.camera.zoom;this._scaleMatrix.makeScale(m,m,m),this._translationMatrix.makeTranslation(-t.x,-t.y,-t.z),this._gizmoMatrixState.premultiply(this._translationMatrix).premultiply(this._scaleMatrix),this._translationMatrix.makeTranslation(t.x,t.y,t.z),this._gizmoMatrixState.premultiply(this._translationMatrix)}this._gizmoMatrixState.decompose(this._gizmos.position,this._gizmos.quaternion,this._gizmos.scale),this._gizmos.traverse(function(m){m.isLine&&(m.geometry.dispose(),m.material.dispose())}),this._gizmos.clear(),this._gizmos.add(d),this._gizmos.add(c),this._gizmos.add(u)};onFocusAnim=(t,e,n,i)=>{if(this._timeStart==-1&&(this._timeStart=t),this._state==Lt.ANIMATION_FOCUS){const o=(t-this._timeStart)/this.focusAnimationTime;if(this._gizmoMatrixState.copy(i),o>=1)this._gizmoMatrixState.decompose(this._gizmos.position,this._gizmos.quaternion,this._gizmos.scale),this.focus(e,this.scaleFactor),this._timeStart=-1,this.updateTbState(Lt.IDLE,!1),this.activateGizmos(!1),this.dispatchEvent(ie);else{const a=this.easeOutCubic(o),l=1-a+this.scaleFactor*a;this._gizmoMatrixState.decompose(this._gizmos.position,this._gizmos.quaternion,this._gizmos.scale),this.focus(e,l,a),this.dispatchEvent(ie);const d=this;this._animationId=window.requestAnimationFrame(function(c){d.onFocusAnim(c,e,n,i.clone())})}}else this._animationId=-1,this._timeStart=-1};onRotationAnim=(t,e,n)=>{if(this._timeStart==-1&&(this._anglePrev=0,this._angleCurrent=0,this._timeStart=t),this._state==Lt.ANIMATION_ROTATE){const i=(t-this._timeStart)/1e3;if(n+-this.dampingFactor*i>0){this._angleCurrent=.5*-this.dampingFactor*Math.pow(i,2)+n*i+0,this.applyTransformMatrix(this.rotate(e,this._angleCurrent)),this.dispatchEvent(ie);const o=this;this._animationId=window.requestAnimationFrame(function(a){o.onRotationAnim(a,e,n)})}else this._animationId=-1,this._timeStart=-1,this.updateTbState(Lt.IDLE,!1),this.activateGizmos(!1),this.dispatchEvent(ie)}else this._animationId=-1,this._timeStart=-1,this._state!=Lt.ROTATE&&(this.activateGizmos(!1),this.dispatchEvent(ie))};pan=(t,e,n=!1)=>{const i=t.clone().sub(e);if(this.camera.isOrthographicCamera)i.multiplyScalar(1/this.camera.zoom);else if(this.camera.isPerspectiveCamera&&n){this._v3_1.setFromMatrixPosition(this._cameraMatrixState0),this._v3_2.setFromMatrixPosition(this._gizmoMatrixState0);const s=this._v3_1.distanceTo(this._v3_2)/this.camera.position.distanceTo(this._gizmos.position);i.multiplyScalar(1/s)}return this._v3_1.set(i.x,i.y,0).applyQuaternion(this.camera.quaternion),this._m4_1.makeTranslation(this._v3_1.x,this._v3_1.y,this._v3_1.z),this.setTransformationMatrices(this._m4_1,this._m4_1),$e};reset=()=>{this.camera.zoom=this._zoom0,this.camera.isPerspectiveCamera&&(this.camera.fov=this._fov0),this.camera.near=this._nearPos,this.camera.far=this._farPos,this._cameraMatrixState.copy(this._cameraMatrixState0),this._cameraMatrixState.decompose(this.camera.position,this.camera.quaternion,this.camera.scale),this.camera.up.copy(this._up0),this.camera.updateMatrix(),this.camera.updateProjectionMatrix(),this._gizmoMatrixState.copy(this._gizmoMatrixState0),this._gizmoMatrixState0.decompose(this._gizmos.position,this._gizmos.quaternion,this._gizmos.scale),this._gizmos.updateMatrix(),this._tbRadius=this.calculateTbRadius(this.camera),this.makeGizmos(this._gizmos.position,this._tbRadius),this.camera.lookAt(this._gizmos.position),this.updateTbState(Lt.IDLE,!1),this.dispatchEvent(ie)};rotate=(t,e)=>{const n=this._gizmos.position;return this._translationMatrix.makeTranslation(-n.x,-n.y,-n.z),this._rotationMatrix.makeRotationAxis(t,-e),this._m4_1.makeTranslation(n.x,n.y,n.z),this._m4_1.multiply(this._rotationMatrix),this._m4_1.multiply(this._translationMatrix),this.setTransformationMatrices(this._m4_1),$e};copyState=()=>{let t;this.camera.isOrthographicCamera?t=JSON.stringify({arcballState:{cameraFar:this.camera.far,cameraMatrix:this.camera.matrix,cameraNear:this.camera.near,cameraUp:this.camera.up,cameraZoom:this.camera.zoom,gizmoMatrix:this._gizmos.matrix}}):this.camera.isPerspectiveCamera&&(t=JSON.stringify({arcballState:{cameraFar:this.camera.far,cameraFov:this.camera.fov,cameraMatrix:this.camera.matrix,cameraNear:this.camera.near,cameraUp:this.camera.up,cameraZoom:this.camera.zoom,gizmoMatrix:this._gizmos.matrix}})),navigator.clipboard.writeText(t)};pasteState=()=>{const t=this;navigator.clipboard.readText().then(function(n){t.setStateFromJSON(n)})};saveState=()=>{this._cameraMatrixState0.copy(this.camera.matrix),this._gizmoMatrixState0.copy(this._gizmos.matrix),this._nearPos=this.camera.near,this._farPos=this.camera.far,this._zoom0=this.camera.zoom,this._up0.copy(this.camera.up),this.camera.isPerspectiveCamera&&(this._fov0=this.camera.fov)};scale=(t,e,n=!0)=>{fn.copy(e);let i=1/t;if(this.camera.isOrthographicCamera){this.camera.zoom=this._zoomState,this.camera.zoom*=t,this.camera.zoom>this.maxZoom?(this.camera.zoom=this.maxZoom,i=this._zoomState/this.maxZoom):this.camera.zoom<this.minZoom&&(this.camera.zoom=this.minZoom,i=this._zoomState/this.minZoom),this.camera.updateProjectionMatrix(),this._v3_1.setFromMatrixPosition(this._gizmoMatrixState),this._scaleMatrix.makeScale(i,i,i),this._translationMatrix.makeTranslation(-this._v3_1.x,-this._v3_1.y,-this._v3_1.z),this._m4_2.makeTranslation(this._v3_1.x,this._v3_1.y,this._v3_1.z).multiply(this._scaleMatrix),this._m4_2.multiply(this._translationMatrix),fn.sub(this._v3_1);const s=fn.clone().multiplyScalar(i);return fn.sub(s),this._m4_1.makeTranslation(fn.x,fn.y,fn.z),this._m4_2.premultiply(this._m4_1),this.setTransformationMatrices(this._m4_1,this._m4_2),$e}else if(this.camera.isPerspectiveCamera){this._v3_1.setFromMatrixPosition(this._cameraMatrixState),this._v3_2.setFromMatrixPosition(this._gizmoMatrixState);let s=this._v3_1.distanceTo(fn),o=s-s*i;const a=s-o;if(a<this.minDistance?(i=this.minDistance/s,o=s-s*i):a>this.maxDistance&&(i=this.maxDistance/s,o=s-s*i),xe.copy(fn).sub(this._v3_1).normalize().multiplyScalar(o),this._m4_1.makeTranslation(xe.x,xe.y,xe.z),n){const l=this._v3_2;s=l.distanceTo(fn),o=s-s*i,xe.copy(fn).sub(this._v3_2).normalize().multiplyScalar(o),this._translationMatrix.makeTranslation(l.x,l.y,l.z),this._scaleMatrix.makeScale(i,i,i),this._m4_2.makeTranslation(xe.x,xe.y,xe.z).multiply(this._translationMatrix),this._m4_2.multiply(this._scaleMatrix),this._translationMatrix.makeTranslation(-l.x,-l.y,-l.z),this._m4_2.multiply(this._translationMatrix),this.setTransformationMatrices(this._m4_1,this._m4_2)}else this.setTransformationMatrices(this._m4_1);return $e}};setFov=t=>{this.camera.isPerspectiveCamera&&(this.camera.fov=fe.clamp(t,this.minFov,this.maxFov),this.camera.updateProjectionMatrix())};setTransformationMatrices(t=null,e=null){t!=null?$e.camera!=null?$e.camera.copy(t):$e.camera=t.clone():$e.camera=null,e!=null?$e.gizmos!=null?$e.gizmos.copy(e):$e.gizmos=e.clone():$e.gizmos=null}zRotate=(t,e)=>(this._rotationMatrix.makeRotationAxis(this._rotationAxis,e),this._translationMatrix.makeTranslation(-t.x,-t.y,-t.z),this._m4_1.makeTranslation(t.x,t.y,t.z),this._m4_1.multiply(this._rotationMatrix),this._m4_1.multiply(this._translationMatrix),this._v3_1.setFromMatrixPosition(this._gizmoMatrixState).sub(t),this._v3_2.copy(this._v3_1).applyAxisAngle(this._rotationAxis,e),this._v3_2.sub(this._v3_1),this._m4_2.makeTranslation(this._v3_2.x,this._v3_2.y,this._v3_2.z),this.setTransformationMatrices(this._m4_1,this._m4_2),$e);getRaycaster(){return Rg}unprojectOnObj=(t,e)=>{const n=this.getRaycaster();n.near=e.near,n.far=e.far,n.setFromCamera(t,e);const i=n.intersectObjects(this.scene.children,!0);for(let s=0;s<i.length;s++)if(i[s].object.uuid!=this._gizmos.uuid&&i[s].face!=null)return i[s].point.clone();return null};unprojectOnTbSurface=(t,e,n,i,s)=>{if(t.type=="OrthographicCamera"){this._v2_1.copy(this.getCursorPosition(e,n,i)),this._v3_1.set(this._v2_1.x,this._v2_1.y,0);const o=Math.pow(this._v2_1.x,2),a=Math.pow(this._v2_1.y,2),l=Math.pow(this._tbRadius,2);return o+a<=l*.5?this._v3_1.setZ(Math.sqrt(l-(o+a))):this._v3_1.setZ(l*.5/Math.sqrt(o+a)),this._v3_1}else if(t.type=="PerspectiveCamera"){this._v2_1.copy(this.getCursorNDC(e,n,i)),this._v3_1.set(this._v2_1.x,this._v2_1.y,-1),this._v3_1.applyMatrix4(t.projectionMatrixInverse);const o=this._v3_1.clone().normalize(),a=t.position.distanceTo(this._gizmos.position),l=Math.pow(s,2),d=this._v3_1.z,c=Math.sqrt(Math.pow(this._v3_1.x,2)+Math.pow(this._v3_1.y,2));if(c==0)return o.set(this._v3_1.x,this._v3_1.y,s),o;const u=d/c,h=a;let m=Math.pow(u,2)+1,g=2*u*h,f=Math.pow(h,2)-l,p=Math.pow(g,2)-4*m*f;if(p>=0&&(this._v2_1.setX((-g-Math.sqrt(p))/(2*m)),this._v2_1.setY(u*this._v2_1.x+h),fe.RAD2DEG*this._v2_1.angle()>=45)){const _=Math.sqrt(Math.pow(this._v2_1.x,2)+Math.pow(a-this._v2_1.y,2));return o.multiplyScalar(_),o.z+=a,o}m=u,g=h,f=-l*.5,p=Math.pow(g,2)-4*m*f,this._v2_1.setX((-g-Math.sqrt(p))/(2*m)),this._v2_1.setY(u*this._v2_1.x+h);const v=Math.sqrt(Math.pow(this._v2_1.x,2)+Math.pow(a-this._v2_1.y,2));return o.multiplyScalar(v),o.z+=a,o}};unprojectOnTbPlane=(t,e,n,i,s=!1)=>{if(t.type=="OrthographicCamera")return this._v2_1.copy(this.getCursorPosition(e,n,i)),this._v3_1.set(this._v2_1.x,this._v2_1.y,0),this._v3_1.clone();if(t.type=="PerspectiveCamera"){this._v2_1.copy(this.getCursorNDC(e,n,i)),this._v3_1.set(this._v2_1.x,this._v2_1.y,-1),this._v3_1.applyMatrix4(t.projectionMatrixInverse);const o=this._v3_1.clone().normalize(),a=this._v3_1.z,l=Math.sqrt(Math.pow(this._v3_1.x,2)+Math.pow(this._v3_1.y,2));let d;if(s?d=this._v3_1.setFromMatrixPosition(this._cameraMatrixState0).distanceTo(this._v3_2.setFromMatrixPosition(this._gizmoMatrixState0)):d=t.position.distanceTo(this._gizmos.position),l==0)return o.set(0,0,0),o;const c=a/l,u=d,h=-u/c,m=Math.sqrt(Math.pow(u,2)+Math.pow(h,2));return o.multiplyScalar(m),o.z=0,o}};updateMatrixState=()=>{this._cameraMatrixState.copy(this.camera.matrix),this._gizmoMatrixState.copy(this._gizmos.matrix),this.camera.isOrthographicCamera?(this._cameraProjectionState.copy(this.camera.projectionMatrix),this.camera.updateProjectionMatrix(),this._zoomState=this.camera.zoom):this.camera.isPerspectiveCamera&&(this._fovState=this.camera.fov)};updateTbState=(t,e)=>{this._state=t,e&&this.updateMatrixState()};update=()=>{if(this.target.equals(this._currentTarget)===!1&&(this._gizmos.position.copy(this.target),this._tbRadius=this.calculateTbRadius(this.camera),this.makeGizmos(this.target,this._tbRadius),this._currentTarget.copy(this.target)),this.camera.isOrthographicCamera){if(this.camera.zoom>this.maxZoom||this.camera.zoom<this.minZoom){const e=fe.clamp(this.camera.zoom,this.minZoom,this.maxZoom);this.applyTransformMatrix(this.scale(e/this.camera.zoom,this._gizmos.position,!0))}}else if(this.camera.isPerspectiveCamera){const e=this.camera.position.distanceTo(this._gizmos.position);if(e>this.maxDistance+1e-6||e<this.minDistance-1e-6){const i=fe.clamp(e,this.minDistance,this.maxDistance);this.applyTransformMatrix(this.scale(i/e,this._gizmos.position)),this.updateMatrixState()}(this.camera.fov<this.minFov||this.camera.fov>this.maxFov)&&(this.camera.fov=fe.clamp(this.camera.fov,this.minFov,this.maxFov),this.camera.updateProjectionMatrix());const n=this._tbRadius;if(this._tbRadius=this.calculateTbRadius(this.camera),n<this._tbRadius-1e-6||n>this._tbRadius+1e-6){const i=(this._gizmos.scale.x+this._gizmos.scale.y+this._gizmos.scale.z)/3,s=this._tbRadius/i,a=new li(0,0,s,s).getPoints(this._curvePts),l=new me().setFromPoints(a);for(const d in this._gizmos.children)this._gizmos.children[d].geometry=l}}this.camera.lookAt(this._gizmos.position)};setStateFromJSON=t=>{const e=JSON.parse(t);if(e.arcballState!=null){this._cameraMatrixState.fromArray(e.arcballState.cameraMatrix.elements),this._cameraMatrixState.decompose(this.camera.position,this.camera.quaternion,this.camera.scale),this.camera.up.copy(e.arcballState.cameraUp),this.camera.near=e.arcballState.cameraNear,this.camera.far=e.arcballState.cameraFar,this.camera.zoom=e.arcballState.cameraZoom,this.camera.isPerspectiveCamera&&(this.camera.fov=e.arcballState.cameraFov),this._gizmoMatrixState.fromArray(e.arcballState.gizmoMatrix.elements),this._gizmoMatrixState.decompose(this._gizmos.position,this._gizmos.quaternion,this._gizmos.scale),this.camera.updateMatrix(),this.camera.updateProjectionMatrix(),this._gizmos.updateMatrix(),this._tbRadius=this.calculateTbRadius(this.camera);const n=new Jt().copy(this._gizmoMatrixState0);this.makeGizmos(this._gizmos.position,this._tbRadius),this._gizmoMatrixState0.copy(n),this.camera.lookAt(this._gizmos.position),this.updateTbState(Lt.IDLE,!1),this.dispatchEvent(ie)}}}const Mo={type:"change"},Do={type:"start"},bo={type:"end"};class Ig extends Jn{constructor(t,e){super();const n=this,i={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4};this.object=t,this.domElement=e,this.domElement.style.touchAction="none",this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:_r.ROTATE,MIDDLE:_r.DOLLY,RIGHT:_r.PAN},this.target=new q;const s=1e-6,o=new q;let a=1,l=i.NONE,d=i.NONE,c=0,u=0,h=0;const m=new q,g=new Dt,f=new Dt,p=new q,v=new Dt,M=new Dt,_=new Dt,w=new Dt,D=[],b={};this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.up0=this.object.up.clone(),this.zoom0=this.object.zoom,this.handleResize=function(){const E=n.domElement.getBoundingClientRect(),H=n.domElement.ownerDocument.documentElement;n.screen.left=E.left+window.pageXOffset-H.clientLeft,n.screen.top=E.top+window.pageYOffset-H.clientTop,n.screen.width=E.width,n.screen.height=E.height};const C=function(){const E=new Dt;return function(K,V){return E.set((K-n.screen.left)/n.screen.width,(V-n.screen.top)/n.screen.height),E}}(),x=function(){const E=new Dt;return function(K,V){return E.set((K-n.screen.width*.5-n.screen.left)/(n.screen.width*.5),(n.screen.height+2*(n.screen.top-V))/n.screen.width),E}}();this.rotateCamera=function(){const E=new q,H=new Kn,K=new q,V=new q,mt=new q,ft=new q;return function(){ft.set(f.x-g.x,f.y-g.y,0);let ct=ft.length();ct?(m.copy(n.object.position).sub(n.target),K.copy(m).normalize(),V.copy(n.object.up).normalize(),mt.crossVectors(V,K).normalize(),V.setLength(f.y-g.y),mt.setLength(f.x-g.x),ft.copy(V.add(mt)),E.crossVectors(ft,m).normalize(),ct*=n.rotateSpeed,H.setFromAxisAngle(E,ct),m.applyQuaternion(H),n.object.up.applyQuaternion(H),p.copy(E),h=ct):!n.staticMoving&&h&&(h*=Math.sqrt(1-n.dynamicDampingFactor),m.copy(n.object.position).sub(n.target),H.setFromAxisAngle(p,h),m.applyQuaternion(H),n.object.up.applyQuaternion(H)),g.copy(f)}}(),this.zoomCamera=function(){let E;l===i.TOUCH_ZOOM_PAN?(E=c/u,c=u,n.object.isPerspectiveCamera?m.multiplyScalar(E):n.object.isOrthographicCamera?(n.object.zoom/=E,n.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(E=1+(M.y-v.y)*n.zoomSpeed,E!==1&&E>0&&(n.object.isPerspectiveCamera?m.multiplyScalar(E):n.object.isOrthographicCamera?(n.object.zoom/=E,n.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),n.staticMoving?v.copy(M):v.y+=(M.y-v.y)*this.dynamicDampingFactor)},this.panCamera=function(){const E=new Dt,H=new q,K=new q;return function(){if(E.copy(w).sub(_),E.lengthSq()){if(n.object.isOrthographicCamera){const mt=(n.object.right-n.object.left)/n.object.zoom/n.domElement.clientWidth,ft=(n.object.top-n.object.bottom)/n.object.zoom/n.domElement.clientWidth;E.x*=mt,E.y*=ft}E.multiplyScalar(m.length()*n.panSpeed),K.copy(m).cross(n.object.up).setLength(E.x),K.add(H.copy(n.object.up).setLength(E.y)),n.object.position.add(K),n.target.add(K),n.staticMoving?_.copy(w):_.add(E.subVectors(w,_).multiplyScalar(n.dynamicDampingFactor))}}}(),this.checkDistances=function(){(!n.noZoom||!n.noPan)&&(m.lengthSq()>n.maxDistance*n.maxDistance&&(n.object.position.addVectors(n.target,m.setLength(n.maxDistance)),v.copy(M)),m.lengthSq()<n.minDistance*n.minDistance&&(n.object.position.addVectors(n.target,m.setLength(n.minDistance)),v.copy(M)))},this.update=function(){m.subVectors(n.object.position,n.target),n.noRotate||n.rotateCamera(),n.noZoom||n.zoomCamera(),n.noPan||n.panCamera(),n.object.position.addVectors(n.target,m),n.object.isPerspectiveCamera?(n.checkDistances(),n.object.lookAt(n.target),o.distanceToSquared(n.object.position)>s&&(n.dispatchEvent(Mo),o.copy(n.object.position))):n.object.isOrthographicCamera?(n.object.lookAt(n.target),(o.distanceToSquared(n.object.position)>s||a!==n.object.zoom)&&(n.dispatchEvent(Mo),o.copy(n.object.position),a=n.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type")},this.reset=function(){l=i.NONE,d=i.NONE,n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.up.copy(n.up0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),m.subVectors(n.object.position,n.target),n.object.lookAt(n.target),n.dispatchEvent(Mo),o.copy(n.object.position),a=n.object.zoom};function S(E){n.enabled!==!1&&(D.length===0&&(n.domElement.setPointerCapture(E.pointerId),n.domElement.addEventListener("pointermove",F),n.domElement.addEventListener("pointerup",U)),vt(E),E.pointerType==="touch"?rt(E):Y(E))}function F(E){n.enabled!==!1&&(E.pointerType==="touch"?tt(E):X(E))}function U(E){n.enabled!==!1&&(E.pointerType==="touch"?it(E):J(),B(E),D.length===0&&(n.domElement.releasePointerCapture(E.pointerId),n.domElement.removeEventListener("pointermove",F),n.domElement.removeEventListener("pointerup",U)))}function k(E){B(E)}function G(E){n.enabled!==!1&&(window.removeEventListener("keydown",G),d===i.NONE&&(E.code===n.keys[i.ROTATE]&&!n.noRotate?d=i.ROTATE:E.code===n.keys[i.ZOOM]&&!n.noZoom?d=i.ZOOM:E.code===n.keys[i.PAN]&&!n.noPan&&(d=i.PAN)))}function z(){n.enabled!==!1&&(d=i.NONE,window.addEventListener("keydown",G))}function Y(E){if(l===i.NONE)switch(E.button){case n.mouseButtons.LEFT:l=i.ROTATE;break;case n.mouseButtons.MIDDLE:l=i.ZOOM;break;case n.mouseButtons.RIGHT:l=i.PAN;break}const H=d!==i.NONE?d:l;H===i.ROTATE&&!n.noRotate?(f.copy(x(E.pageX,E.pageY)),g.copy(f)):H===i.ZOOM&&!n.noZoom?(v.copy(C(E.pageX,E.pageY)),M.copy(v)):H===i.PAN&&!n.noPan&&(_.copy(C(E.pageX,E.pageY)),w.copy(_)),n.dispatchEvent(Do)}function X(E){const H=d!==i.NONE?d:l;H===i.ROTATE&&!n.noRotate?(g.copy(f),f.copy(x(E.pageX,E.pageY))):H===i.ZOOM&&!n.noZoom?M.copy(C(E.pageX,E.pageY)):H===i.PAN&&!n.noPan&&w.copy(C(E.pageX,E.pageY))}function J(){l=i.NONE,n.dispatchEvent(bo)}function I(E){if(n.enabled!==!1&&n.noZoom!==!0){switch(E.preventDefault(),E.deltaMode){case 2:v.y-=E.deltaY*.025;break;case 1:v.y-=E.deltaY*.01;break;default:v.y-=E.deltaY*25e-5;break}n.dispatchEvent(Do),n.dispatchEvent(bo)}}function rt(E){switch(L(E),D.length){case 1:l=i.TOUCH_ROTATE,f.copy(x(D[0].pageX,D[0].pageY)),g.copy(f);break;default:l=i.TOUCH_ZOOM_PAN;const H=D[0].pageX-D[1].pageX,K=D[0].pageY-D[1].pageY;u=c=Math.sqrt(H*H+K*K);const V=(D[0].pageX+D[1].pageX)/2,mt=(D[0].pageY+D[1].pageY)/2;_.copy(C(V,mt)),w.copy(_);break}n.dispatchEvent(Do)}function tt(E){switch(L(E),D.length){case 1:g.copy(f),f.copy(x(E.pageX,E.pageY));break;default:const H=A(E),K=E.pageX-H.x,V=E.pageY-H.y;u=Math.sqrt(K*K+V*V);const mt=(E.pageX+H.x)/2,ft=(E.pageY+H.y)/2;w.copy(C(mt,ft));break}}function it(E){switch(D.length){case 0:l=i.NONE;break;case 1:l=i.TOUCH_ROTATE,f.copy(x(E.pageX,E.pageY)),g.copy(f);break;case 2:l=i.TOUCH_ZOOM_PAN;for(let H=0;H<D.length;H++)if(D[H].pointerId!==E.pointerId){const K=b[D[H].pointerId];f.copy(x(K.x,K.y)),g.copy(f);break}break}n.dispatchEvent(bo)}function et(E){n.enabled!==!1&&E.preventDefault()}function vt(E){D.push(E)}function B(E){delete b[E.pointerId];for(let H=0;H<D.length;H++)if(D[H].pointerId==E.pointerId){D.splice(H,1);return}}function L(E){let H=b[E.pointerId];H===void 0&&(H=new Dt,b[E.pointerId]=H),H.set(E.pageX,E.pageY)}function A(E){const H=E.pointerId===D[0].pointerId?D[1]:D[0];return b[H.pointerId]}this.dispose=function(){n.domElement.removeEventListener("contextmenu",et),n.domElement.removeEventListener("pointerdown",S),n.domElement.removeEventListener("pointercancel",k),n.domElement.removeEventListener("wheel",I),n.domElement.removeEventListener("pointermove",F),n.domElement.removeEventListener("pointerup",U),window.removeEventListener("keydown",G),window.removeEventListener("keyup",z)},this.domElement.addEventListener("contextmenu",et),this.domElement.addEventListener("pointerdown",S),this.domElement.addEventListener("pointercancel",k),this.domElement.addEventListener("wheel",I,{passive:!1}),window.addEventListener("keydown",G),window.addEventListener("keyup",z),this.handleResize(),this.update()}}class Fs extends Zc{constructor(t){super(t),this.defaultDPI=90,this.defaultUnit="px"}load(t,e,n,i){const s=this,o=new Eg(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(t,function(a){try{e(s.parse(a))}catch(l){i?i(l):console.error(l),s.manager.itemError(t)}},n,i)}parse(t){const e=this;function n(B,L){if(B.nodeType!==1)return;const A=w(B);let E=!1,H=null;switch(B.nodeName){case"svg":L=g(B,L);break;case"style":s(B);break;case"g":L=g(B,L);break;case"path":L=g(B,L),B.hasAttribute("d")&&(H=i(B));break;case"rect":L=g(B,L),H=l(B);break;case"polygon":L=g(B,L),H=d(B);break;case"polyline":L=g(B,L),H=c(B);break;case"circle":L=g(B,L),H=u(B);break;case"ellipse":L=g(B,L),H=h(B);break;case"line":L=g(B,L),H=m(B);break;case"defs":E=!0;break;case"use":L=g(B,L);const mt=(B.getAttributeNS("http://www.w3.org/1999/xlink","href")||"").substring(1),ft=B.viewportElement.getElementById(mt);ft?n(ft,L):console.warn("SVGLoader: 'use node' references non-existent node id: "+mt);break}H&&(L.fill!==void 0&&L.fill!=="none"&&H.color.setStyle(L.fill),b(H,it),k.push(H),H.userData={node:B,style:L});const K=B.childNodes;for(let V=0;V<K.length;V++){const mt=K[V];E&&mt.nodeName!=="style"&&mt.nodeName!=="defs"||n(mt,L)}A&&(z.pop(),z.length>0?it.copy(z[z.length-1]):it.identity())}function i(B){const L=new ii,A=new Dt,E=new Dt,H=new Dt;let K=!0,V=!1;const ft=B.getAttribute("d").match(/[a-df-z][^a-df-z]*/ig);for(let ht=0,ct=ft.length;ht<ct;ht++){const _t=ft[ht],bt=_t.charAt(0),Et=_t.slice(1).trim();K===!0&&(V=!0,K=!1);let $;switch(bt){case"M":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N+=2)A.x=$[N+0],A.y=$[N+1],E.x=A.x,E.y=A.y,N===0?L.moveTo(A.x,A.y):L.lineTo(A.x,A.y),N===0&&H.copy(A);break;case"H":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N++)A.x=$[N],E.x=A.x,E.y=A.y,L.lineTo(A.x,A.y),N===0&&V===!0&&H.copy(A);break;case"V":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N++)A.y=$[N],E.x=A.x,E.y=A.y,L.lineTo(A.x,A.y),N===0&&V===!0&&H.copy(A);break;case"L":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N+=2)A.x=$[N+0],A.y=$[N+1],E.x=A.x,E.y=A.y,L.lineTo(A.x,A.y),N===0&&V===!0&&H.copy(A);break;case"C":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N+=6)L.bezierCurveTo($[N+0],$[N+1],$[N+2],$[N+3],$[N+4],$[N+5]),E.x=$[N+2],E.y=$[N+3],A.x=$[N+4],A.y=$[N+5],N===0&&V===!0&&H.copy(A);break;case"S":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N+=4)L.bezierCurveTo(f(A.x,E.x),f(A.y,E.y),$[N+0],$[N+1],$[N+2],$[N+3]),E.x=$[N+0],E.y=$[N+1],A.x=$[N+2],A.y=$[N+3],N===0&&V===!0&&H.copy(A);break;case"Q":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N+=4)L.quadraticCurveTo($[N+0],$[N+1],$[N+2],$[N+3]),E.x=$[N+0],E.y=$[N+1],A.x=$[N+2],A.y=$[N+3],N===0&&V===!0&&H.copy(A);break;case"T":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N+=2){const zt=f(A.x,E.x),R=f(A.y,E.y);L.quadraticCurveTo(zt,R,$[N+0],$[N+1]),E.x=zt,E.y=R,A.x=$[N+0],A.y=$[N+1],N===0&&V===!0&&H.copy(A)}break;case"A":$=p(Et,[3,4],7);for(let N=0,Tt=$.length;N<Tt;N+=7){if($[N+5]==A.x&&$[N+6]==A.y)continue;const zt=A.clone();A.x=$[N+5],A.y=$[N+6],E.x=A.x,E.y=A.y,o(L,$[N],$[N+1],$[N+2],$[N+3],$[N+4],zt,A),N===0&&V===!0&&H.copy(A)}break;case"m":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N+=2)A.x+=$[N+0],A.y+=$[N+1],E.x=A.x,E.y=A.y,N===0?L.moveTo(A.x,A.y):L.lineTo(A.x,A.y),N===0&&H.copy(A);break;case"h":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N++)A.x+=$[N],E.x=A.x,E.y=A.y,L.lineTo(A.x,A.y),N===0&&V===!0&&H.copy(A);break;case"v":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N++)A.y+=$[N],E.x=A.x,E.y=A.y,L.lineTo(A.x,A.y),N===0&&V===!0&&H.copy(A);break;case"l":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N+=2)A.x+=$[N+0],A.y+=$[N+1],E.x=A.x,E.y=A.y,L.lineTo(A.x,A.y),N===0&&V===!0&&H.copy(A);break;case"c":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N+=6)L.bezierCurveTo(A.x+$[N+0],A.y+$[N+1],A.x+$[N+2],A.y+$[N+3],A.x+$[N+4],A.y+$[N+5]),E.x=A.x+$[N+2],E.y=A.y+$[N+3],A.x+=$[N+4],A.y+=$[N+5],N===0&&V===!0&&H.copy(A);break;case"s":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N+=4)L.bezierCurveTo(f(A.x,E.x),f(A.y,E.y),A.x+$[N+0],A.y+$[N+1],A.x+$[N+2],A.y+$[N+3]),E.x=A.x+$[N+0],E.y=A.y+$[N+1],A.x+=$[N+2],A.y+=$[N+3],N===0&&V===!0&&H.copy(A);break;case"q":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N+=4)L.quadraticCurveTo(A.x+$[N+0],A.y+$[N+1],A.x+$[N+2],A.y+$[N+3]),E.x=A.x+$[N+0],E.y=A.y+$[N+1],A.x+=$[N+2],A.y+=$[N+3],N===0&&V===!0&&H.copy(A);break;case"t":$=p(Et);for(let N=0,Tt=$.length;N<Tt;N+=2){const zt=f(A.x,E.x),R=f(A.y,E.y);L.quadraticCurveTo(zt,R,A.x+$[N+0],A.y+$[N+1]),E.x=zt,E.y=R,A.x=A.x+$[N+0],A.y=A.y+$[N+1],N===0&&V===!0&&H.copy(A)}break;case"a":$=p(Et,[3,4],7);for(let N=0,Tt=$.length;N<Tt;N+=7){if($[N+5]==0&&$[N+6]==0)continue;const zt=A.clone();A.x+=$[N+5],A.y+=$[N+6],E.x=A.x,E.y=A.y,o(L,$[N],$[N+1],$[N+2],$[N+3],$[N+4],zt,A),N===0&&V===!0&&H.copy(A)}break;case"Z":case"z":L.currentPath.autoClose=!0,L.currentPath.curves.length>0&&(A.copy(H),L.currentPath.currentPoint.copy(A),K=!0);break;default:console.warn(_t)}V=!1}return L}function s(B){if(!(!B.sheet||!B.sheet.cssRules||!B.sheet.cssRules.length))for(let L=0;L<B.sheet.cssRules.length;L++){const A=B.sheet.cssRules[L];if(A.type!==1)continue;const E=A.selectorText.split(/,/gm).filter(Boolean).map(H=>H.trim());for(let H=0;H<E.length;H++){const K=Object.fromEntries(Object.entries(A.style).filter(([,V])=>V!==""));G[E[H]]=Object.assign(G[E[H]]||{},K)}}}function o(B,L,A,E,H,K,V,mt){if(L==0||A==0){B.lineTo(mt.x,mt.y);return}E=E*Math.PI/180,L=Math.abs(L),A=Math.abs(A);const ft=(V.x-mt.x)/2,ht=(V.y-mt.y)/2,ct=Math.cos(E)*ft+Math.sin(E)*ht,_t=-Math.sin(E)*ft+Math.cos(E)*ht;let bt=L*L,Et=A*A;const $=ct*ct,N=_t*_t,Tt=$/bt+N/Et;if(Tt>1){const W=Math.sqrt(Tt);L=W*L,A=W*A,bt=L*L,Et=A*A}const zt=bt*N+Et*$,R=(bt*Et-zt)/zt;let y=Math.sqrt(Math.max(0,R));H===K&&(y=-y);const T=y*L*_t/A,O=-y*A*ct/L,Z=Math.cos(E)*T-Math.sin(E)*O+(V.x+mt.x)/2,nt=Math.sin(E)*T+Math.cos(E)*O+(V.y+mt.y)/2,lt=a(1,0,(ct-T)/L,(_t-O)/A),st=a((ct-T)/L,(_t-O)/A,(-ct-T)/L,(-_t-O)/A)%(Math.PI*2);B.currentPath.absellipse(Z,nt,L,A,lt,lt+st,K===0,E)}function a(B,L,A,E){const H=B*A+L*E,K=Math.sqrt(B*B+L*L)*Math.sqrt(A*A+E*E);let V=Math.acos(Math.max(-1,Math.min(1,H/K)));return B*E-L*A<0&&(V=-V),V}function l(B){const L=_(B.getAttribute("x")||0),A=_(B.getAttribute("y")||0),E=_(B.getAttribute("rx")||B.getAttribute("ry")||0),H=_(B.getAttribute("ry")||B.getAttribute("rx")||0),K=_(B.getAttribute("width")),V=_(B.getAttribute("height")),mt=1-.551915024494,ft=new ii;return ft.moveTo(L+E,A),ft.lineTo(L+K-E,A),(E!==0||H!==0)&&ft.bezierCurveTo(L+K-E*mt,A,L+K,A+H*mt,L+K,A+H),ft.lineTo(L+K,A+V-H),(E!==0||H!==0)&&ft.bezierCurveTo(L+K,A+V-H*mt,L+K-E*mt,A+V,L+K-E,A+V),ft.lineTo(L+E,A+V),(E!==0||H!==0)&&ft.bezierCurveTo(L+E*mt,A+V,L,A+V-H*mt,L,A+V-H),ft.lineTo(L,A+H),(E!==0||H!==0)&&ft.bezierCurveTo(L,A+H*mt,L+E*mt,A,L+E,A),ft}function d(B){function L(K,V,mt){const ft=_(V),ht=_(mt);H===0?E.moveTo(ft,ht):E.lineTo(ft,ht),H++}const A=/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g,E=new ii;let H=0;return B.getAttribute("points").replace(A,L),E.currentPath.autoClose=!0,E}function c(B){function L(K,V,mt){const ft=_(V),ht=_(mt);H===0?E.moveTo(ft,ht):E.lineTo(ft,ht),H++}const A=/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g,E=new ii;let H=0;return B.getAttribute("points").replace(A,L),E.currentPath.autoClose=!1,E}function u(B){const L=_(B.getAttribute("cx")||0),A=_(B.getAttribute("cy")||0),E=_(B.getAttribute("r")||0),H=new ji;H.absarc(L,A,E,0,Math.PI*2);const K=new ii;return K.subPaths.push(H),K}function h(B){const L=_(B.getAttribute("cx")||0),A=_(B.getAttribute("cy")||0),E=_(B.getAttribute("rx")||0),H=_(B.getAttribute("ry")||0),K=new ji;K.absellipse(L,A,E,H,0,Math.PI*2);const V=new ii;return V.subPaths.push(K),V}function m(B){const L=_(B.getAttribute("x1")||0),A=_(B.getAttribute("y1")||0),E=_(B.getAttribute("x2")||0),H=_(B.getAttribute("y2")||0),K=new ii;return K.moveTo(L,A),K.lineTo(E,H),K.currentPath.autoClose=!1,K}function g(B,L){L=Object.assign({},L);let A={};if(B.hasAttribute("class")){const V=B.getAttribute("class").split(/\s/).filter(Boolean).map(mt=>mt.trim());for(let mt=0;mt<V.length;mt++)A=Object.assign(A,G["."+V[mt]])}B.hasAttribute("id")&&(A=Object.assign(A,G["#"+B.getAttribute("id")]));function E(V,mt,ft){ft===void 0&&(ft=function(ct){return ct.startsWith("url")&&console.warn("SVGLoader: url access in attributes is not implemented."),ct}),B.hasAttribute(V)&&(L[mt]=ft(B.getAttribute(V))),A[V]&&(L[mt]=ft(A[V])),B.style&&B.style[V]!==""&&(L[mt]=ft(B.style[V]))}function H(V){return Math.max(0,Math.min(1,_(V)))}function K(V){return Math.max(0,_(V))}return E("fill","fill"),E("fill-opacity","fillOpacity",H),E("fill-rule","fillRule"),E("opacity","opacity",H),E("stroke","stroke"),E("stroke-opacity","strokeOpacity",H),E("stroke-width","strokeWidth",K),E("stroke-linejoin","strokeLineJoin"),E("stroke-linecap","strokeLineCap"),E("stroke-miterlimit","strokeMiterLimit",K),E("visibility","visibility"),L}function f(B,L){return B-(L-B)}function p(B,L,A){if(typeof B!="string")throw new TypeError("Invalid input: "+typeof B);const E={SEPARATOR:/[ \t\r\n\,.\-+]/,WHITESPACE:/[ \t\r\n]/,DIGIT:/[\d]/,SIGN:/[-+]/,POINT:/\./,COMMA:/,/,EXP:/e/i,FLAGS:/[01]/},H=0,K=1,V=2,mt=3;let ft=H,ht=!0,ct="",_t="";const bt=[];function Et(zt,R,y){const T=new SyntaxError('Unexpected character "'+zt+'" at index '+R+".");throw T.partial=y,T}function $(){ct!==""&&(_t===""?bt.push(Number(ct)):bt.push(Number(ct)*Math.pow(10,Number(_t)))),ct="",_t=""}let N;const Tt=B.length;for(let zt=0;zt<Tt;zt++){if(N=B[zt],Array.isArray(L)&&L.includes(bt.length%A)&&E.FLAGS.test(N)){ft=K,ct=N,$();continue}if(ft===H){if(E.WHITESPACE.test(N))continue;if(E.DIGIT.test(N)||E.SIGN.test(N)){ft=K,ct=N;continue}if(E.POINT.test(N)){ft=V,ct=N;continue}E.COMMA.test(N)&&(ht&&Et(N,zt,bt),ht=!0)}if(ft===K){if(E.DIGIT.test(N)){ct+=N;continue}if(E.POINT.test(N)){ct+=N,ft=V;continue}if(E.EXP.test(N)){ft=mt;continue}E.SIGN.test(N)&&ct.length===1&&E.SIGN.test(ct[0])&&Et(N,zt,bt)}if(ft===V){if(E.DIGIT.test(N)){ct+=N;continue}if(E.EXP.test(N)){ft=mt;continue}E.POINT.test(N)&&ct[ct.length-1]==="."&&Et(N,zt,bt)}if(ft===mt){if(E.DIGIT.test(N)){_t+=N;continue}if(E.SIGN.test(N)){if(_t===""){_t+=N;continue}_t.length===1&&E.SIGN.test(_t)&&Et(N,zt,bt)}}E.WHITESPACE.test(N)?($(),ft=H,ht=!1):E.COMMA.test(N)?($(),ft=H,ht=!0):E.SIGN.test(N)?($(),ft=K,ct=N):E.POINT.test(N)?($(),ft=V,ct=N):Et(N,zt,bt)}return $(),bt}const v=["mm","cm","in","pt","pc","px"],M={mm:{mm:1,cm:.1,in:1/25.4,pt:72/25.4,pc:6/25.4,px:-1},cm:{mm:10,cm:1,in:1/2.54,pt:72/2.54,pc:6/2.54,px:-1},in:{mm:25.4,cm:2.54,in:1,pt:72,pc:6,px:-1},pt:{mm:25.4/72,cm:2.54/72,in:1/72,pt:1,pc:6/72,px:-1},pc:{mm:25.4/6,cm:2.54/6,in:1/6,pt:72/6,pc:1,px:-1},px:{px:1}};function _(B){let L="px";if(typeof B=="string"||B instanceof String)for(let E=0,H=v.length;E<H;E++){const K=v[E];if(B.endsWith(K)){L=K,B=B.substring(0,B.length-K.length);break}}let A;return L==="px"&&e.defaultUnit!=="px"?A=M.in[e.defaultUnit]/e.defaultDPI:(A=M[L][e.defaultUnit],A<0&&(A=M[L].in*e.defaultDPI)),A*parseFloat(B)}function w(B){if(!(B.hasAttribute("transform")||B.nodeName==="use"&&(B.hasAttribute("x")||B.hasAttribute("y"))))return null;const L=D(B);return z.length>0&&L.premultiply(z[z.length-1]),it.copy(L),z.push(L),L}function D(B){const L=new De,A=Y;if(B.nodeName==="use"&&(B.hasAttribute("x")||B.hasAttribute("y"))){const E=_(B.getAttribute("x")),H=_(B.getAttribute("y"));L.translate(E,H)}if(B.hasAttribute("transform")){const E=B.getAttribute("transform").split(")");for(let H=E.length-1;H>=0;H--){const K=E[H].trim();if(K==="")continue;const V=K.indexOf("("),mt=K.length;if(V>0&&V<mt){const ft=K.slice(0,V),ht=p(K.slice(V+1));switch(A.identity(),ft){case"translate":if(ht.length>=1){const ct=ht[0];let _t=0;ht.length>=2&&(_t=ht[1]),A.translate(ct,_t)}break;case"rotate":if(ht.length>=1){let ct=0,_t=0,bt=0;ct=ht[0]*Math.PI/180,ht.length>=3&&(_t=ht[1],bt=ht[2]),X.makeTranslation(-_t,-bt),J.makeRotation(ct),I.multiplyMatrices(J,X),X.makeTranslation(_t,bt),A.multiplyMatrices(X,I)}break;case"scale":if(ht.length>=1){const ct=ht[0];let _t=ct;ht.length>=2&&(_t=ht[1]),A.scale(ct,_t)}break;case"skewX":ht.length===1&&A.set(1,Math.tan(ht[0]*Math.PI/180),0,0,1,0,0,0,1);break;case"skewY":ht.length===1&&A.set(1,0,0,Math.tan(ht[0]*Math.PI/180),1,0,0,0,1);break;case"matrix":ht.length===6&&A.set(ht[0],ht[2],ht[4],ht[1],ht[3],ht[5],0,0,1);break}}L.premultiply(A)}}return L}function b(B,L){function A(V){tt.set(V.x,V.y,1).applyMatrix3(L),V.set(tt.x,tt.y)}function E(V){const mt=V.xRadius,ft=V.yRadius,ht=Math.cos(V.aRotation),ct=Math.sin(V.aRotation),_t=new q(mt*ht,mt*ct,0),bt=new q(-ft*ct,ft*ht,0),Et=_t.applyMatrix3(L),$=bt.applyMatrix3(L),N=Y.set(Et.x,$.x,0,Et.y,$.y,0,0,0,1),Tt=X.copy(N).invert(),y=J.copy(Tt).transpose().multiply(Tt).elements,T=U(y[0],y[1],y[4]),O=Math.sqrt(T.rt1),Z=Math.sqrt(T.rt2);if(V.xRadius=1/O,V.yRadius=1/Z,V.aRotation=Math.atan2(T.sn,T.cs),!((V.aEndAngle-V.aStartAngle)%(2*Math.PI)<Number.EPSILON)){const lt=X.set(O,0,0,0,Z,0,0,0,1),st=J.set(T.cs,T.sn,0,-T.sn,T.cs,0,0,0,1),W=lt.multiply(st).multiply(N),at=yt=>{const{x:Mt,y:dt}=new q(Math.cos(yt),Math.sin(yt),0).applyMatrix3(W);return Math.atan2(dt,Mt)};V.aStartAngle=at(V.aStartAngle),V.aEndAngle=at(V.aEndAngle),C(L)&&(V.aClockwise=!V.aClockwise)}}function H(V){const mt=S(L),ft=F(L);V.xRadius*=mt,V.yRadius*=ft;const ht=mt>Number.EPSILON?Math.atan2(L.elements[1],L.elements[0]):Math.atan2(-L.elements[3],L.elements[4]);V.aRotation+=ht,C(L)&&(V.aStartAngle*=-1,V.aEndAngle*=-1,V.aClockwise=!V.aClockwise)}const K=B.subPaths;for(let V=0,mt=K.length;V<mt;V++){const ht=K[V].curves;for(let ct=0;ct<ht.length;ct++){const _t=ht[ct];_t.isLineCurve?(A(_t.v1),A(_t.v2)):_t.isCubicBezierCurve?(A(_t.v0),A(_t.v1),A(_t.v2),A(_t.v3)):_t.isQuadraticBezierCurve?(A(_t.v0),A(_t.v1),A(_t.v2)):_t.isEllipseCurve&&(rt.set(_t.aX,_t.aY),A(rt),_t.aX=rt.x,_t.aY=rt.y,x(L)?E(_t):H(_t))}}}function C(B){const L=B.elements;return L[0]*L[4]-L[1]*L[3]<0}function x(B){const L=B.elements,A=L[0]*L[3]+L[1]*L[4];if(A===0)return!1;const E=S(B),H=F(B);return Math.abs(A/(E*H))>Number.EPSILON}function S(B){const L=B.elements;return Math.sqrt(L[0]*L[0]+L[1]*L[1])}function F(B){const L=B.elements;return Math.sqrt(L[3]*L[3]+L[4]*L[4])}function U(B,L,A){let E,H,K,V,mt;const ft=B+A,ht=B-A,ct=Math.sqrt(ht*ht+4*L*L);return ft>0?(E=.5*(ft+ct),mt=1/E,H=B*mt*A-L*mt*L):ft<0?H=.5*(ft-ct):(E=.5*ct,H=-.5*ct),ht>0?K=ht+ct:K=ht-ct,Math.abs(K)>2*Math.abs(L)?(mt=-2*L/K,V=1/Math.sqrt(1+mt*mt),K=mt*V):Math.abs(L)===0?(K=1,V=0):(mt=-.5*K/L,K=1/Math.sqrt(1+mt*mt),V=mt*K),ht>0&&(mt=K,K=-V,V=mt),{rt1:E,rt2:H,cs:K,sn:V}}const k=[],G={},z=[],Y=new De,X=new De,J=new De,I=new De,rt=new Dt,tt=new q,it=new De,et=new DOMParser().parseFromString(t,"image/svg+xml");return n(et.documentElement,{fill:"#000",fillOpacity:1,strokeOpacity:1,strokeWidth:1,strokeLineJoin:"miter",strokeLineCap:"butt",strokeMiterLimit:4}),{paths:k,xml:et.documentElement}}static createShapes(t){const n={ORIGIN:0,DESTINATION:1,BETWEEN:2,LEFT:3,RIGHT:4,BEHIND:5,BEYOND:6},i={loc:n.ORIGIN,t:0};function s(f,p,v,M){const _=f.x,w=p.x,D=v.x,b=M.x,C=f.y,x=p.y,S=v.y,F=M.y,U=(b-D)*(C-S)-(F-S)*(_-D),k=(w-_)*(C-S)-(x-C)*(_-D),G=(F-S)*(w-_)-(b-D)*(x-C),z=U/G,Y=k/G;if(G===0&&U!==0||z<=0||z>=1||Y<0||Y>1)return null;if(U===0&&G===0){for(let X=0;X<2;X++)if(o(X===0?v:M,f,p),i.loc==n.ORIGIN){const J=X===0?v:M;return{x:J.x,y:J.y,t:i.t}}else if(i.loc==n.BETWEEN){const J=+(_+i.t*(w-_)).toPrecision(10),I=+(C+i.t*(x-C)).toPrecision(10);return{x:J,y:I,t:i.t}}return null}else{for(let I=0;I<2;I++)if(o(I===0?v:M,f,p),i.loc==n.ORIGIN){const rt=I===0?v:M;return{x:rt.x,y:rt.y,t:i.t}}const X=+(_+z*(w-_)).toPrecision(10),J=+(C+z*(x-C)).toPrecision(10);return{x:X,y:J,t:z}}}function o(f,p,v){const M=v.x-p.x,_=v.y-p.y,w=f.x-p.x,D=f.y-p.y,b=M*D-w*_;if(f.x===p.x&&f.y===p.y){i.loc=n.ORIGIN,i.t=0;return}if(f.x===v.x&&f.y===v.y){i.loc=n.DESTINATION,i.t=1;return}if(b<-Number.EPSILON){i.loc=n.LEFT;return}if(b>Number.EPSILON){i.loc=n.RIGHT;return}if(M*w<0||_*D<0){i.loc=n.BEHIND;return}if(Math.sqrt(M*M+_*_)<Math.sqrt(w*w+D*D)){i.loc=n.BEYOND;return}let C;M!==0?C=w/M:C=D/_,i.loc=n.BETWEEN,i.t=C}function a(f,p){const v=[],M=[];for(let _=1;_<f.length;_++){const w=f[_-1],D=f[_];for(let b=1;b<p.length;b++){const C=p[b-1],x=p[b],S=s(w,D,C,x);S!==null&&v.find(F=>F.t<=S.t+Number.EPSILON&&F.t>=S.t-Number.EPSILON)===void 0&&(v.push(S),M.push(new Dt(S.x,S.y)))}}return M}function l(f,p,v){const M=new Dt;p.getCenter(M);const _=[];return v.forEach(w=>{w.boundingBox.containsPoint(M)&&a(f,w.points).forEach(b=>{_.push({identifier:w.identifier,isCW:w.isCW,point:b})})}),_.sort((w,D)=>w.point.x-D.point.x),_}function d(f,p,v,M,_){(_==null||_==="")&&(_="nonzero");const w=new Dt;f.boundingBox.getCenter(w);const D=[new Dt(v,w.y),new Dt(M,w.y)],b=l(D,f.boundingBox,p);b.sort((k,G)=>k.point.x-G.point.x);const C=[],x=[];b.forEach(k=>{k.identifier===f.identifier?C.push(k):x.push(k)});const S=C[0].point.x,F=[];let U=0;for(;U<x.length&&x[U].point.x<S;)F.length>0&&F[F.length-1]===x[U].identifier?F.pop():F.push(x[U].identifier),U++;if(F.push(f.identifier),_==="evenodd"){const k=F.length%2===0,G=F[F.length-2];return{identifier:f.identifier,isHole:k,for:G}}else if(_==="nonzero"){let k=!0,G=null,z=null;for(let Y=0;Y<F.length;Y++){const X=F[Y];k?(z=p[X].isCW,k=!1,G=X):z!==p[X].isCW&&(z=p[X].isCW,k=!0)}return{identifier:f.identifier,isHole:k,for:G}}else console.warn('fill-rule: "'+_+'" is currently not implemented.')}let c=999999999,u=-999999999,h=t.subPaths.map(f=>{const p=f.getPoints();let v=-999999999,M=999999999,_=-999999999,w=999999999;for(let D=0;D<p.length;D++){const b=p[D];b.y>v&&(v=b.y),b.y<M&&(M=b.y),b.x>_&&(_=b.x),b.x<w&&(w=b.x)}return u<=_&&(u=_+1),c>=w&&(c=w-1),{curves:f.curves,points:p,isCW:pi.isClockWise(p),identifier:-1,boundingBox:new Tg(new Dt(w,M),new Dt(_,v))}});h=h.filter(f=>f.points.length>1);for(let f=0;f<h.length;f++)h[f].identifier=f;const m=h.map(f=>d(f,h,c,u,t.userData?.style.fillRule)),g=[];return h.forEach(f=>{if(!m[f.identifier].isHole){const v=new br;v.curves=f.curves,m.filter(_=>_.isHole&&_.for===f.identifier).forEach(_=>{const w=h[_.identifier],D=new ji;D.curves=w.curves,v.holes.push(D)}),g.push(v)}}),g}static getStrokeStyle(t,e,n,i,s){return t=t!==void 0?t:1,e=e!==void 0?e:"#000",n=n!==void 0?n:"miter",i=i!==void 0?i:"butt",s=s!==void 0?s:4,{strokeColor:e,strokeWidth:t,strokeLineJoin:n,strokeLineCap:i,strokeMiterLimit:s}}static pointsToStroke(t,e,n,i){const s=[],o=[],a=[];if(Fs.pointsToStrokeWithBuffers(t,e,n,i,s,o,a)===0)return null;const l=new me;return l.setAttribute("position",new Qt(s,3)),l.setAttribute("normal",new Qt(o,3)),l.setAttribute("uv",new Qt(a,2)),l}static pointsToStrokeWithBuffers(t,e,n,i,s,o,a,l){const d=new Dt,c=new Dt,u=new Dt,h=new Dt,m=new Dt,g=new Dt,f=new Dt,p=new Dt,v=new Dt,M=new Dt,_=new Dt,w=new Dt,D=new Dt,b=new Dt,C=new Dt,x=new Dt,S=new Dt;n=n!==void 0?n:12,i=i!==void 0?i:.001,l=l!==void 0?l:0,t=ht(t);const F=t.length;if(F<2)return 0;const U=t[0].equals(t[F-1]);let k,G=t[0],z;const Y=e.strokeWidth/2,X=1/(F-1);let J=0,I,rt,tt,it,et=!1,vt=0,B=l*3,L=l*2;A(t[0],t[1],d).multiplyScalar(Y),p.copy(t[0]).sub(d),v.copy(t[0]).add(d),M.copy(p),_.copy(v);for(let ct=1;ct<F;ct++){k=t[ct],ct===F-1?U?z=t[1]:z=void 0:z=t[ct+1];const _t=d;if(A(G,k,_t),u.copy(_t).multiplyScalar(Y),w.copy(k).sub(u),D.copy(k).add(u),I=J+X,rt=!1,z!==void 0){A(k,z,c),u.copy(c).multiplyScalar(Y),b.copy(k).sub(u),C.copy(k).add(u),tt=!0,u.subVectors(z,G),_t.dot(u)<0&&(tt=!1),ct===1&&(et=tt),u.subVectors(z,k),u.normalize();const bt=Math.abs(_t.dot(u));if(bt>Number.EPSILON){const Et=Y/bt;u.multiplyScalar(-Et),h.subVectors(k,G),m.copy(h).setLength(Et).add(u),x.copy(m).negate();const $=m.length(),N=h.length();h.divideScalar(N),g.subVectors(z,k);const Tt=g.length();switch(g.divideScalar(Tt),h.dot(x)<N&&g.dot(x)<Tt&&(rt=!0),S.copy(m).add(k),x.add(k),it=!1,rt?tt?(C.copy(x),D.copy(x)):(b.copy(x),w.copy(x)):K(),e.strokeLineJoin){case"bevel":V(tt,rt,I);break;case"round":mt(tt,rt),tt?H(k,w,b,I,0):H(k,C,D,I,1);break;case"miter":case"miter-clip":default:const zt=Y*e.strokeMiterLimit/$;if(zt<1)if(e.strokeLineJoin!=="miter-clip"){V(tt,rt,I);break}else mt(tt,rt),tt?(g.subVectors(S,w).multiplyScalar(zt).add(w),f.subVectors(S,b).multiplyScalar(zt).add(b),E(w,I,0),E(g,I,0),E(k,I,.5),E(k,I,.5),E(g,I,0),E(f,I,0),E(k,I,.5),E(f,I,0),E(b,I,0)):(g.subVectors(S,D).multiplyScalar(zt).add(D),f.subVectors(S,C).multiplyScalar(zt).add(C),E(D,I,1),E(g,I,1),E(k,I,.5),E(k,I,.5),E(g,I,1),E(f,I,1),E(k,I,.5),E(f,I,1),E(C,I,1));else rt?(tt?(E(v,J,1),E(p,J,0),E(S,I,0),E(v,J,1),E(S,I,0),E(x,I,1)):(E(v,J,1),E(p,J,0),E(S,I,1),E(p,J,0),E(x,I,0),E(S,I,1)),tt?b.copy(S):C.copy(S)):tt?(E(w,I,0),E(S,I,0),E(k,I,.5),E(k,I,.5),E(S,I,0),E(b,I,0)):(E(D,I,1),E(S,I,1),E(k,I,.5),E(k,I,.5),E(S,I,1),E(C,I,1)),it=!0;break}}else K()}else K();!U&&ct===F-1&&ft(t[0],M,_,tt,!0,J),J=I,G=k,p.copy(b),v.copy(C)}if(!U)ft(k,w,D,tt,!1,I);else if(rt&&s){let ct=S,_t=x;et!==tt&&(ct=x,_t=S),tt?(it||et)&&(_t.toArray(s,0*3),_t.toArray(s,3*3),it&&ct.toArray(s,1*3)):(it||!et)&&(_t.toArray(s,1*3),_t.toArray(s,3*3),it&&ct.toArray(s,0*3))}return vt;function A(ct,_t,bt){return bt.subVectors(_t,ct),bt.set(-bt.y,bt.x).normalize()}function E(ct,_t,bt){s&&(s[B]=ct.x,s[B+1]=ct.y,s[B+2]=0,o&&(o[B]=0,o[B+1]=0,o[B+2]=1),B+=3,a&&(a[L]=_t,a[L+1]=bt,L+=2)),vt+=3}function H(ct,_t,bt,Et,$){d.copy(_t).sub(ct).normalize(),c.copy(bt).sub(ct).normalize();let N=Math.PI;const Tt=d.dot(c);Math.abs(Tt)<1&&(N=Math.abs(Math.acos(Tt))),N/=n,u.copy(_t);for(let zt=0,R=n-1;zt<R;zt++)h.copy(u).rotateAround(ct,N),E(u,Et,$),E(h,Et,$),E(ct,Et,.5),u.copy(h);E(h,Et,$),E(bt,Et,$),E(ct,Et,.5)}function K(){E(v,J,1),E(p,J,0),E(w,I,0),E(v,J,1),E(w,I,1),E(D,I,0)}function V(ct,_t,bt){_t?ct?(E(v,J,1),E(p,J,0),E(w,I,0),E(v,J,1),E(w,I,0),E(x,I,1),E(w,bt,0),E(b,bt,0),E(x,bt,.5)):(E(v,J,1),E(p,J,0),E(D,I,1),E(p,J,0),E(x,I,0),E(D,I,1),E(D,bt,1),E(C,bt,0),E(x,bt,.5)):ct?(E(w,bt,0),E(b,bt,0),E(k,bt,.5)):(E(D,bt,1),E(C,bt,0),E(k,bt,.5))}function mt(ct,_t){_t&&(ct?(E(v,J,1),E(p,J,0),E(w,I,0),E(v,J,1),E(w,I,0),E(x,I,1),E(w,J,0),E(k,I,.5),E(x,I,1),E(k,I,.5),E(b,J,0),E(x,I,1)):(E(v,J,1),E(p,J,0),E(D,I,1),E(p,J,0),E(x,I,0),E(D,I,1),E(D,J,1),E(x,I,0),E(k,I,.5),E(k,I,.5),E(x,I,0),E(C,J,1)))}function ft(ct,_t,bt,Et,$,N){switch(e.strokeLineCap){case"round":$?H(ct,bt,_t,N,.5):H(ct,_t,bt,N,.5);break;case"square":if($)d.subVectors(_t,ct),c.set(d.y,-d.x),u.addVectors(d,c).add(ct),h.subVectors(c,d).add(ct),Et?(u.toArray(s,1*3),h.toArray(s,0*3),h.toArray(s,3*3)):(u.toArray(s,1*3),u.toArray(s,3*3),h.toArray(s,0*3));else{d.subVectors(bt,ct),c.set(d.y,-d.x),u.addVectors(d,c).add(ct),h.subVectors(c,d).add(ct);const Tt=s.length;Et?(u.toArray(s,Tt-1*3),h.toArray(s,Tt-2*3),h.toArray(s,Tt-4*3)):(u.toArray(s,Tt-2*3),h.toArray(s,Tt-1*3),h.toArray(s,Tt-4*3))}break}}function ht(ct){let _t=!1;for(let Et=1,$=ct.length-1;Et<$;Et++)if(ct[Et].distanceTo(ct[Et+1])<i){_t=!0;break}if(!_t)return ct;const bt=[];bt.push(ct[0]);for(let Et=1,$=ct.length-1;Et<$;Et++)ct[Et].distanceTo(ct[Et+1])>=i&&bt.push(ct[Et]);return bt.push(ct[ct.length-1]),bt}}}const zg=new Fs,Bg=new Qi({color:new Xt("#ffffff"),side:Rr}),[qu,Xu,So,Eo,Zu,Ao]=(await Promise.all(["./textures/horizontal.svg","./textures/vertical.svg","./textures/diagonal.svg","./textures/antidiagonal.svg","./textures/left.svg","./textures/right.svg"].map(r=>zg.loadAsync(r)))).map(({paths:r})=>{const t=new ci;for(const n of r)for(const i of Fs.createShapes(n)){const s=new da(i),o=new Ve(s,Bg);t.add(o)}const e=new Di().expandByObject(t).getSize(new q).divideScalar(-2);for(const n of t.children)n.position.set(e.x,0,e.z);return t.scale.set(3e-4,-3e-4,3e-4),t}),ju=new Yc,Yu=new Kn;class Og{renderer;camera;cameraControls;sphere;arrowDirection=new q(0,1,0);get domElement(){return this.renderer.domElement}constructor(t,e){const n=new Uc;this.camera=new Je(70,t/e,.01,10),this.camera.position.set(0,0,3),this.camera.lookAt(new q),this.renderer=new aa({antialias:!0}),this.renderer.setSize(t,e);const i=new ci;this.sphere=new Ve(new pa(1),new Qi({transparent:!0,opacity:.7,color:new Xt("#111111")})),i.add(this.sphere);const s=new Pg(this.arrowDirection,new q,1,new Xt("red"),.2,.1);i.add(s);const o=new fa(1.01,1.01,30),a=new Qi({wireframe:!0}),l=[new Ve(o,a),new Ve(o,a),new Ve(o,a)];l[1].rotateX(Math.PI/2),l[2].rotateY(Math.PI/2),l.forEach(u=>i.add(u)),qu.position.set(0,1.1,0),Xu.position.set(0,-1.3,0),Zu.position.set(1.2,-.05,0),Ao.rotateY(Math.PI),Ao.position.set(-1.2,-.05,0),So.rotateY(-Math.PI/2),So.position.set(0,-.05,1.2),Eo.rotateY(Math.PI/2),Eo.position.set(0,-.05,-1.2),i.add(qu),i.add(Xu),i.add(So),i.add(Eo),i.add(Ao),i.add(Zu),i.rotateX(Math.PI/10),i.rotateY(-Math.PI/6),n.add(i);const d=()=>{this.cameraControls?.update(),s.setDirection(this.arrowDirection),this.renderer.render(n,this.camera)};let c=!1;this.domElement.addEventListener("mousedown",u=>{u.button===_r.RIGHT&&(c=!0)}),this.domElement.addEventListener("mouseup",u=>{u.button===_r.RIGHT&&(c=!1)}),this.domElement.addEventListener("mousemove",u=>{if(!c)return;ju.setFromCamera({x:(u.clientX-10)/this.domElement.clientWidth*2-1,y:-((u.clientY-10)/this.domElement.clientHeight)*2+1},this.camera);const[h]=ju.intersectObject(this.sphere,!0);h&&(Yu.setFromEuler(i.rotation).invert(),this.arrowDirection.copy(h.point).applyQuaternion(Yu).normalize())}),this.renderer.setAnimationLoop(d),this.domElement.id="sphere"}initControls(){this.cameraControls=new Ig(this.camera,this.domElement),this.cameraControls.noZoom=!0,this.cameraControls.noPan=!0}}function Ho(){return Ho=Object.assign?Object.assign.bind():function(r){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(r[n]=e[n])}return r},Ho.apply(this,arguments)}var $c={epsilon:1e-12,matrix:"Matrix",number:"number",precision:64,predictable:!1,randomSeed:null};function de(r){return typeof r=="number"}function gn(r){return!r||typeof r!="object"||typeof r.constructor!="function"?!1:r.isBigNumber===!0&&typeof r.constructor.prototype=="object"&&r.constructor.prototype.isBigNumber===!0||typeof r.constructor.isDecimal=="function"&&r.constructor.isDecimal(r)===!0}function Jc(r){return r&&typeof r=="object"&&Object.getPrototypeOf(r).isComplex===!0||!1}function Kc(r){return r&&typeof r=="object"&&Object.getPrototypeOf(r).isFraction===!0||!1}function Qc(r){return r&&r.constructor.prototype.isUnit===!0||!1}function Mn(r){return typeof r=="string"}var oe=Array.isArray;function Xe(r){return r&&r.constructor.prototype.isMatrix===!0||!1}function vs(r){return Array.isArray(r)||Xe(r)}function Ug(r){return r&&r.isDenseMatrix&&r.constructor.prototype.isMatrix===!0||!1}function kg(r){return r&&r.isSparseMatrix&&r.constructor.prototype.isMatrix===!0||!1}function Gg(r){return r&&r.constructor.prototype.isRange===!0||!1}function ma(r){return r&&r.constructor.prototype.isIndex===!0||!1}function Vg(r){return typeof r=="boolean"}function Hg(r){return r&&r.constructor.prototype.isResultSet===!0||!1}function Wg(r){return r&&r.constructor.prototype.isHelp===!0||!1}function qg(r){return typeof r=="function"}function Xg(r){return r instanceof Date}function Zg(r){return r instanceof RegExp}function jg(r){return!!(r&&typeof r=="object"&&r.constructor===Object&&!Jc(r)&&!Kc(r))}function Yg(r){return r===null}function $g(r){return r===void 0}function Jg(r){return r&&r.isAccessorNode===!0&&r.constructor.prototype.isNode===!0||!1}function Kg(r){return r&&r.isArrayNode===!0&&r.constructor.prototype.isNode===!0||!1}function Qg(r){return r&&r.isAssignmentNode===!0&&r.constructor.prototype.isNode===!0||!1}function tv(r){return r&&r.isBlockNode===!0&&r.constructor.prototype.isNode===!0||!1}function ev(r){return r&&r.isConditionalNode===!0&&r.constructor.prototype.isNode===!0||!1}function nv(r){return r&&r.isConstantNode===!0&&r.constructor.prototype.isNode===!0||!1}function iv(r){return r&&r.isFunctionAssignmentNode===!0&&r.constructor.prototype.isNode===!0||!1}function rv(r){return r&&r.isFunctionNode===!0&&r.constructor.prototype.isNode===!0||!1}function sv(r){return r&&r.isIndexNode===!0&&r.constructor.prototype.isNode===!0||!1}function ov(r){return r&&r.isNode===!0&&r.constructor.prototype.isNode===!0||!1}function av(r){return r&&r.isObjectNode===!0&&r.constructor.prototype.isNode===!0||!1}function uv(r){return r&&r.isOperatorNode===!0&&r.constructor.prototype.isNode===!0||!1}function cv(r){return r&&r.isParenthesisNode===!0&&r.constructor.prototype.isNode===!0||!1}function lv(r){return r&&r.isRangeNode===!0&&r.constructor.prototype.isNode===!0||!1}function hv(r){return r&&r.isRelationalNode===!0&&r.constructor.prototype.isNode===!0||!1}function fv(r){return r&&r.isSymbolNode===!0&&r.constructor.prototype.isNode===!0||!1}function dv(r){return r&&r.constructor.prototype.isChain===!0||!1}function Sr(r){var t=typeof r;return t==="object"?r===null?"null":gn(r)?"BigNumber":r.constructor&&r.constructor.name?r.constructor.name:"Object":t}function Pe(r){var t=typeof r;if(t==="number"||t==="string"||t==="boolean"||r===null||r===void 0)return r;if(typeof r.clone=="function")return r.clone();if(Array.isArray(r))return r.map(function(e){return Pe(e)});if(r instanceof Date)return new Date(r.valueOf());if(gn(r))return r;if(r instanceof RegExp)throw new TypeError("Cannot clone "+r);return pv(r,Pe)}function pv(r,t){var e={};for(var n in r)xs(r,n)&&(e[n]=t(r[n]));return e}function _s(r,t){var e,n,i;if(Array.isArray(r)){if(!Array.isArray(t)||r.length!==t.length)return!1;for(n=0,i=r.length;n<i;n++)if(!_s(r[n],t[n]))return!1;return!0}else{if(typeof r=="function")return r===t;if(r instanceof Object){if(Array.isArray(t)||!(t instanceof Object))return!1;for(e in r)if(!(e in t)||!_s(r[e],t[e]))return!1;for(e in t)if(!(e in r))return!1;return!0}else return r===t}}function xs(r,t){return r&&Object.hasOwnProperty.call(r,t)}function mv(r,t){for(var e={},n=0;n<t.length;n++){var i=t[n],s=r[i];s!==void 0&&(e[i]=s)}return e}var gv=["Matrix","Array"],vv=["number","BigNumber","Fraction"],Ps=function(t){if(t)throw new Error(`The global config is readonly. 
Please create a mathjs instance if you want to change the default configuration. 
Example:

  import { create, all } from 'mathjs';
  const mathjs = create(all);
  mathjs.config({ number: 'BigNumber' });
`);return Object.freeze($c)};Ho(Ps,$c,{MATRIX_OPTIONS:gv,NUMBER_OPTIONS:vv});function dn(r,t){var e=typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(!e){if(Array.isArray(r)||(e=_v(r))||t&&r&&typeof r.length=="number"){e&&(r=e);var n=0,i=function(){};return{s:i,n:function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}},e:function(d){throw d},f:i}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var s=!0,o=!1,a;return{s:function(){e=e.call(r)},n:function(){var d=e.next();return s=d.done,d},e:function(d){o=!0,a=d},f:function(){try{!s&&e.return!=null&&e.return()}finally{if(o)throw a}}}}function _v(r,t){if(r){if(typeof r=="string")return $u(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);if(e==="Object"&&r.constructor&&(e=r.constructor.name),e==="Map"||e==="Set")return Array.from(r);if(e==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return $u(r,t)}}function $u(r,t){(t==null||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function Wi(r){return Wi=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(t){return typeof t}:function(t){return t&&typeof Symbol=="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Wi(r)}function Ju(){return!0}function nn(){return!1}function Ui(){}var Ku="Argument is not a typed-function.";function tl(){function r(y){return Wi(y)==="object"&&y!==null&&y.constructor===Object}var t=[{name:"number",test:function(T){return typeof T=="number"}},{name:"string",test:function(T){return typeof T=="string"}},{name:"boolean",test:function(T){return typeof T=="boolean"}},{name:"Function",test:function(T){return typeof T=="function"}},{name:"Array",test:Array.isArray},{name:"Date",test:function(T){return T instanceof Date}},{name:"RegExp",test:function(T){return T instanceof RegExp}},{name:"Object",test:r},{name:"null",test:function(T){return T===null}},{name:"undefined",test:function(T){return T===void 0}}],e={name:"any",test:Ju,isAny:!0},n,i,s=0,o={createCount:0};function a(y){var T=n.get(y);if(T)return T;var O='Unknown type "'+y+'"',Z=y.toLowerCase(),nt,lt=dn(i),st;try{for(lt.s();!(st=lt.n()).done;)if(nt=st.value,nt.toLowerCase()===Z){O+='. Did you mean "'+nt+'" ?';break}}catch(W){lt.e(W)}finally{lt.f()}throw new TypeError(O)}function l(y){for(var T=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"any",O=T?a(T).index:i.length,Z=[],nt=0;nt<y.length;++nt){if(!y[nt]||typeof y[nt].name!="string"||typeof y[nt].test!="function")throw new TypeError("Object with properties {name: string, test: function} expected");var lt=y[nt].name;if(n.has(lt))throw new TypeError('Duplicate type name "'+lt+'"');Z.push(lt),n.set(lt,{name:lt,test:y[nt].test,isAny:y[nt].isAny,index:O+nt,conversionsTo:[]})}var st=i.slice(O);i=i.slice(0,O).concat(Z).concat(st);for(var W=O+Z.length;W<i.length;++W)n.get(i[W]).index=W}function d(){n=new Map,i=[],s=0,l([e],!1)}d(),l(t);function c(){var y,T=dn(i),O;try{for(T.s();!(O=T.n()).done;)y=O.value,n.get(y).conversionsTo=[]}catch(Z){T.e(Z)}finally{T.f()}s=0}function u(y){var T=i.filter(function(O){var Z=n.get(O);return!Z.isAny&&Z.test(y)});return T.length?T:["any"]}function h(y){return y&&typeof y=="function"&&"_typedFunctionData"in y}function m(y,T,O){if(!h(y))throw new TypeError(Ku);var Z=O&&O.exact,nt=Array.isArray(T)?T.join(","):T,lt=w(nt),st=p(lt);if(!Z||st in y.signatures){var W=y._typedFunctionData.signatureMap.get(st);if(W)return W}var at=lt.length,yt;if(Z){yt=[];var Mt;for(Mt in y.signatures)yt.push(y._typedFunctionData.signatureMap.get(Mt))}else yt=y._typedFunctionData.signatures;for(var dt=0;dt<at;++dt){var Ft=lt[dt],It=[],kt=void 0,Wt=dn(yt),j;try{for(Wt.s();!(j=Wt.n()).done;){kt=j.value;var ut=x(kt.params,dt);if(!(!ut||Ft.restParam&&!ut.restParam)){if(!ut.hasAny){var wt=function(){var Kt=_(ut);if(Ft.types.some(function(se){return!Kt.has(se.name)}))return"continue"}();if(wt==="continue")continue}It.push(kt)}}}catch(Kt){Wt.e(Kt)}finally{Wt.f()}if(yt=It,yt.length===0)break}var St,Ct=dn(yt),qt;try{for(Ct.s();!(qt=Ct.n()).done;)if(St=qt.value,St.params.length<=at)return St}catch(Kt){Ct.e(Kt)}finally{Ct.f()}throw new TypeError("Signature not found (signature: "+(y.name||"unnamed")+"("+p(lt,", ")+"))")}function g(y,T,O){return m(y,T,O).implementation}function f(y,T){var O=a(T);if(O.test(y))return y;var Z=O.conversionsTo;if(Z.length===0)throw new Error("There are no conversions to "+T+" defined.");for(var nt=0;nt<Z.length;nt++){var lt=a(Z[nt].from);if(lt.test(y))return Z[nt].convert(y)}throw new Error("Cannot convert "+y+" to "+T)}function p(y){var T=arguments.length>1&&arguments[1]!==void 0?arguments[1]:",";return y.map(function(O){return O.name}).join(T)}function v(y){var T=y.indexOf("...")===0,O=T?y.length>3?y.slice(3):"any":y,Z=O.split("|").map(function(W){return a(W.trim())}),nt=!1,lt=T?"...":"",st=Z.map(function(W){return nt=W.isAny||nt,lt+=W.name+"|",{name:W.name,typeIndex:W.index,test:W.test,isAny:W.isAny,conversion:null,conversionIndex:-1}});return{types:st,name:lt.slice(0,-1),hasAny:nt,hasConversion:!1,restParam:T}}function M(y){var T=y.types.map(function(st){return st.name}),O=J(T),Z=y.hasAny,nt=y.name,lt=O.map(function(st){var W=a(st.from);return Z=W.isAny||Z,nt+="|"+st.from,{name:st.from,typeIndex:W.index,test:W.test,isAny:W.isAny,conversion:st,conversionIndex:st.index}});return{types:y.types.concat(lt),name:nt,hasAny:Z,hasConversion:lt.length>0,restParam:y.restParam}}function _(y){return y.typeSet||(y.typeSet=new Set,y.types.forEach(function(T){return y.typeSet.add(T.name)})),y.typeSet}function w(y){var T=[];if(typeof y!="string")throw new TypeError("Signatures must be strings");var O=y.trim();if(O==="")return T;for(var Z=O.split(","),nt=0;nt<Z.length;++nt){var lt=v(Z[nt].trim());if(lt.restParam&&nt!==Z.length-1)throw new SyntaxError('Unexpected rest parameter "'+Z[nt]+'": only allowed for the last parameter');if(lt.types.length===0)return null;T.push(lt)}return T}function D(y){var T=K(y);return T?T.restParam:!1}function b(y){if(!y||y.types.length===0)return Ju;if(y.types.length===1)return a(y.types[0].name).test;if(y.types.length===2){var T=a(y.types[0].name).test,O=a(y.types[1].name).test;return function(lt){return T(lt)||O(lt)}}else{var Z=y.types.map(function(nt){return a(nt.name).test});return function(lt){for(var st=0;st<Z.length;st++)if(Z[st](lt))return!0;return!1}}}function C(y){var T,O,Z;if(D(y)){T=H(y).map(b);var nt=T.length,lt=b(K(y)),st=function(at){for(var yt=nt;yt<at.length;yt++)if(!lt(at[yt]))return!1;return!0};return function(at){for(var yt=0;yt<T.length;yt++)if(!T[yt](at[yt]))return!1;return st(at)&&at.length>=nt+1}}else return y.length===0?function(at){return at.length===0}:y.length===1?(O=b(y[0]),function(at){return O(at[0])&&at.length===1}):y.length===2?(O=b(y[0]),Z=b(y[1]),function(at){return O(at[0])&&Z(at[1])&&at.length===2}):(T=y.map(b),function(at){for(var yt=0;yt<T.length;yt++)if(!T[yt](at[yt]))return!1;return at.length===T.length})}function x(y,T){return T<y.length?y[T]:D(y)?K(y):null}function S(y,T){var O=x(y,T);return O?_(O):new Set}function F(y){return y.conversion===null||y.conversion===void 0}function U(y,T){var O=new Set;return y.forEach(function(Z){var nt=S(Z.params,T),lt,st=dn(nt),W;try{for(st.s();!(W=st.n()).done;)lt=W.value,O.add(lt)}catch(at){st.e(at)}finally{st.f()}}),O.has("any")?["any"]:Array.from(O)}function k(y,T,O){var Z,nt,lt=y||"unnamed",st=O,W,at=function(){var Wt=[];if(st.forEach(function(ut){var wt=x(ut.params,W),St=b(wt);(W<ut.params.length||D(ut.params))&&St(T[W])&&Wt.push(ut)}),Wt.length===0){if(nt=U(st,W),nt.length>0){var j=u(T[W]);return Z=new TypeError("Unexpected type of argument in function "+lt+" (expected: "+nt.join(" or ")+", actual: "+j.join(" | ")+", index: "+W+")"),Z.data={category:"wrongType",fn:lt,index:W,actual:j,expected:nt},{v:Z}}}else st=Wt};for(W=0;W<T.length;W++){var yt=at();if(Wi(yt)==="object")return yt.v}var Mt=st.map(function(kt){return D(kt.params)?1/0:kt.params.length});if(T.length<Math.min.apply(null,Mt))return nt=U(st,W),Z=new TypeError("Too few arguments in function "+lt+" (expected: "+nt.join(" or ")+", index: "+T.length+")"),Z.data={category:"tooFewArgs",fn:lt,index:T.length,expected:nt},Z;var dt=Math.max.apply(null,Mt);if(T.length>dt)return Z=new TypeError("Too many arguments in function "+lt+" (expected: "+dt+", actual: "+T.length+")"),Z.data={category:"tooManyArgs",fn:lt,index:T.length,expectedLength:dt},Z;for(var Ft=[],It=0;It<T.length;++It)Ft.push(u(T[It]).join("|"));return Z=new TypeError('Arguments of type "'+Ft.join(", ")+'" do not match any of the defined signatures of function '+lt+"."),Z.data={category:"mismatch",actual:Ft},Z}function G(y){for(var T=i.length+1,O=0;O<y.types.length;O++)F(y.types[O])&&(T=Math.min(T,y.types[O].typeIndex));return T}function z(y){for(var T=s+1,O=0;O<y.types.length;O++)F(y.types[O])||(T=Math.min(T,y.types[O].conversionIndex));return T}function Y(y,T){if(y.hasAny){if(!T.hasAny)return 1}else if(T.hasAny)return-1;if(y.restParam){if(!T.restParam)return 1}else if(T.restParam)return-1;if(y.hasConversion){if(!T.hasConversion)return 1}else if(T.hasConversion)return-1;var O=G(y)-G(T);if(O<0)return-1;if(O>0)return 1;var Z=z(y)-z(T);return Z<0?-1:Z>0?1:0}function X(y,T){var O=y.params,Z=T.params,nt=K(O),lt=K(Z),st=D(O),W=D(Z);if(st&&nt.hasAny){if(!W||!lt.hasAny)return 1}else if(W&&lt.hasAny)return-1;var at=0,yt=0,Mt,dt=dn(O),Ft;try{for(dt.s();!(Ft=dt.n()).done;)Mt=Ft.value,Mt.hasAny&&++at,Mt.hasConversion&&++yt}catch(te){dt.e(te)}finally{dt.f()}var It=0,kt=0,Wt=dn(Z),j;try{for(Wt.s();!(j=Wt.n()).done;)Mt=j.value,Mt.hasAny&&++It,Mt.hasConversion&&++kt}catch(te){Wt.e(te)}finally{Wt.f()}if(at!==It)return at-It;if(st&&nt.hasConversion){if(!W||!lt.hasConversion)return 1}else if(W&&lt.hasConversion)return-1;if(yt!==kt)return yt-kt;if(st){if(!W)return 1}else if(W)return-1;var ut=(O.length-Z.length)*(st?-1:1);if(ut!==0)return ut;for(var wt=[],St=0,Ct=0;Ct<O.length;++Ct){var qt=Y(O[Ct],Z[Ct]);wt.push(qt),St+=qt}if(St!==0)return St;for(var Kt,se=0,Qe=wt;se<Qe.length;se++)if(Kt=Qe[se],Kt!==0)return Kt;return 0}function J(y){if(y.length===0)return[];var T=y.map(a);y.length>1&&T.sort(function(at,yt){return at.index-yt.index});var O=T[0].conversionsTo;if(y.length===1)return O;O=O.concat([]);for(var Z=new Set(y),nt=1;nt<T.length;++nt){var lt=void 0,st=dn(T[nt].conversionsTo),W;try{for(st.s();!(W=st.n()).done;)lt=W.value,Z.has(lt.from)||(O.push(lt),Z.add(lt.from))}catch(at){st.e(at)}finally{st.f()}}return O}function I(y,T){var O=T;if(y.some(function(W){return W.hasConversion})){var Z=D(y),nt=y.map(rt);O=function(){for(var at=[],yt=Z?arguments.length-1:arguments.length,Mt=0;Mt<yt;Mt++)at[Mt]=nt[Mt](arguments[Mt]);return Z&&(at[yt]=arguments[yt].map(nt[yt])),T.apply(this,at)}}var lt=O;if(D(y)){var st=y.length-1;lt=function(){return O.apply(this,V(arguments,0,st).concat([V(arguments,st)]))}}return lt}function rt(y){var T,O,Z,nt,lt=[],st=[];switch(y.types.forEach(function(W){W.conversion&&(lt.push(a(W.conversion.from).test),st.push(W.conversion.convert))}),st.length){case 0:return function(at){return at};case 1:return T=lt[0],Z=st[0],function(at){return T(at)?Z(at):at};case 2:return T=lt[0],O=lt[1],Z=st[0],nt=st[1],function(at){return T(at)?Z(at):O(at)?nt(at):at};default:return function(at){for(var yt=0;yt<st.length;yt++)if(lt[yt](at))return st[yt](at);return at}}}function tt(y){function T(O,Z,nt){if(Z<O.length){var lt=O[Z],st=[];if(lt.restParam){var W=lt.types.filter(F);W.length<lt.types.length&&st.push({types:W,name:"..."+W.map(function(at){return at.name}).join("|"),hasAny:W.some(function(at){return at.isAny}),hasConversion:!1,restParam:!0}),st.push(lt)}else st=lt.types.map(function(at){return{types:[at],name:at.name,hasAny:at.isAny,hasConversion:at.conversion,restParam:!1}});return ft(st,function(at){return T(O,Z+1,nt.concat([at]))})}else return[nt]}return T(y,0,[])}function it(y,T){for(var O=Math.max(y.length,T.length),Z=0;Z<O;Z++){var nt=S(y,Z),lt=S(T,Z),st=!1,W=void 0,at=dn(lt),yt;try{for(at.s();!(yt=at.n()).done;)if(W=yt.value,nt.has(W)){st=!0;break}}catch(kt){at.e(kt)}finally{at.f()}if(!st)return!1}var Mt=y.length,dt=T.length,Ft=D(y),It=D(T);return Ft?It?Mt===dt:dt>=Mt:It?Mt>=dt:Mt===dt}function et(y){return y.map(function(T){return Et(T)?_t(T.referToSelf.callback):bt(T)?ct(T.referTo.references,T.referTo.callback):T})}function vt(y,T,O){var Z=[],nt,lt=dn(y),st;try{for(lt.s();!(st=lt.n()).done;){nt=st.value;var W=O[nt];if(typeof W!="number")throw new TypeError('No definition for referenced signature "'+nt+'"');if(W=T[W],typeof W!="function")return!1;Z.push(W)}}catch(at){lt.e(at)}finally{lt.f()}return Z}function B(y,T,O){for(var Z=et(y),nt=new Array(Z.length).fill(!1),lt=!0;lt;){lt=!1;for(var st=!0,W=0;W<Z.length;++W)if(!nt[W]){var at=Z[W];if(Et(at))Z[W]=at.referToSelf.callback(O),Z[W].referToSelf=at.referToSelf,nt[W]=!0,st=!1;else if(bt(at)){var yt=vt(at.referTo.references,Z,T);yt?(Z[W]=at.referTo.callback.apply(this,yt),Z[W].referTo=at.referTo,nt[W]=!0,st=!1):lt=!0}}if(st&&lt)throw new SyntaxError("Circular reference detected in resolving typed.referTo")}return Z}function L(y){var T=/\bthis(\(|\.signatures\b)/;Object.keys(y).forEach(function(O){var Z=y[O];if(T.test(Z.toString()))throw new SyntaxError("Using `this` to self-reference a function is deprecated since typed-function@3. Use typed.referTo and typed.referToSelf instead.")})}function A(y,T){if(o.createCount++,Object.keys(T).length===0)throw new SyntaxError("No signatures provided");o.warnAgainstDeprecatedThis&&L(T);var O=[],Z=[],nt={},lt=[],st,W=function(){if(!Object.prototype.hasOwnProperty.call(T,st))return"continue";var pe=w(st);if(!pe)return"continue";O.forEach(function(Tn){if(it(Tn,pe))throw new TypeError('Conflicting signatures "'+p(Tn)+'" and "'+p(pe)+'".')}),O.push(pe);var Ee=Z.length;Z.push(T[st]);var Cn=pe.map(M),Gn=void 0,Ae=dn(tt(Cn)),bi;try{for(Ae.s();!(bi=Ae.n()).done;){Gn=bi.value;var Or=p(Gn);lt.push({params:Gn,name:Or,fn:Ee}),Gn.every(function(Tn){return!Tn.hasConversion})&&(nt[Or]=Ee)}}catch(Tn){Ae.e(Tn)}finally{Ae.f()}};for(st in T)var at=W();lt.sort(X);var yt=B(Z,nt,kn),Mt;for(Mt in nt)Object.prototype.hasOwnProperty.call(nt,Mt)&&(nt[Mt]=yt[nt[Mt]]);for(var dt=[],Ft=new Map,It=0,kt=lt;It<kt.length;It++)Mt=kt[It],Ft.has(Mt.name)||(Mt.fn=yt[Mt.fn],dt.push(Mt),Ft.set(Mt.name,Mt));for(var Wt=dt[0]&&dt[0].params.length<=2&&!D(dt[0].params),j=dt[1]&&dt[1].params.length<=2&&!D(dt[1].params),ut=dt[2]&&dt[2].params.length<=2&&!D(dt[2].params),wt=dt[3]&&dt[3].params.length<=2&&!D(dt[3].params),St=dt[4]&&dt[4].params.length<=2&&!D(dt[4].params),Ct=dt[5]&&dt[5].params.length<=2&&!D(dt[5].params),qt=Wt&&j&&ut&&wt&&St&&Ct,Kt=0;Kt<dt.length;++Kt)dt[Kt].test=C(dt[Kt].params);for(var se=Wt?b(dt[0].params[0]):nn,Qe=j?b(dt[1].params[0]):nn,te=ut?b(dt[2].params[0]):nn,on=wt?b(dt[3].params[0]):nn,He=St?b(dt[4].params[0]):nn,Br=Ct?b(dt[5].params[0]):nn,Bs=Wt?b(dt[0].params[1]):nn,Os=j?b(dt[1].params[1]):nn,Us=ut?b(dt[2].params[1]):nn,P=wt?b(dt[3].params[1]):nn,ot=St?b(dt[4].params[1]):nn,pt=Ct?b(dt[5].params[1]):nn,Q=0;Q<dt.length;++Q)dt[Q].implementation=I(dt[Q].params,dt[Q].fn);var gt=Wt?dt[0].implementation:Ui,Rt=j?dt[1].implementation:Ui,Ot=ut?dt[2].implementation:Ui,Gt=wt?dt[3].implementation:Ui,Vt=St?dt[4].implementation:Ui,$t=Ct?dt[5].implementation:Ui,Zt=Wt?dt[0].params.length:-1,jt=j?dt[1].params.length:-1,le=ut?dt[2].params.length:-1,Oe=wt?dt[3].params.length:-1,an=St?dt[4].params.length:-1,En=Ct?dt[5].params.length:-1,he=qt?6:0,Yt=dt.length,or=dt.map(function(ye){return ye.test}),ve=dt.map(function(ye){return ye.implementation}),An=function(){for(var pe=he;pe<Yt;pe++)if(or[pe](arguments))return ve[pe].apply(this,arguments);return o.onMismatch(y,arguments,dt)};function kn(ye,pe){return arguments.length===Zt&&se(ye)&&Bs(pe)?gt.apply(this,arguments):arguments.length===jt&&Qe(ye)&&Os(pe)?Rt.apply(this,arguments):arguments.length===le&&te(ye)&&Us(pe)?Ot.apply(this,arguments):arguments.length===Oe&&on(ye)&&P(pe)?Gt.apply(this,arguments):arguments.length===an&&He(ye)&&ot(pe)?Vt.apply(this,arguments):arguments.length===En&&Br(ye)&&pt(pe)?$t.apply(this,arguments):An.apply(this,arguments)}try{Object.defineProperty(kn,"name",{value:y})}catch{}return kn.signatures=nt,kn._typedFunctionData={signatures:dt,signatureMap:Ft},kn}function E(y,T,O){throw k(y,T,O)}function H(y){return V(y,0,y.length-1)}function K(y){return y[y.length-1]}function V(y,T,O){return Array.prototype.slice.call(y,T,O)}function mt(y,T){for(var O=0;O<y.length;O++)if(T(y[O]))return y[O]}function ft(y,T){return Array.prototype.concat.apply([],y.map(T))}function ht(){var y=H(arguments).map(function(O){return p(w(O))}),T=K(arguments);if(typeof T!="function")throw new TypeError("Callback function expected as last argument");return ct(y,T)}function ct(y,T){return{referTo:{references:y,callback:T}}}function _t(y){if(typeof y!="function")throw new TypeError("Callback function expected as first argument");return{referToSelf:{callback:y}}}function bt(y){return y&&Wi(y.referTo)==="object"&&Array.isArray(y.referTo.references)&&typeof y.referTo.callback=="function"}function Et(y){return y&&Wi(y.referToSelf)==="object"&&typeof y.referToSelf.callback=="function"}function $(y,T){if(!y)return T;if(T&&T!==y){var O=new Error("Function names do not match (expected: "+y+", actual: "+T+")");throw O.data={actual:T,expected:y},O}return y}function N(y){var T;for(var O in y)Object.prototype.hasOwnProperty.call(y,O)&&(h(y[O])||typeof y[O].signature=="string")&&(T=$(T,y[O].name));return T}function Tt(y,T){var O;for(O in T)if(Object.prototype.hasOwnProperty.call(T,O)){if(O in y&&T[O]!==y[O]){var Z=new Error('Signature "'+O+'" is defined twice');throw Z.data={signature:O,sourceFunction:T[O],destFunction:y[O]},Z}y[O]=T[O]}}var zt=o;o=function(T){for(var O=typeof T=="string",Z=O?1:0,nt=O?T:"",lt={},st=Z;st<arguments.length;++st){var W=arguments[st],at={},yt=void 0;if(typeof W=="function"?(yt=W.name,typeof W.signature=="string"?at[W.signature]=W:h(W)&&(at=W.signatures)):r(W)&&(at=W,O||(yt=N(W))),Object.keys(at).length===0){var Mt=new TypeError("Argument to 'typed' at index "+st+" is not a (typed) function, nor an object with signatures as keys and functions as values.");throw Mt.data={index:st,argument:W},Mt}O||(nt=$(nt,yt)),Tt(lt,at)}return A(nt||"",lt)},o.create=tl,o.createCount=zt.createCount,o.onMismatch=E,o.throwMismatchError=E,o.createError=k,o.clear=d,o.clearConversions=c,o.addTypes=l,o._findType=a,o.referTo=ht,o.referToSelf=_t,o.convert=f,o.findSignature=m,o.find=g,o.isTypedFunction=h,o.warnAgainstDeprecatedThis=!0,o.addType=function(y,T){var O="any";T!==!1&&n.has("Object")&&(O="Object"),o.addTypes([y],O)};function R(y){if(!y||typeof y.from!="string"||typeof y.to!="string"||typeof y.convert!="function")throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");if(y.to===y.from)throw new SyntaxError('Illegal to define conversion from "'+y.from+'" to itself.')}return o.addConversion=function(y){R(y);var T=a(y.to);if(T.conversionsTo.every(function(O){return O.from!==y.from}))T.conversionsTo.push({from:y.from,convert:y.convert,index:s++});else throw new Error('There is already a conversion from "'+y.from+'" to "'+T.name+'"')},o.addConversions=function(y){y.forEach(o.addConversion)},o.removeConversion=function(y){R(y);var T=a(y.to),O=mt(T.conversionsTo,function(nt){return nt.from===y.from});if(!O)throw new Error("Attempt to remove nonexistent conversion from "+y.from+" to "+y.to);if(O.convert!==y.convert)throw new Error("Conversion to remove does not match existing conversion");var Z=T.conversionsTo.indexOf(O);T.conversionsTo.splice(Z,1)},o.resolve=function(y,T){if(!h(y))throw new TypeError(Ku);for(var O=y._typedFunctionData.signatures,Z=0;Z<O.length;++Z)if(O[Z].test(T))return O[Z];return null},o}const Qu=tl();function Le(r){return typeof r=="boolean"?!0:isFinite(r)?r===Math.round(r):!1}function Co(r,t,e){var n={2:"0b",8:"0o",16:"0x"},i=n[t],s="";if(e){if(e<1)throw new Error("size must be in greater than 0");if(!Le(e))throw new Error("size must be an integer");if(r>2**(e-1)-1||r<-(2**(e-1)))throw new Error("Value must be in range [-2^".concat(e-1,", 2^").concat(e-1,"-1]"));if(!Le(r))throw new Error("Value must be an integer");r<0&&(r=r+2**e),s="i".concat(e)}var o="";return r<0&&(r=-r,o="-"),"".concat(o).concat(i).concat(r.toString(t)).concat(s)}function Wo(r,t){if(typeof t=="function")return t(r);if(r===1/0)return"Infinity";if(r===-1/0)return"-Infinity";if(isNaN(r))return"NaN";var e="auto",n,i;if(t&&(t.notation&&(e=t.notation),de(t)?n=t:de(t.precision)&&(n=t.precision),t.wordSize&&(i=t.wordSize,typeof i!="number")))throw new Error('Option "wordSize" must be a number');switch(e){case"fixed":return yv(r,n);case"exponential":return el(r,n);case"engineering":return xv(r,n);case"bin":return Co(r,2,i);case"oct":return Co(r,8,i);case"hex":return Co(r,16,i);case"auto":return wv(r,n,t&&t).replace(/((\.\d*?)(0+))($|e)/,function(){var s=arguments[2],o=arguments[4];return s!=="."?s+o:o});default:throw new Error('Unknown notation "'+e+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}function Ls(r){var t=String(r).toLowerCase().match(/^(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);if(!t)throw new SyntaxError("Invalid number "+r);var e=t[1],n=t[2],i=parseFloat(t[4]||"0"),s=n.indexOf(".");i+=s!==-1?s-1:n.length-1;var o=n.replace(".","").replace(/^0*/,function(a){return i-=a.length,""}).replace(/0*$/,"").split("").map(function(a){return parseInt(a)});return o.length===0&&(o.push(0),i++),{sign:e,coefficients:o,exponent:i}}function xv(r,t){if(isNaN(r)||!isFinite(r))return String(r);var e=Ls(r),n=Rs(e,t),i=n.exponent,s=n.coefficients,o=i%3===0?i:i<0?i-3-i%3:i-i%3;if(de(t))for(;t>s.length||i-o+1>s.length;)s.push(0);else for(var a=Math.abs(i-o)-(s.length-1),l=0;l<a;l++)s.push(0);for(var d=Math.abs(i-o),c=1;d>0;)c++,d--;var u=s.slice(c).join(""),h=de(t)&&u.length||u.match(/[1-9]/)?"."+u:"",m=s.slice(0,c).join("")+h+"e"+(i>=0?"+":"")+o.toString();return n.sign+m}function yv(r,t){if(isNaN(r)||!isFinite(r))return String(r);var e=Ls(r),n=typeof t=="number"?Rs(e,e.exponent+1+t):e,i=n.coefficients,s=n.exponent+1,o=s+(t||0);return i.length<o&&(i=i.concat(Yi(o-i.length))),s<0&&(i=Yi(-s+1).concat(i),s=1),s<i.length&&i.splice(s,0,s===0?"0.":"."),n.sign+i.join("")}function el(r,t){if(isNaN(r)||!isFinite(r))return String(r);var e=Ls(r),n=t?Rs(e,t):e,i=n.coefficients,s=n.exponent;i.length<t&&(i=i.concat(Yi(t-i.length)));var o=i.shift();return n.sign+o+(i.length>0?"."+i.join(""):"")+"e"+(s>=0?"+":"")+s}function wv(r,t,e){if(isNaN(r)||!isFinite(r))return String(r);var n=e&&e.lowerExp!==void 0?e.lowerExp:-3,i=e&&e.upperExp!==void 0?e.upperExp:5,s=Ls(r),o=t?Rs(s,t):s;if(o.exponent<n||o.exponent>=i)return el(r,t);var a=o.coefficients,l=o.exponent;a.length<t&&(a=a.concat(Yi(t-a.length))),a=a.concat(Yi(l-a.length+1+(a.length<t?t-a.length:0))),a=Yi(-l).concat(a);var d=l>0?l:0;return d<a.length-1&&a.splice(d+1,0,"."),o.sign+a.join("")}function Rs(r,t){for(var e={sign:r.sign,coefficients:r.coefficients,exponent:r.exponent},n=e.coefficients;t<=0;)n.unshift(0),e.exponent++,t++;if(n.length>t){var i=n.splice(t,n.length-t);if(i[0]>=5){var s=t-1;for(n[s]++;n[s]===10;)n.pop(),s===0&&(n.unshift(0),e.exponent++,s++),s--,n[s]++}}return e}function Yi(r){for(var t=[],e=0;e<r;e++)t.push(0);return t}function Mv(r){return r.toExponential().replace(/e.*$/,"").replace(/^0\.?0*|\./,"").length}var Dv=Number.EPSILON||2220446049250313e-31;function ys(r,t,e){if(e==null)return r===t;if(r===t)return!0;if(isNaN(r)||isNaN(t))return!1;if(isFinite(r)&&isFinite(t)){var n=Math.abs(r-t);return n<Dv?!0:n<=Math.max(Math.abs(r),Math.abs(t))*e}return!1}function To(r,t,e){var n=r.constructor,i=new n(2),s="";if(e){if(e<1)throw new Error("size must be in greater than 0");if(!Le(e))throw new Error("size must be an integer");if(r.greaterThan(i.pow(e-1).sub(1))||r.lessThan(i.pow(e-1).mul(-1)))throw new Error("Value must be in range [-2^".concat(e-1,", 2^").concat(e-1,"-1]"));if(!r.isInteger())throw new Error("Value must be an integer");r.lessThan(0)&&(r=r.add(i.pow(e))),s="i".concat(e)}switch(t){case 2:return"".concat(r.toBinary()).concat(s);case 8:return"".concat(r.toOctal()).concat(s);case 16:return"".concat(r.toHexadecimal()).concat(s);default:throw new Error("Base ".concat(t," not supported "))}}function bv(r,t){if(typeof t=="function")return t(r);if(!r.isFinite())return r.isNaN()?"NaN":r.gt(0)?"Infinity":"-Infinity";var e="auto",n,i;if(t!==void 0&&(t.notation&&(e=t.notation),typeof t=="number"?n=t:t.precision&&(n=t.precision),t.wordSize&&(i=t.wordSize,typeof i!="number")))throw new Error('Option "wordSize" must be a number');switch(e){case"fixed":return Ev(r,n);case"exponential":return tc(r,n);case"engineering":return Sv(r,n);case"bin":return To(r,2,i);case"oct":return To(r,8,i);case"hex":return To(r,16,i);case"auto":{var s=t&&t.lowerExp!==void 0?t.lowerExp:-3,o=t&&t.upperExp!==void 0?t.upperExp:5;if(r.isZero())return"0";var a,l=r.toSignificantDigits(n),d=l.e;return d>=s&&d<o?a=l.toFixed():a=tc(r,n),a.replace(/((\.\d*?)(0+))($|e)/,function(){var c=arguments[2],u=arguments[4];return c!=="."?c+u:u})}default:throw new Error('Unknown notation "'+e+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}function Sv(r,t){var e=r.e,n=e%3===0?e:e<0?e-3-e%3:e-e%3,i=r.mul(Math.pow(10,-n)),s=i.toPrecision(t);return s.indexOf("e")!==-1&&(s=i.toString()),s+"e"+(e>=0?"+":"")+n.toString()}function tc(r,t){return t!==void 0?r.toExponential(t-1):r.toExponential()}function Ev(r,t){return r.toFixed(t)}function qe(r,t){var e=Av(r,t);return t&&typeof t=="object"&&"truncate"in t&&e.length>t.truncate?e.substring(0,t.truncate-3)+"...":e}function Av(r,t){if(typeof r=="number")return Wo(r,t);if(gn(r))return bv(r,t);if(Cv(r))return!t||t.fraction!=="decimal"?r.s*r.n+"/"+r.d:r.toString();if(Array.isArray(r))return nl(r,t);if(Mn(r))return'"'+r+'"';if(typeof r=="function")return r.syntax?String(r.syntax):"function";if(r&&typeof r=="object"){if(typeof r.format=="function")return r.format(t);if(r&&r.toString(t)!=={}.toString())return r.toString(t);var e=Object.keys(r).map(n=>'"'+n+'": '+qe(r[n],t));return"{"+e.join(", ")+"}"}return String(r)}function nl(r,t){if(Array.isArray(r)){for(var e="[",n=r.length,i=0;i<n;i++)i!==0&&(e+=", "),e+=nl(r[i],t);return e+="]",e}else return qe(r,t)}function Cv(r){return r&&typeof r=="object"&&typeof r.s=="number"&&typeof r.n=="number"&&typeof r.d=="number"||!1}function ce(r,t,e){if(!(this instanceof ce))throw new SyntaxError("Constructor must be called with the new operator");this.actual=r,this.expected=t,this.relation=e,this.message="Dimension mismatch ("+(Array.isArray(r)?"["+r.join(", ")+"]":r)+" "+(this.relation||"!=")+" "+(Array.isArray(t)?"["+t.join(", ")+"]":t)+")",this.stack=new Error().stack}ce.prototype=new RangeError;ce.prototype.constructor=RangeError;ce.prototype.name="DimensionError";ce.prototype.isDimensionError=!0;function sr(r,t,e){if(!(this instanceof sr))throw new SyntaxError("Constructor must be called with the new operator");this.index=r,arguments.length<3?(this.min=0,this.max=t):(this.min=t,this.max=e),this.min!==void 0&&this.index<this.min?this.message="Index out of range ("+this.index+" < "+this.min+")":this.max!==void 0&&this.index>=this.max?this.message="Index out of range ("+this.index+" > "+(this.max-1)+")":this.message="Index out of range ("+this.index+")",this.stack=new Error().stack}sr.prototype=new RangeError;sr.prototype.constructor=RangeError;sr.prototype.name="IndexError";sr.prototype.isIndexError=!0;function wi(r){for(var t=[];Array.isArray(r);)t.push(r.length),r=r[0];return t}function il(r,t,e){var n,i=r.length;if(i!==t[e])throw new ce(i,t[e]);if(e<t.length-1){var s=e+1;for(n=0;n<i;n++){var o=r[n];if(!Array.isArray(o))throw new ce(t.length-1,t.length,"<");il(r[n],t,s)}}else for(n=0;n<i;n++)if(Array.isArray(r[n]))throw new ce(t.length+1,t.length,">")}function ec(r,t){var e=t.length===0;if(e){if(Array.isArray(r))throw new ce(r.length,0)}else il(r,t,0)}function ae(r,t){if(!de(r)||!Le(r))throw new TypeError("Index must be an integer (value: "+r+")");if(r<0||typeof t=="number"&&r>=t)throw new sr(r,t)}function nc(r,t,e){if(!Array.isArray(r)||!Array.isArray(t))throw new TypeError("Array expected");if(t.length===0)throw new Error("Resizing to scalar is not supported");t.forEach(function(i){if(!de(i)||!Le(i)||i<0)throw new TypeError("Invalid size, must contain positive integers (size: "+qe(t)+")")});var n=e!==void 0?e:0;return qo(r,t,0,n),r}function qo(r,t,e,n){var i,s,o=r.length,a=t[e],l=Math.min(o,a);if(r.length=a,e<t.length-1){var d=e+1;for(i=0;i<l;i++)s=r[i],Array.isArray(s)||(s=[s],r[i]=s),qo(s,t,d,n);for(i=l;i<a;i++)s=[],r[i]=s,qo(s,t,d,n)}else{for(i=0;i<l;i++)for(;Array.isArray(r[i]);)r[i]=r[i][0];for(i=l;i<a;i++)r[i]=n}}function Tv(r,t){var e=Pv(r),n=e.length;if(!Array.isArray(r)||!Array.isArray(t))throw new TypeError("Array expected");if(t.length===0)throw new ce(0,n,"!=");t=ga(t,n);var i=rl(t);if(n!==i)throw new ce(i,n,"!=");try{return Fv(e,t)}catch(s){throw s instanceof ce?new ce(i,n,"!="):s}}function ga(r,t){var e=rl(r),n=r.slice(),i=-1,s=r.indexOf(i),o=r.indexOf(i,s+1)>=0;if(o)throw new Error("More than one wildcard in sizes");var a=s>=0,l=t%e===0;if(a)if(l)n[s]=-t/e;else throw new Error("Could not replace wildcard, since "+t+" is no multiple of "+-e);return n}function rl(r){return r.reduce((t,e)=>t*e,1)}function Fv(r,t){for(var e=r,n,i=t.length-1;i>0;i--){var s=t[i];n=[];for(var o=e.length/s,a=0;a<o;a++)n.push(e.slice(a*s,(a+1)*s));e=n}return e}function sl(r,t,e,n){var i=n||wi(r);if(e)for(var s=0;s<e;s++)r=[r],i.unshift(1);for(r=ol(r,t,0);i.length<t;)i.push(1);return r}function ol(r,t,e){var n,i;if(Array.isArray(r)){var s=e+1;for(n=0,i=r.length;n<i;n++)r[n]=ol(r[n],t,s)}else for(var o=e;o<t;o++)r=[r];return r}function Pv(r){if(!Array.isArray(r))return r;var t=[];return r.forEach(function e(n){Array.isArray(n)?n.forEach(e):t.push(n)}),t}function ws(r,t){for(var e,n=0,i=0;i<r.length;i++){var s=r[i],o=Array.isArray(s);if(i===0&&o&&(n=s.length),o&&s.length!==n)return;var a=o?ws(s,t):t(s);if(e===void 0)e=a;else if(e!==a)return"mixed"}return e}function ge(r,t,e,n){function i(s){var o=mv(s,t.map(Nv));return Lv(r,t,s),e(o)}return i.isFactory=!0,i.fn=r,i.dependencies=t.slice().sort(),n&&(i.meta=n),i}function Lv(r,t,e){var n=t.filter(s=>!Rv(s)).every(s=>e[s]!==void 0);if(!n){var i=t.filter(s=>e[s]===void 0);throw new Error('Cannot create function "'.concat(r,'", ')+"some dependencies are missing: ".concat(i.map(s=>'"'.concat(s,'"')).join(", "),"."))}}function Rv(r){return r&&r[0]==="?"}function Nv(r){return r&&r[0]==="?"?r.slice(1):r}function Iv(r,t){if(ul(r)&&al(r,t))return r[t];throw typeof r[t]=="function"&&Ov(r,t)?new Error('Cannot access method "'+t+'" as a property'):new Error('No access to property "'+t+'"')}function zv(r,t,e){if(ul(r)&&al(r,t))return r[t]=e,e;throw new Error('No access to property "'+t+'"')}function Bv(r,t){return t in r}function al(r,t){return!r||typeof r!="object"?!1:xs(Uv,t)?!0:!(t in Object.prototype||t in Function.prototype)}function Ov(r,t){return r==null||typeof r[t]!="function"||xs(r,t)&&Object.getPrototypeOf&&t in Object.getPrototypeOf(r)?!1:xs(kv,t)?!0:!(t in Object.prototype||t in Function.prototype)}function ul(r){return typeof r=="object"&&r&&r.constructor===Object}var Uv={length:!0,name:!0},kv={toString:!0,valueOf:!0,toLocaleString:!0};class Gv{constructor(t){this.wrappedObject=t}keys(){return Object.keys(this.wrappedObject)}get(t){return Iv(this.wrappedObject,t)}set(t,e){return zv(this.wrappedObject,t,e),this}has(t){return Bv(this.wrappedObject,t)}}function Vv(r){return r?r instanceof Map||r instanceof Gv||typeof r.set=="function"&&typeof r.get=="function"&&typeof r.keys=="function"&&typeof r.has=="function":!1}var cl=function(){return cl=Qu.create,Qu},Hv=["?BigNumber","?Complex","?DenseMatrix","?Fraction"],Wv=ge("typed",Hv,function(t){var{BigNumber:e,Complex:n,DenseMatrix:i,Fraction:s}=t,o=cl();return o.clear(),o.addTypes([{name:"number",test:de},{name:"Complex",test:Jc},{name:"BigNumber",test:gn},{name:"Fraction",test:Kc},{name:"Unit",test:Qc},{name:"identifier",test:a=>Mn&&/^(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])(?:[0-9A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])*$/.test(a)},{name:"string",test:Mn},{name:"Chain",test:dv},{name:"Array",test:oe},{name:"Matrix",test:Xe},{name:"DenseMatrix",test:Ug},{name:"SparseMatrix",test:kg},{name:"Range",test:Gg},{name:"Index",test:ma},{name:"boolean",test:Vg},{name:"ResultSet",test:Hg},{name:"Help",test:Wg},{name:"function",test:qg},{name:"Date",test:Xg},{name:"RegExp",test:Zg},{name:"null",test:Yg},{name:"undefined",test:$g},{name:"AccessorNode",test:Jg},{name:"ArrayNode",test:Kg},{name:"AssignmentNode",test:Qg},{name:"BlockNode",test:tv},{name:"ConditionalNode",test:ev},{name:"ConstantNode",test:nv},{name:"FunctionNode",test:rv},{name:"FunctionAssignmentNode",test:iv},{name:"IndexNode",test:sv},{name:"Node",test:ov},{name:"ObjectNode",test:av},{name:"OperatorNode",test:uv},{name:"ParenthesisNode",test:cv},{name:"RangeNode",test:lv},{name:"RelationalNode",test:hv},{name:"SymbolNode",test:fv},{name:"Map",test:Vv},{name:"Object",test:jg}]),o.addConversions([{from:"number",to:"BigNumber",convert:function(l){if(e||Fo(l),Mv(l)>15)throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: "+l+"). Use function bignumber(x) to convert to BigNumber.");return new e(l)}},{from:"number",to:"Complex",convert:function(l){return n||cs(l),new n(l,0)}},{from:"BigNumber",to:"Complex",convert:function(l){return n||cs(l),new n(l.toNumber(),0)}},{from:"Fraction",to:"BigNumber",convert:function(l){throw new TypeError("Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.")}},{from:"Fraction",to:"Complex",convert:function(l){return n||cs(l),new n(l.valueOf(),0)}},{from:"number",to:"Fraction",convert:function(l){s||Po(l);var d=new s(l);if(d.valueOf()!==l)throw new TypeError("Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: "+l+"). Use function fraction(x) to convert to Fraction.");return d}},{from:"string",to:"number",convert:function(l){var d=Number(l);if(isNaN(d))throw new Error('Cannot convert "'+l+'" to a number');return d}},{from:"string",to:"BigNumber",convert:function(l){e||Fo(l);try{return new e(l)}catch{throw new Error('Cannot convert "'+l+'" to BigNumber')}}},{from:"string",to:"Fraction",convert:function(l){s||Po(l);try{return new s(l)}catch{throw new Error('Cannot convert "'+l+'" to Fraction')}}},{from:"string",to:"Complex",convert:function(l){n||cs(l);try{return new n(l)}catch{throw new Error('Cannot convert "'+l+'" to Complex')}}},{from:"boolean",to:"number",convert:function(l){return+l}},{from:"boolean",to:"BigNumber",convert:function(l){return e||Fo(l),new e(+l)}},{from:"boolean",to:"Fraction",convert:function(l){return s||Po(l),new s(+l)}},{from:"boolean",to:"string",convert:function(l){return String(l)}},{from:"Array",to:"Matrix",convert:function(l){return i||qv(),new i(l)}},{from:"Matrix",to:"Array",convert:function(l){return l.valueOf()}}]),o.onMismatch=(a,l,d)=>{var c=o.createError(a,l,d);if(["wrongType","mismatch"].includes(c.data.category)&&l.length===1&&vs(l[0])&&d.some(h=>!h.params.includes(","))){var u=new TypeError("Function '".concat(a,"' doesn't apply to matrices. To call it ")+"elementwise on a matrix 'M', try 'map(M, ".concat(a,")'."));throw u.data=c.data,u}throw c},o.onMismatch=(a,l,d)=>{var c=o.createError(a,l,d);if(["wrongType","mismatch"].includes(c.data.category)&&l.length===1&&vs(l[0])&&d.some(h=>!h.params.includes(","))){var u=new TypeError("Function '".concat(a,"' doesn't apply to matrices. To call it ")+"elementwise on a matrix 'M', try 'map(M, ".concat(a,")'."));throw u.data=c.data,u}throw c},o});function Fo(r){throw new Error("Cannot convert value ".concat(r," into a BigNumber: no class 'BigNumber' provided"))}function cs(r){throw new Error("Cannot convert value ".concat(r," into a Complex number: no class 'Complex' provided"))}function qv(){throw new Error("Cannot convert array into a Matrix: no class 'DenseMatrix' provided")}function Po(r){throw new Error("Cannot convert value ".concat(r," into a Fraction, no class 'Fraction' provided."))}/*!
 *  decimal.js v10.4.3
 *  An arbitrary-precision Decimal type for JavaScript.
 *  https://github.com/MikeMcl/decimal.js
 *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>
 *  MIT Licence
 */var qi=9e15,Qn=1e9,Xo="0123456789abcdef",Ms="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",Ds="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",Zo={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-qi,maxE:qi,crypto:!1},ll,On,Bt=!0,Ns="[DecimalError] ",$n=Ns+"Invalid argument: ",hl=Ns+"Precision limit exceeded",fl=Ns+"crypto unavailable",dl="[object Decimal]",Be=Math.floor,Me=Math.pow,Xv=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,Zv=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,jv=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,pl=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,_n=1e7,Nt=7,Yv=9007199254740991,$v=Ms.length-1,jo=Ds.length-1,xt={toStringTag:dl};xt.absoluteValue=xt.abs=function(){var r=new this.constructor(this);return r.s<0&&(r.s=1),Pt(r)};xt.ceil=function(){return Pt(new this.constructor(this),this.e+1,2)};xt.clampedTo=xt.clamp=function(r,t){var e,n=this,i=n.constructor;if(r=new i(r),t=new i(t),!r.s||!t.s)return new i(NaN);if(r.gt(t))throw Error($n+t);return e=n.cmp(r),e<0?r:n.cmp(t)>0?t:new i(n)};xt.comparedTo=xt.cmp=function(r){var t,e,n,i,s=this,o=s.d,a=(r=new s.constructor(r)).d,l=s.s,d=r.s;if(!o||!a)return!l||!d?NaN:l!==d?l:o===a?0:!o^l<0?1:-1;if(!o[0]||!a[0])return o[0]?l:a[0]?-d:0;if(l!==d)return l;if(s.e!==r.e)return s.e>r.e^l<0?1:-1;for(n=o.length,i=a.length,t=0,e=n<i?n:i;t<e;++t)if(o[t]!==a[t])return o[t]>a[t]^l<0?1:-1;return n===i?0:n>i^l<0?1:-1};xt.cosine=xt.cos=function(){var r,t,e=this,n=e.constructor;return e.d?e.d[0]?(r=n.precision,t=n.rounding,n.precision=r+Math.max(e.e,e.sd())+Nt,n.rounding=1,e=Jv(n,xl(n,e)),n.precision=r,n.rounding=t,Pt(On==2||On==3?e.neg():e,r,t,!0)):new n(1):new n(NaN)};xt.cubeRoot=xt.cbrt=function(){var r,t,e,n,i,s,o,a,l,d,c=this,u=c.constructor;if(!c.isFinite()||c.isZero())return new u(c);for(Bt=!1,s=c.s*Me(c.s*c,1/3),!s||Math.abs(s)==1/0?(e=Ne(c.d),r=c.e,(s=(r-e.length+1)%3)&&(e+=s==1||s==-2?"0":"00"),s=Me(e,1/3),r=Be((r+1)/3)-(r%3==(r<0?-1:2)),s==1/0?e="5e"+r:(e=s.toExponential(),e=e.slice(0,e.indexOf("e")+1)+r),n=new u(e),n.s=c.s):n=new u(s.toString()),o=(r=u.precision)+3;;)if(a=n,l=a.times(a).times(a),d=l.plus(c),n=ne(d.plus(c).times(a),d.plus(l),o+2,1),Ne(a.d).slice(0,o)===(e=Ne(n.d)).slice(0,o))if(e=e.slice(o-3,o+1),e=="9999"||!i&&e=="4999"){if(!i&&(Pt(a,r+1,0),a.times(a).times(a).eq(c))){n=a;break}o+=4,i=1}else{(!+e||!+e.slice(1)&&e.charAt(0)=="5")&&(Pt(n,r+1,1),t=!n.times(n).times(n).eq(c));break}return Bt=!0,Pt(n,r,u.rounding,t)};xt.decimalPlaces=xt.dp=function(){var r,t=this.d,e=NaN;if(t){if(r=t.length-1,e=(r-Be(this.e/Nt))*Nt,r=t[r],r)for(;r%10==0;r/=10)e--;e<0&&(e=0)}return e};xt.dividedBy=xt.div=function(r){return ne(this,new this.constructor(r))};xt.dividedToIntegerBy=xt.divToInt=function(r){var t=this,e=t.constructor;return Pt(ne(t,new e(r),0,1,1),e.precision,e.rounding)};xt.equals=xt.eq=function(r){return this.cmp(r)===0};xt.floor=function(){return Pt(new this.constructor(this),this.e+1,3)};xt.greaterThan=xt.gt=function(r){return this.cmp(r)>0};xt.greaterThanOrEqualTo=xt.gte=function(r){var t=this.cmp(r);return t==1||t===0};xt.hyperbolicCosine=xt.cosh=function(){var r,t,e,n,i,s=this,o=s.constructor,a=new o(1);if(!s.isFinite())return new o(s.s?1/0:NaN);if(s.isZero())return a;e=o.precision,n=o.rounding,o.precision=e+Math.max(s.e,s.sd())+4,o.rounding=1,i=s.d.length,i<32?(r=Math.ceil(i/3),t=(1/zs(4,r)).toString()):(r=16,t="2.3283064365386962890625e-10"),s=er(o,1,s.times(t),new o(1),!0);for(var l,d=r,c=new o(8);d--;)l=s.times(s),s=a.minus(l.times(c.minus(l.times(c))));return Pt(s,o.precision=e,o.rounding=n,!0)};xt.hyperbolicSine=xt.sinh=function(){var r,t,e,n,i=this,s=i.constructor;if(!i.isFinite()||i.isZero())return new s(i);if(t=s.precision,e=s.rounding,s.precision=t+Math.max(i.e,i.sd())+4,s.rounding=1,n=i.d.length,n<3)i=er(s,2,i,i,!0);else{r=1.4*Math.sqrt(n),r=r>16?16:r|0,i=i.times(1/zs(5,r)),i=er(s,2,i,i,!0);for(var o,a=new s(5),l=new s(16),d=new s(20);r--;)o=i.times(i),i=i.times(a.plus(o.times(l.times(o).plus(d))))}return s.precision=t,s.rounding=e,Pt(i,t,e,!0)};xt.hyperbolicTangent=xt.tanh=function(){var r,t,e=this,n=e.constructor;return e.isFinite()?e.isZero()?new n(e):(r=n.precision,t=n.rounding,n.precision=r+7,n.rounding=1,ne(e.sinh(),e.cosh(),n.precision=r,n.rounding=t)):new n(e.s)};xt.inverseCosine=xt.acos=function(){var r,t=this,e=t.constructor,n=t.abs().cmp(1),i=e.precision,s=e.rounding;return n!==-1?n===0?t.isNeg()?vn(e,i,s):new e(0):new e(NaN):t.isZero()?vn(e,i+4,s).times(.5):(e.precision=i+6,e.rounding=1,t=t.asin(),r=vn(e,i+4,s).times(.5),e.precision=i,e.rounding=s,r.minus(t))};xt.inverseHyperbolicCosine=xt.acosh=function(){var r,t,e=this,n=e.constructor;return e.lte(1)?new n(e.eq(1)?0:NaN):e.isFinite()?(r=n.precision,t=n.rounding,n.precision=r+Math.max(Math.abs(e.e),e.sd())+4,n.rounding=1,Bt=!1,e=e.times(e).minus(1).sqrt().plus(e),Bt=!0,n.precision=r,n.rounding=t,e.ln()):new n(e)};xt.inverseHyperbolicSine=xt.asinh=function(){var r,t,e=this,n=e.constructor;return!e.isFinite()||e.isZero()?new n(e):(r=n.precision,t=n.rounding,n.precision=r+2*Math.max(Math.abs(e.e),e.sd())+6,n.rounding=1,Bt=!1,e=e.times(e).plus(1).sqrt().plus(e),Bt=!0,n.precision=r,n.rounding=t,e.ln())};xt.inverseHyperbolicTangent=xt.atanh=function(){var r,t,e,n,i=this,s=i.constructor;return i.isFinite()?i.e>=0?new s(i.abs().eq(1)?i.s/0:i.isZero()?i:NaN):(r=s.precision,t=s.rounding,n=i.sd(),Math.max(n,r)<2*-i.e-1?Pt(new s(i),r,t,!0):(s.precision=e=n-i.e,i=ne(i.plus(1),new s(1).minus(i),e+r,1),s.precision=r+4,s.rounding=1,i=i.ln(),s.precision=r,s.rounding=t,i.times(.5))):new s(NaN)};xt.inverseSine=xt.asin=function(){var r,t,e,n,i=this,s=i.constructor;return i.isZero()?new s(i):(t=i.abs().cmp(1),e=s.precision,n=s.rounding,t!==-1?t===0?(r=vn(s,e+4,n).times(.5),r.s=i.s,r):new s(NaN):(s.precision=e+6,s.rounding=1,i=i.div(new s(1).minus(i.times(i)).sqrt().plus(1)).atan(),s.precision=e,s.rounding=n,i.times(2)))};xt.inverseTangent=xt.atan=function(){var r,t,e,n,i,s,o,a,l,d=this,c=d.constructor,u=c.precision,h=c.rounding;if(d.isFinite()){if(d.isZero())return new c(d);if(d.abs().eq(1)&&u+4<=jo)return o=vn(c,u+4,h).times(.25),o.s=d.s,o}else{if(!d.s)return new c(NaN);if(u+4<=jo)return o=vn(c,u+4,h).times(.5),o.s=d.s,o}for(c.precision=a=u+10,c.rounding=1,e=Math.min(28,a/Nt+2|0),r=e;r;--r)d=d.div(d.times(d).plus(1).sqrt().plus(1));for(Bt=!1,t=Math.ceil(a/Nt),n=1,l=d.times(d),o=new c(d),i=d;r!==-1;)if(i=i.times(l),s=o.minus(i.div(n+=2)),i=i.times(l),o=s.plus(i.div(n+=2)),o.d[t]!==void 0)for(r=t;o.d[r]===s.d[r]&&r--;);return e&&(o=o.times(2<<e-1)),Bt=!0,Pt(o,c.precision=u,c.rounding=h,!0)};xt.isFinite=function(){return!!this.d};xt.isInteger=xt.isInt=function(){return!!this.d&&Be(this.e/Nt)>this.d.length-2};xt.isNaN=function(){return!this.s};xt.isNegative=xt.isNeg=function(){return this.s<0};xt.isPositive=xt.isPos=function(){return this.s>0};xt.isZero=function(){return!!this.d&&this.d[0]===0};xt.lessThan=xt.lt=function(r){return this.cmp(r)<0};xt.lessThanOrEqualTo=xt.lte=function(r){return this.cmp(r)<1};xt.logarithm=xt.log=function(r){var t,e,n,i,s,o,a,l,d=this,c=d.constructor,u=c.precision,h=c.rounding,m=5;if(r==null)r=new c(10),t=!0;else{if(r=new c(r),e=r.d,r.s<0||!e||!e[0]||r.eq(1))return new c(NaN);t=r.eq(10)}if(e=d.d,d.s<0||!e||!e[0]||d.eq(1))return new c(e&&!e[0]?-1/0:d.s!=1?NaN:e?0:1/0);if(t)if(e.length>1)s=!0;else{for(i=e[0];i%10===0;)i/=10;s=i!==1}if(Bt=!1,a=u+m,o=Zn(d,a),n=t?bs(c,a+10):Zn(r,a),l=ne(o,n,a,1),Lr(l.d,i=u,h))do if(a+=10,o=Zn(d,a),n=t?bs(c,a+10):Zn(r,a),l=ne(o,n,a,1),!s){+Ne(l.d).slice(i+1,i+15)+1==1e14&&(l=Pt(l,u+1,0));break}while(Lr(l.d,i+=10,h));return Bt=!0,Pt(l,u,h)};xt.minus=xt.sub=function(r){var t,e,n,i,s,o,a,l,d,c,u,h,m=this,g=m.constructor;if(r=new g(r),!m.d||!r.d)return!m.s||!r.s?r=new g(NaN):m.d?r.s=-r.s:r=new g(r.d||m.s!==r.s?m:NaN),r;if(m.s!=r.s)return r.s=-r.s,m.plus(r);if(d=m.d,h=r.d,a=g.precision,l=g.rounding,!d[0]||!h[0]){if(h[0])r.s=-r.s;else if(d[0])r=new g(m);else return new g(l===3?-0:0);return Bt?Pt(r,a,l):r}if(e=Be(r.e/Nt),c=Be(m.e/Nt),d=d.slice(),s=c-e,s){for(u=s<0,u?(t=d,s=-s,o=h.length):(t=h,e=c,o=d.length),n=Math.max(Math.ceil(a/Nt),o)+2,s>n&&(s=n,t.length=1),t.reverse(),n=s;n--;)t.push(0);t.reverse()}else{for(n=d.length,o=h.length,u=n<o,u&&(o=n),n=0;n<o;n++)if(d[n]!=h[n]){u=d[n]<h[n];break}s=0}for(u&&(t=d,d=h,h=t,r.s=-r.s),o=d.length,n=h.length-o;n>0;--n)d[o++]=0;for(n=h.length;n>s;){if(d[--n]<h[n]){for(i=n;i&&d[--i]===0;)d[i]=_n-1;--d[i],d[n]+=_n}d[n]-=h[n]}for(;d[--o]===0;)d.pop();for(;d[0]===0;d.shift())--e;return d[0]?(r.d=d,r.e=Is(d,e),Bt?Pt(r,a,l):r):new g(l===3?-0:0)};xt.modulo=xt.mod=function(r){var t,e=this,n=e.constructor;return r=new n(r),!e.d||!r.s||r.d&&!r.d[0]?new n(NaN):!r.d||e.d&&!e.d[0]?Pt(new n(e),n.precision,n.rounding):(Bt=!1,n.modulo==9?(t=ne(e,r.abs(),0,3,1),t.s*=r.s):t=ne(e,r,0,n.modulo,1),t=t.times(r),Bt=!0,e.minus(t))};xt.naturalExponential=xt.exp=function(){return Yo(this)};xt.naturalLogarithm=xt.ln=function(){return Zn(this)};xt.negated=xt.neg=function(){var r=new this.constructor(this);return r.s=-r.s,Pt(r)};xt.plus=xt.add=function(r){var t,e,n,i,s,o,a,l,d,c,u=this,h=u.constructor;if(r=new h(r),!u.d||!r.d)return!u.s||!r.s?r=new h(NaN):u.d||(r=new h(r.d||u.s===r.s?u:NaN)),r;if(u.s!=r.s)return r.s=-r.s,u.minus(r);if(d=u.d,c=r.d,a=h.precision,l=h.rounding,!d[0]||!c[0])return c[0]||(r=new h(u)),Bt?Pt(r,a,l):r;if(s=Be(u.e/Nt),n=Be(r.e/Nt),d=d.slice(),i=s-n,i){for(i<0?(e=d,i=-i,o=c.length):(e=c,n=s,o=d.length),s=Math.ceil(a/Nt),o=s>o?s+1:o+1,i>o&&(i=o,e.length=1),e.reverse();i--;)e.push(0);e.reverse()}for(o=d.length,i=c.length,o-i<0&&(i=o,e=c,c=d,d=e),t=0;i;)t=(d[--i]=d[i]+c[i]+t)/_n|0,d[i]%=_n;for(t&&(d.unshift(t),++n),o=d.length;d[--o]==0;)d.pop();return r.d=d,r.e=Is(d,n),Bt?Pt(r,a,l):r};xt.precision=xt.sd=function(r){var t,e=this;if(r!==void 0&&r!==!!r&&r!==1&&r!==0)throw Error($n+r);return e.d?(t=ml(e.d),r&&e.e+1>t&&(t=e.e+1)):t=NaN,t};xt.round=function(){var r=this,t=r.constructor;return Pt(new t(r),r.e+1,t.rounding)};xt.sine=xt.sin=function(){var r,t,e=this,n=e.constructor;return e.isFinite()?e.isZero()?new n(e):(r=n.precision,t=n.rounding,n.precision=r+Math.max(e.e,e.sd())+Nt,n.rounding=1,e=Qv(n,xl(n,e)),n.precision=r,n.rounding=t,Pt(On>2?e.neg():e,r,t,!0)):new n(NaN)};xt.squareRoot=xt.sqrt=function(){var r,t,e,n,i,s,o=this,a=o.d,l=o.e,d=o.s,c=o.constructor;if(d!==1||!a||!a[0])return new c(!d||d<0&&(!a||a[0])?NaN:a?o:1/0);for(Bt=!1,d=Math.sqrt(+o),d==0||d==1/0?(t=Ne(a),(t.length+l)%2==0&&(t+="0"),d=Math.sqrt(t),l=Be((l+1)/2)-(l<0||l%2),d==1/0?t="5e"+l:(t=d.toExponential(),t=t.slice(0,t.indexOf("e")+1)+l),n=new c(t)):n=new c(d.toString()),e=(l=c.precision)+3;;)if(s=n,n=s.plus(ne(o,s,e+2,1)).times(.5),Ne(s.d).slice(0,e)===(t=Ne(n.d)).slice(0,e))if(t=t.slice(e-3,e+1),t=="9999"||!i&&t=="4999"){if(!i&&(Pt(s,l+1,0),s.times(s).eq(o))){n=s;break}e+=4,i=1}else{(!+t||!+t.slice(1)&&t.charAt(0)=="5")&&(Pt(n,l+1,1),r=!n.times(n).eq(o));break}return Bt=!0,Pt(n,l,c.rounding,r)};xt.tangent=xt.tan=function(){var r,t,e=this,n=e.constructor;return e.isFinite()?e.isZero()?new n(e):(r=n.precision,t=n.rounding,n.precision=r+10,n.rounding=1,e=e.sin(),e.s=1,e=ne(e,new n(1).minus(e.times(e)).sqrt(),r+10,0),n.precision=r,n.rounding=t,Pt(On==2||On==4?e.neg():e,r,t,!0)):new n(NaN)};xt.times=xt.mul=function(r){var t,e,n,i,s,o,a,l,d,c=this,u=c.constructor,h=c.d,m=(r=new u(r)).d;if(r.s*=c.s,!h||!h[0]||!m||!m[0])return new u(!r.s||h&&!h[0]&&!m||m&&!m[0]&&!h?NaN:!h||!m?r.s/0:r.s*0);for(e=Be(c.e/Nt)+Be(r.e/Nt),l=h.length,d=m.length,l<d&&(s=h,h=m,m=s,o=l,l=d,d=o),s=[],o=l+d,n=o;n--;)s.push(0);for(n=d;--n>=0;){for(t=0,i=l+n;i>n;)a=s[i]+m[n]*h[i-n-1]+t,s[i--]=a%_n|0,t=a/_n|0;s[i]=(s[i]+t)%_n|0}for(;!s[--o];)s.pop();return t?++e:s.shift(),r.d=s,r.e=Is(s,e),Bt?Pt(r,u.precision,u.rounding):r};xt.toBinary=function(r,t){return va(this,2,r,t)};xt.toDecimalPlaces=xt.toDP=function(r,t){var e=this,n=e.constructor;return e=new n(e),r===void 0?e:(Ze(r,0,Qn),t===void 0?t=n.rounding:Ze(t,0,8),Pt(e,r+e.e+1,t))};xt.toExponential=function(r,t){var e,n=this,i=n.constructor;return r===void 0?e=bn(n,!0):(Ze(r,0,Qn),t===void 0?t=i.rounding:Ze(t,0,8),n=Pt(new i(n),r+1,t),e=bn(n,!0,r+1)),n.isNeg()&&!n.isZero()?"-"+e:e};xt.toFixed=function(r,t){var e,n,i=this,s=i.constructor;return r===void 0?e=bn(i):(Ze(r,0,Qn),t===void 0?t=s.rounding:Ze(t,0,8),n=Pt(new s(i),r+i.e+1,t),e=bn(n,!1,r+n.e+1)),i.isNeg()&&!i.isZero()?"-"+e:e};xt.toFraction=function(r){var t,e,n,i,s,o,a,l,d,c,u,h,m=this,g=m.d,f=m.constructor;if(!g)return new f(m);if(d=e=new f(1),n=l=new f(0),t=new f(n),s=t.e=ml(g)-m.e-1,o=s%Nt,t.d[0]=Me(10,o<0?Nt+o:o),r==null)r=s>0?t:d;else{if(a=new f(r),!a.isInt()||a.lt(d))throw Error($n+a);r=a.gt(t)?s>0?t:d:a}for(Bt=!1,a=new f(Ne(g)),c=f.precision,f.precision=s=g.length*Nt*2;u=ne(a,t,0,1,1),i=e.plus(u.times(n)),i.cmp(r)!=1;)e=n,n=i,i=d,d=l.plus(u.times(i)),l=i,i=t,t=a.minus(u.times(i)),a=i;return i=ne(r.minus(e),n,0,1,1),l=l.plus(i.times(d)),e=e.plus(i.times(n)),l.s=d.s=m.s,h=ne(d,n,s,1).minus(m).abs().cmp(ne(l,e,s,1).minus(m).abs())<1?[d,n]:[l,e],f.precision=c,Bt=!0,h};xt.toHexadecimal=xt.toHex=function(r,t){return va(this,16,r,t)};xt.toNearest=function(r,t){var e=this,n=e.constructor;if(e=new n(e),r==null){if(!e.d)return e;r=new n(1),t=n.rounding}else{if(r=new n(r),t===void 0?t=n.rounding:Ze(t,0,8),!e.d)return r.s?e:r;if(!r.d)return r.s&&(r.s=e.s),r}return r.d[0]?(Bt=!1,e=ne(e,r,0,t,1).times(r),Bt=!0,Pt(e)):(r.s=e.s,e=r),e};xt.toNumber=function(){return+this};xt.toOctal=function(r,t){return va(this,8,r,t)};xt.toPower=xt.pow=function(r){var t,e,n,i,s,o,a=this,l=a.constructor,d=+(r=new l(r));if(!a.d||!r.d||!a.d[0]||!r.d[0])return new l(Me(+a,d));if(a=new l(a),a.eq(1))return a;if(n=l.precision,s=l.rounding,r.eq(1))return Pt(a,n,s);if(t=Be(r.e/Nt),t>=r.d.length-1&&(e=d<0?-d:d)<=Yv)return i=gl(l,a,e,n),r.s<0?new l(1).div(i):Pt(i,n,s);if(o=a.s,o<0){if(t<r.d.length-1)return new l(NaN);if(r.d[t]&1||(o=1),a.e==0&&a.d[0]==1&&a.d.length==1)return a.s=o,a}return e=Me(+a,d),t=e==0||!isFinite(e)?Be(d*(Math.log("0."+Ne(a.d))/Math.LN10+a.e+1)):new l(e+"").e,t>l.maxE+1||t<l.minE-1?new l(t>0?o/0:0):(Bt=!1,l.rounding=a.s=1,e=Math.min(12,(t+"").length),i=Yo(r.times(Zn(a,n+e)),n),i.d&&(i=Pt(i,n+5,1),Lr(i.d,n,s)&&(t=n+10,i=Pt(Yo(r.times(Zn(a,t+e)),t),t+5,1),+Ne(i.d).slice(n+1,n+15)+1==1e14&&(i=Pt(i,n+1,0)))),i.s=o,Bt=!0,l.rounding=s,Pt(i,n,s))};xt.toPrecision=function(r,t){var e,n=this,i=n.constructor;return r===void 0?e=bn(n,n.e<=i.toExpNeg||n.e>=i.toExpPos):(Ze(r,1,Qn),t===void 0?t=i.rounding:Ze(t,0,8),n=Pt(new i(n),r,t),e=bn(n,r<=n.e||n.e<=i.toExpNeg,r)),n.isNeg()&&!n.isZero()?"-"+e:e};xt.toSignificantDigits=xt.toSD=function(r,t){var e=this,n=e.constructor;return r===void 0?(r=n.precision,t=n.rounding):(Ze(r,1,Qn),t===void 0?t=n.rounding:Ze(t,0,8)),Pt(new n(e),r,t)};xt.toString=function(){var r=this,t=r.constructor,e=bn(r,r.e<=t.toExpNeg||r.e>=t.toExpPos);return r.isNeg()&&!r.isZero()?"-"+e:e};xt.truncated=xt.trunc=function(){return Pt(new this.constructor(this),this.e+1,1)};xt.valueOf=xt.toJSON=function(){var r=this,t=r.constructor,e=bn(r,r.e<=t.toExpNeg||r.e>=t.toExpPos);return r.isNeg()?"-"+e:e};function Ne(r){var t,e,n,i=r.length-1,s="",o=r[0];if(i>0){for(s+=o,t=1;t<i;t++)n=r[t]+"",e=Nt-n.length,e&&(s+=Xn(e)),s+=n;o=r[t],n=o+"",e=Nt-n.length,e&&(s+=Xn(e))}else if(o===0)return"0";for(;o%10===0;)o/=10;return s+o}function Ze(r,t,e){if(r!==~~r||r<t||r>e)throw Error($n+r)}function Lr(r,t,e,n){var i,s,o,a;for(s=r[0];s>=10;s/=10)--t;return--t<0?(t+=Nt,i=0):(i=Math.ceil((t+1)/Nt),t%=Nt),s=Me(10,Nt-t),a=r[i]%s|0,n==null?t<3?(t==0?a=a/100|0:t==1&&(a=a/10|0),o=e<4&&a==99999||e>3&&a==49999||a==5e4||a==0):o=(e<4&&a+1==s||e>3&&a+1==s/2)&&(r[i+1]/s/100|0)==Me(10,t-2)-1||(a==s/2||a==0)&&(r[i+1]/s/100|0)==0:t<4?(t==0?a=a/1e3|0:t==1?a=a/100|0:t==2&&(a=a/10|0),o=(n||e<4)&&a==9999||!n&&e>3&&a==4999):o=((n||e<4)&&a+1==s||!n&&e>3&&a+1==s/2)&&(r[i+1]/s/1e3|0)==Me(10,t-3)-1,o}function ds(r,t,e){for(var n,i=[0],s,o=0,a=r.length;o<a;){for(s=i.length;s--;)i[s]*=t;for(i[0]+=Xo.indexOf(r.charAt(o++)),n=0;n<i.length;n++)i[n]>e-1&&(i[n+1]===void 0&&(i[n+1]=0),i[n+1]+=i[n]/e|0,i[n]%=e)}return i.reverse()}function Jv(r,t){var e,n,i;if(t.isZero())return t;n=t.d.length,n<32?(e=Math.ceil(n/3),i=(1/zs(4,e)).toString()):(e=16,i="2.3283064365386962890625e-10"),r.precision+=e,t=er(r,1,t.times(i),new r(1));for(var s=e;s--;){var o=t.times(t);t=o.times(o).minus(o).times(8).plus(1)}return r.precision-=e,t}var ne=function(){function r(n,i,s){var o,a=0,l=n.length;for(n=n.slice();l--;)o=n[l]*i+a,n[l]=o%s|0,a=o/s|0;return a&&n.unshift(a),n}function t(n,i,s,o){var a,l;if(s!=o)l=s>o?1:-1;else for(a=l=0;a<s;a++)if(n[a]!=i[a]){l=n[a]>i[a]?1:-1;break}return l}function e(n,i,s,o){for(var a=0;s--;)n[s]-=a,a=n[s]<i[s]?1:0,n[s]=a*o+n[s]-i[s];for(;!n[0]&&n.length>1;)n.shift()}return function(n,i,s,o,a,l){var d,c,u,h,m,g,f,p,v,M,_,w,D,b,C,x,S,F,U,k,G=n.constructor,z=n.s==i.s?1:-1,Y=n.d,X=i.d;if(!Y||!Y[0]||!X||!X[0])return new G(!n.s||!i.s||(Y?X&&Y[0]==X[0]:!X)?NaN:Y&&Y[0]==0||!X?z*0:z/0);for(l?(m=1,c=n.e-i.e):(l=_n,m=Nt,c=Be(n.e/m)-Be(i.e/m)),U=X.length,S=Y.length,v=new G(z),M=v.d=[],u=0;X[u]==(Y[u]||0);u++);if(X[u]>(Y[u]||0)&&c--,s==null?(b=s=G.precision,o=G.rounding):a?b=s+(n.e-i.e)+1:b=s,b<0)M.push(1),g=!0;else{if(b=b/m+2|0,u=0,U==1){for(h=0,X=X[0],b++;(u<S||h)&&b--;u++)C=h*l+(Y[u]||0),M[u]=C/X|0,h=C%X|0;g=h||u<S}else{for(h=l/(X[0]+1)|0,h>1&&(X=r(X,h,l),Y=r(Y,h,l),U=X.length,S=Y.length),x=U,_=Y.slice(0,U),w=_.length;w<U;)_[w++]=0;k=X.slice(),k.unshift(0),F=X[0],X[1]>=l/2&&++F;do h=0,d=t(X,_,U,w),d<0?(D=_[0],U!=w&&(D=D*l+(_[1]||0)),h=D/F|0,h>1?(h>=l&&(h=l-1),f=r(X,h,l),p=f.length,w=_.length,d=t(f,_,p,w),d==1&&(h--,e(f,U<p?k:X,p,l))):(h==0&&(d=h=1),f=X.slice()),p=f.length,p<w&&f.unshift(0),e(_,f,w,l),d==-1&&(w=_.length,d=t(X,_,U,w),d<1&&(h++,e(_,U<w?k:X,w,l))),w=_.length):d===0&&(h++,_=[0]),M[u++]=h,d&&_[0]?_[w++]=Y[x]||0:(_=[Y[x]],w=1);while((x++<S||_[0]!==void 0)&&b--);g=_[0]!==void 0}M[0]||M.shift()}if(m==1)v.e=c,ll=g;else{for(u=1,h=M[0];h>=10;h/=10)u++;v.e=u+c*m-1,Pt(v,a?s+v.e+1:s,o,g)}return v}}();function Pt(r,t,e,n){var i,s,o,a,l,d,c,u,h,m=r.constructor;t:if(t!=null){if(u=r.d,!u)return r;for(i=1,a=u[0];a>=10;a/=10)i++;if(s=t-i,s<0)s+=Nt,o=t,c=u[h=0],l=c/Me(10,i-o-1)%10|0;else if(h=Math.ceil((s+1)/Nt),a=u.length,h>=a)if(n){for(;a++<=h;)u.push(0);c=l=0,i=1,s%=Nt,o=s-Nt+1}else break t;else{for(c=a=u[h],i=1;a>=10;a/=10)i++;s%=Nt,o=s-Nt+i,l=o<0?0:c/Me(10,i-o-1)%10|0}if(n=n||t<0||u[h+1]!==void 0||(o<0?c:c%Me(10,i-o-1)),d=e<4?(l||n)&&(e==0||e==(r.s<0?3:2)):l>5||l==5&&(e==4||n||e==6&&(s>0?o>0?c/Me(10,i-o):0:u[h-1])%10&1||e==(r.s<0?8:7)),t<1||!u[0])return u.length=0,d?(t-=r.e+1,u[0]=Me(10,(Nt-t%Nt)%Nt),r.e=-t||0):u[0]=r.e=0,r;if(s==0?(u.length=h,a=1,h--):(u.length=h+1,a=Me(10,Nt-s),u[h]=o>0?(c/Me(10,i-o)%Me(10,o)|0)*a:0),d)for(;;)if(h==0){for(s=1,o=u[0];o>=10;o/=10)s++;for(o=u[0]+=a,a=1;o>=10;o/=10)a++;s!=a&&(r.e++,u[0]==_n&&(u[0]=1));break}else{if(u[h]+=a,u[h]!=_n)break;u[h--]=0,a=1}for(s=u.length;u[--s]===0;)u.pop()}return Bt&&(r.e>m.maxE?(r.d=null,r.e=NaN):r.e<m.minE&&(r.e=0,r.d=[0])),r}function bn(r,t,e){if(!r.isFinite())return _l(r);var n,i=r.e,s=Ne(r.d),o=s.length;return t?(e&&(n=e-o)>0?s=s.charAt(0)+"."+s.slice(1)+Xn(n):o>1&&(s=s.charAt(0)+"."+s.slice(1)),s=s+(r.e<0?"e":"e+")+r.e):i<0?(s="0."+Xn(-i-1)+s,e&&(n=e-o)>0&&(s+=Xn(n))):i>=o?(s+=Xn(i+1-o),e&&(n=e-i-1)>0&&(s=s+"."+Xn(n))):((n=i+1)<o&&(s=s.slice(0,n)+"."+s.slice(n)),e&&(n=e-o)>0&&(i+1===o&&(s+="."),s+=Xn(n))),s}function Is(r,t){var e=r[0];for(t*=Nt;e>=10;e/=10)t++;return t}function bs(r,t,e){if(t>$v)throw Bt=!0,e&&(r.precision=e),Error(hl);return Pt(new r(Ms),t,1,!0)}function vn(r,t,e){if(t>jo)throw Error(hl);return Pt(new r(Ds),t,e,!0)}function ml(r){var t=r.length-1,e=t*Nt+1;if(t=r[t],t){for(;t%10==0;t/=10)e--;for(t=r[0];t>=10;t/=10)e++}return e}function Xn(r){for(var t="";r--;)t+="0";return t}function gl(r,t,e,n){var i,s=new r(1),o=Math.ceil(n/Nt+4);for(Bt=!1;;){if(e%2&&(s=s.times(t),rc(s.d,o)&&(i=!0)),e=Be(e/2),e===0){e=s.d.length-1,i&&s.d[e]===0&&++s.d[e];break}t=t.times(t),rc(t.d,o)}return Bt=!0,s}function ic(r){return r.d[r.d.length-1]&1}function vl(r,t,e){for(var n,i=new r(t[0]),s=0;++s<t.length;)if(n=new r(t[s]),n.s)i[e](n)&&(i=n);else{i=n;break}return i}function Yo(r,t){var e,n,i,s,o,a,l,d=0,c=0,u=0,h=r.constructor,m=h.rounding,g=h.precision;if(!r.d||!r.d[0]||r.e>17)return new h(r.d?r.d[0]?r.s<0?0:1/0:1:r.s?r.s<0?0:r:0/0);for(t==null?(Bt=!1,l=g):l=t,a=new h(.03125);r.e>-2;)r=r.times(a),u+=5;for(n=Math.log(Me(2,u))/Math.LN10*2+5|0,l+=n,e=s=o=new h(1),h.precision=l;;){if(s=Pt(s.times(r),l,1),e=e.times(++c),a=o.plus(ne(s,e,l,1)),Ne(a.d).slice(0,l)===Ne(o.d).slice(0,l)){for(i=u;i--;)o=Pt(o.times(o),l,1);if(t==null)if(d<3&&Lr(o.d,l-n,m,d))h.precision=l+=10,e=s=a=new h(1),c=0,d++;else return Pt(o,h.precision=g,m,Bt=!0);else return h.precision=g,o}o=a}}function Zn(r,t){var e,n,i,s,o,a,l,d,c,u,h,m=1,g=10,f=r,p=f.d,v=f.constructor,M=v.rounding,_=v.precision;if(f.s<0||!p||!p[0]||!f.e&&p[0]==1&&p.length==1)return new v(p&&!p[0]?-1/0:f.s!=1?NaN:p?0:f);if(t==null?(Bt=!1,c=_):c=t,v.precision=c+=g,e=Ne(p),n=e.charAt(0),Math.abs(s=f.e)<15e14){for(;n<7&&n!=1||n==1&&e.charAt(1)>3;)f=f.times(r),e=Ne(f.d),n=e.charAt(0),m++;s=f.e,n>1?(f=new v("0."+e),s++):f=new v(n+"."+e.slice(1))}else return d=bs(v,c+2,_).times(s+""),f=Zn(new v(n+"."+e.slice(1)),c-g).plus(d),v.precision=_,t==null?Pt(f,_,M,Bt=!0):f;for(u=f,l=o=f=ne(f.minus(1),f.plus(1),c,1),h=Pt(f.times(f),c,1),i=3;;){if(o=Pt(o.times(h),c,1),d=l.plus(ne(o,new v(i),c,1)),Ne(d.d).slice(0,c)===Ne(l.d).slice(0,c))if(l=l.times(2),s!==0&&(l=l.plus(bs(v,c+2,_).times(s+""))),l=ne(l,new v(m),c,1),t==null)if(Lr(l.d,c-g,M,a))v.precision=c+=g,d=o=f=ne(u.minus(1),u.plus(1),c,1),h=Pt(f.times(f),c,1),i=a=1;else return Pt(l,v.precision=_,M,Bt=!0);else return v.precision=_,l;l=d,i+=2}}function _l(r){return String(r.s*r.s/0)}function $o(r,t){var e,n,i;for((e=t.indexOf("."))>-1&&(t=t.replace(".","")),(n=t.search(/e/i))>0?(e<0&&(e=n),e+=+t.slice(n+1),t=t.substring(0,n)):e<0&&(e=t.length),n=0;t.charCodeAt(n)===48;n++);for(i=t.length;t.charCodeAt(i-1)===48;--i);if(t=t.slice(n,i),t){if(i-=n,r.e=e=e-n-1,r.d=[],n=(e+1)%Nt,e<0&&(n+=Nt),n<i){for(n&&r.d.push(+t.slice(0,n)),i-=Nt;n<i;)r.d.push(+t.slice(n,n+=Nt));t=t.slice(n),n=Nt-t.length}else n-=i;for(;n--;)t+="0";r.d.push(+t),Bt&&(r.e>r.constructor.maxE?(r.d=null,r.e=NaN):r.e<r.constructor.minE&&(r.e=0,r.d=[0]))}else r.e=0,r.d=[0];return r}function Kv(r,t){var e,n,i,s,o,a,l,d,c;if(t.indexOf("_")>-1){if(t=t.replace(/(\d)_(?=\d)/g,"$1"),pl.test(t))return $o(r,t)}else if(t==="Infinity"||t==="NaN")return+t||(r.s=NaN),r.e=NaN,r.d=null,r;if(Zv.test(t))e=16,t=t.toLowerCase();else if(Xv.test(t))e=2;else if(jv.test(t))e=8;else throw Error($n+t);for(s=t.search(/p/i),s>0?(l=+t.slice(s+1),t=t.substring(2,s)):t=t.slice(2),s=t.indexOf("."),o=s>=0,n=r.constructor,o&&(t=t.replace(".",""),a=t.length,s=a-s,i=gl(n,new n(e),s,s*2)),d=ds(t,e,_n),c=d.length-1,s=c;d[s]===0;--s)d.pop();return s<0?new n(r.s*0):(r.e=Is(d,c),r.d=d,Bt=!1,o&&(r=ne(r,i,a*4)),l&&(r=r.times(Math.abs(l)<54?Me(2,l):nr.pow(2,l))),Bt=!0,r)}function Qv(r,t){var e,n=t.d.length;if(n<3)return t.isZero()?t:er(r,2,t,t);e=1.4*Math.sqrt(n),e=e>16?16:e|0,t=t.times(1/zs(5,e)),t=er(r,2,t,t);for(var i,s=new r(5),o=new r(16),a=new r(20);e--;)i=t.times(t),t=t.times(s.plus(i.times(o.times(i).minus(a))));return t}function er(r,t,e,n,i){var s,o,a,l,d=r.precision,c=Math.ceil(d/Nt);for(Bt=!1,l=e.times(e),a=new r(n);;){if(o=ne(a.times(l),new r(t++*t++),d,1),a=i?n.plus(o):n.minus(o),n=ne(o.times(l),new r(t++*t++),d,1),o=a.plus(n),o.d[c]!==void 0){for(s=c;o.d[s]===a.d[s]&&s--;);if(s==-1)break}s=a,a=n,n=o,o=s}return Bt=!0,o.d.length=c+1,o}function zs(r,t){for(var e=r;--t;)e*=r;return e}function xl(r,t){var e,n=t.s<0,i=vn(r,r.precision,1),s=i.times(.5);if(t=t.abs(),t.lte(s))return On=n?4:1,t;if(e=t.divToInt(i),e.isZero())On=n?3:2;else{if(t=t.minus(e.times(i)),t.lte(s))return On=ic(e)?n?2:3:n?4:1,t;On=ic(e)?n?1:4:n?3:2}return t.minus(i).abs()}function va(r,t,e,n){var i,s,o,a,l,d,c,u,h,m=r.constructor,g=e!==void 0;if(g?(Ze(e,1,Qn),n===void 0?n=m.rounding:Ze(n,0,8)):(e=m.precision,n=m.rounding),!r.isFinite())c=_l(r);else{for(c=bn(r),o=c.indexOf("."),g?(i=2,t==16?e=e*4-3:t==8&&(e=e*3-2)):i=t,o>=0&&(c=c.replace(".",""),h=new m(1),h.e=c.length-o,h.d=ds(bn(h),10,i),h.e=h.d.length),u=ds(c,10,i),s=l=u.length;u[--l]==0;)u.pop();if(!u[0])c=g?"0p+0":"0";else{if(o<0?s--:(r=new m(r),r.d=u,r.e=s,r=ne(r,h,e,n,0,i),u=r.d,s=r.e,d=ll),o=u[e],a=i/2,d=d||u[e+1]!==void 0,d=n<4?(o!==void 0||d)&&(n===0||n===(r.s<0?3:2)):o>a||o===a&&(n===4||d||n===6&&u[e-1]&1||n===(r.s<0?8:7)),u.length=e,d)for(;++u[--e]>i-1;)u[e]=0,e||(++s,u.unshift(1));for(l=u.length;!u[l-1];--l);for(o=0,c="";o<l;o++)c+=Xo.charAt(u[o]);if(g){if(l>1)if(t==16||t==8){for(o=t==16?4:3,--l;l%o;l++)c+="0";for(u=ds(c,i,t),l=u.length;!u[l-1];--l);for(o=1,c="1.";o<l;o++)c+=Xo.charAt(u[o])}else c=c.charAt(0)+"."+c.slice(1);c=c+(s<0?"p":"p+")+s}else if(s<0){for(;++s;)c="0"+c;c="0."+c}else if(++s>l)for(s-=l;s--;)c+="0";else s<l&&(c=c.slice(0,s)+"."+c.slice(s))}c=(t==16?"0x":t==2?"0b":t==8?"0o":"")+c}return r.s<0?"-"+c:c}function rc(r,t){if(r.length>t)return r.length=t,!0}function t_(r){return new this(r).abs()}function e_(r){return new this(r).acos()}function n_(r){return new this(r).acosh()}function i_(r,t){return new this(r).plus(t)}function r_(r){return new this(r).asin()}function s_(r){return new this(r).asinh()}function o_(r){return new this(r).atan()}function a_(r){return new this(r).atanh()}function u_(r,t){r=new this(r),t=new this(t);var e,n=this.precision,i=this.rounding,s=n+4;return!r.s||!t.s?e=new this(NaN):!r.d&&!t.d?(e=vn(this,s,1).times(t.s>0?.25:.75),e.s=r.s):!t.d||r.isZero()?(e=t.s<0?vn(this,n,i):new this(0),e.s=r.s):!r.d||t.isZero()?(e=vn(this,s,1).times(.5),e.s=r.s):t.s<0?(this.precision=s,this.rounding=1,e=this.atan(ne(r,t,s,1)),t=vn(this,s,1),this.precision=n,this.rounding=i,e=r.s<0?e.minus(t):e.plus(t)):e=this.atan(ne(r,t,s,1)),e}function c_(r){return new this(r).cbrt()}function l_(r){return Pt(r=new this(r),r.e+1,2)}function h_(r,t,e){return new this(r).clamp(t,e)}function f_(r){if(!r||typeof r!="object")throw Error(Ns+"Object expected");var t,e,n,i=r.defaults===!0,s=["precision",1,Qn,"rounding",0,8,"toExpNeg",-qi,0,"toExpPos",0,qi,"maxE",0,qi,"minE",-qi,0,"modulo",0,9];for(t=0;t<s.length;t+=3)if(e=s[t],i&&(this[e]=Zo[e]),(n=r[e])!==void 0)if(Be(n)===n&&n>=s[t+1]&&n<=s[t+2])this[e]=n;else throw Error($n+e+": "+n);if(e="crypto",i&&(this[e]=Zo[e]),(n=r[e])!==void 0)if(n===!0||n===!1||n===0||n===1)if(n)if(typeof crypto<"u"&&crypto&&(crypto.getRandomValues||crypto.randomBytes))this[e]=!0;else throw Error(fl);else this[e]=!1;else throw Error($n+e+": "+n);return this}function d_(r){return new this(r).cos()}function p_(r){return new this(r).cosh()}function yl(r){var t,e,n;function i(s){var o,a,l,d=this;if(!(d instanceof i))return new i(s);if(d.constructor=i,sc(s)){d.s=s.s,Bt?!s.d||s.e>i.maxE?(d.e=NaN,d.d=null):s.e<i.minE?(d.e=0,d.d=[0]):(d.e=s.e,d.d=s.d.slice()):(d.e=s.e,d.d=s.d?s.d.slice():s.d);return}if(l=typeof s,l==="number"){if(s===0){d.s=1/s<0?-1:1,d.e=0,d.d=[0];return}if(s<0?(s=-s,d.s=-1):d.s=1,s===~~s&&s<1e7){for(o=0,a=s;a>=10;a/=10)o++;Bt?o>i.maxE?(d.e=NaN,d.d=null):o<i.minE?(d.e=0,d.d=[0]):(d.e=o,d.d=[s]):(d.e=o,d.d=[s]);return}else if(s*0!==0){s||(d.s=NaN),d.e=NaN,d.d=null;return}return $o(d,s.toString())}else if(l!=="string")throw Error($n+s);return(a=s.charCodeAt(0))===45?(s=s.slice(1),d.s=-1):(a===43&&(s=s.slice(1)),d.s=1),pl.test(s)?$o(d,s):Kv(d,s)}if(i.prototype=xt,i.ROUND_UP=0,i.ROUND_DOWN=1,i.ROUND_CEIL=2,i.ROUND_FLOOR=3,i.ROUND_HALF_UP=4,i.ROUND_HALF_DOWN=5,i.ROUND_HALF_EVEN=6,i.ROUND_HALF_CEIL=7,i.ROUND_HALF_FLOOR=8,i.EUCLID=9,i.config=i.set=f_,i.clone=yl,i.isDecimal=sc,i.abs=t_,i.acos=e_,i.acosh=n_,i.add=i_,i.asin=r_,i.asinh=s_,i.atan=o_,i.atanh=a_,i.atan2=u_,i.cbrt=c_,i.ceil=l_,i.clamp=h_,i.cos=d_,i.cosh=p_,i.div=m_,i.exp=g_,i.floor=v_,i.hypot=__,i.ln=x_,i.log=y_,i.log10=M_,i.log2=w_,i.max=D_,i.min=b_,i.mod=S_,i.mul=E_,i.pow=A_,i.random=C_,i.round=T_,i.sign=F_,i.sin=P_,i.sinh=L_,i.sqrt=R_,i.sub=N_,i.sum=I_,i.tan=z_,i.tanh=B_,i.trunc=O_,r===void 0&&(r={}),r&&r.defaults!==!0)for(n=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],t=0;t<n.length;)r.hasOwnProperty(e=n[t++])||(r[e]=this[e]);return i.config(r),i}function m_(r,t){return new this(r).div(t)}function g_(r){return new this(r).exp()}function v_(r){return Pt(r=new this(r),r.e+1,3)}function __(){var r,t,e=new this(0);for(Bt=!1,r=0;r<arguments.length;)if(t=new this(arguments[r++]),t.d)e.d&&(e=e.plus(t.times(t)));else{if(t.s)return Bt=!0,new this(1/0);e=t}return Bt=!0,e.sqrt()}function sc(r){return r instanceof nr||r&&r.toStringTag===dl||!1}function x_(r){return new this(r).ln()}function y_(r,t){return new this(r).log(t)}function w_(r){return new this(r).log(2)}function M_(r){return new this(r).log(10)}function D_(){return vl(this,arguments,"lt")}function b_(){return vl(this,arguments,"gt")}function S_(r,t){return new this(r).mod(t)}function E_(r,t){return new this(r).mul(t)}function A_(r,t){return new this(r).pow(t)}function C_(r){var t,e,n,i,s=0,o=new this(1),a=[];if(r===void 0?r=this.precision:Ze(r,1,Qn),n=Math.ceil(r/Nt),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(n));s<n;)i=t[s],i>=429e7?t[s]=crypto.getRandomValues(new Uint32Array(1))[0]:a[s++]=i%1e7;else if(crypto.randomBytes){for(t=crypto.randomBytes(n*=4);s<n;)i=t[s]+(t[s+1]<<8)+(t[s+2]<<16)+((t[s+3]&127)<<24),i>=214e7?crypto.randomBytes(4).copy(t,s):(a.push(i%1e7),s+=4);s=n/4}else throw Error(fl);else for(;s<n;)a[s++]=Math.random()*1e7|0;for(n=a[--s],r%=Nt,n&&r&&(i=Me(10,Nt-r),a[s]=(n/i|0)*i);a[s]===0;s--)a.pop();if(s<0)e=0,a=[0];else{for(e=-1;a[0]===0;e-=Nt)a.shift();for(n=1,i=a[0];i>=10;i/=10)n++;n<Nt&&(e-=Nt-n)}return o.e=e,o.d=a,o}function T_(r){return Pt(r=new this(r),r.e+1,this.rounding)}function F_(r){return r=new this(r),r.d?r.d[0]?r.s:0*r.s:r.s||NaN}function P_(r){return new this(r).sin()}function L_(r){return new this(r).sinh()}function R_(r){return new this(r).sqrt()}function N_(r,t){return new this(r).sub(t)}function I_(){var r=0,t=arguments,e=new this(t[r]);for(Bt=!1;e.s&&++r<t.length;)e=e.plus(t[r]);return Bt=!0,Pt(e,this.precision,this.rounding)}function z_(r){return new this(r).tan()}function B_(r){return new this(r).tanh()}function O_(r){return Pt(r=new this(r),r.e+1,1)}xt[Symbol.for("nodejs.util.inspect.custom")]=xt.toString;xt[Symbol.toStringTag]="Decimal";var nr=xt.constructor=yl(Zo);Ms=new nr(Ms);Ds=new nr(Ds);var U_="BigNumber",k_=["?on","config"],G_=ge(U_,k_,r=>{var{on:t,config:e}=r,n=nr.clone({precision:e.precision,modulo:nr.EUCLID});return n.prototype=Object.create(n.prototype),n.prototype.type="BigNumber",n.prototype.isBigNumber=!0,n.prototype.toJSON=function(){return{mathjs:"BigNumber",value:this.toString()}},n.fromJSON=function(i){return new n(i.value)},t&&t("config",function(i,s){i.precision!==s.precision&&n.config({precision:i.precision})}),n},{isClass:!0});function wl(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}var Jo={},V_={get exports(){return Jo},set exports(r){Jo=r}};/**
 * @license Complex.js v2.1.1 12/05/2020
 *
 * Copyright (c) 2020, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/(function(r,t){(function(e){var n=Math.cosh||function(u){return Math.abs(u)<1e-9?1-u:(Math.exp(u)+Math.exp(-u))*.5},i=Math.sinh||function(u){return Math.abs(u)<1e-9?u:(Math.exp(u)-Math.exp(-u))*.5},s=function(u){var h=Math.PI/4;if(-h>u||u>h)return Math.cos(u)-1;var m=u*u;return m*(m*(m*(m*(m*(m*(m*(m/20922789888e3-1/87178291200)+1/479001600)-1/3628800)+1/40320)-1/720)+1/24)-1/2)},o=function(u,h){var m=Math.abs(u),g=Math.abs(h);return m<3e3&&g<3e3?Math.sqrt(m*m+g*g):(m<g?(m=g,g=u/h):g=h/u,m*Math.sqrt(1+g*g))},a=function(){throw SyntaxError("Invalid Param")};function l(u,h){var m=Math.abs(u),g=Math.abs(h);return u===0?Math.log(g):h===0?Math.log(m):m<3e3&&g<3e3?Math.log(u*u+h*h)*.5:(u=u/2,h=h/2,.5*Math.log(u*u+h*h)+Math.LN2)}var d=function(u,h){var m={re:0,im:0};if(u==null)m.re=m.im=0;else if(h!==void 0)m.re=u,m.im=h;else switch(typeof u){case"object":if("im"in u&&"re"in u)m.re=u.re,m.im=u.im;else if("abs"in u&&"arg"in u){if(!Number.isFinite(u.abs)&&Number.isFinite(u.arg))return c.INFINITY;m.re=u.abs*Math.cos(u.arg),m.im=u.abs*Math.sin(u.arg)}else if("r"in u&&"phi"in u){if(!Number.isFinite(u.r)&&Number.isFinite(u.phi))return c.INFINITY;m.re=u.r*Math.cos(u.phi),m.im=u.r*Math.sin(u.phi)}else u.length===2?(m.re=u[0],m.im=u[1]):a();break;case"string":m.im=m.re=0;var g=u.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g),f=1,p=0;g===null&&a();for(var v=0;v<g.length;v++){var M=g[v];M===" "||M==="	"||M===`
`||(M==="+"?f++:M==="-"?p++:M==="i"||M==="I"?(f+p===0&&a(),g[v+1]!==" "&&!isNaN(g[v+1])?(m.im+=parseFloat((p%2?"-":"")+g[v+1]),v++):m.im+=parseFloat((p%2?"-":"")+"1"),f=p=0):((f+p===0||isNaN(M))&&a(),g[v+1]==="i"||g[v+1]==="I"?(m.im+=parseFloat((p%2?"-":"")+M),v++):m.re+=parseFloat((p%2?"-":"")+M),f=p=0))}f+p>0&&a();break;case"number":m.im=0,m.re=u;break;default:a()}return isNaN(m.re)||isNaN(m.im),m};function c(u,h){if(!(this instanceof c))return new c(u,h);var m=d(u,h);this.re=m.re,this.im=m.im}c.prototype={re:0,im:0,sign:function(){var u=this.abs();return new c(this.re/u,this.im/u)},add:function(u,h){var m=new c(u,h);return this.isInfinite()&&m.isInfinite()?c.NAN:this.isInfinite()||m.isInfinite()?c.INFINITY:new c(this.re+m.re,this.im+m.im)},sub:function(u,h){var m=new c(u,h);return this.isInfinite()&&m.isInfinite()?c.NAN:this.isInfinite()||m.isInfinite()?c.INFINITY:new c(this.re-m.re,this.im-m.im)},mul:function(u,h){var m=new c(u,h);return this.isInfinite()&&m.isZero()||this.isZero()&&m.isInfinite()?c.NAN:this.isInfinite()||m.isInfinite()?c.INFINITY:m.im===0&&this.im===0?new c(this.re*m.re,0):new c(this.re*m.re-this.im*m.im,this.re*m.im+this.im*m.re)},div:function(u,h){var m=new c(u,h);if(this.isZero()&&m.isZero()||this.isInfinite()&&m.isInfinite())return c.NAN;if(this.isInfinite()||m.isZero())return c.INFINITY;if(this.isZero()||m.isInfinite())return c.ZERO;u=this.re,h=this.im;var g=m.re,f=m.im,p,v;return f===0?new c(u/g,h/g):Math.abs(g)<Math.abs(f)?(v=g/f,p=g*v+f,new c((u*v+h)/p,(h*v-u)/p)):(v=f/g,p=f*v+g,new c((u+h*v)/p,(h-u*v)/p))},pow:function(u,h){var m=new c(u,h);if(u=this.re,h=this.im,m.isZero())return c.ONE;if(m.im===0){if(h===0&&u>0)return new c(Math.pow(u,m.re),0);if(u===0)switch((m.re%4+4)%4){case 0:return new c(Math.pow(h,m.re),0);case 1:return new c(0,Math.pow(h,m.re));case 2:return new c(-Math.pow(h,m.re),0);case 3:return new c(0,-Math.pow(h,m.re))}}if(u===0&&h===0&&m.re>0&&m.im>=0)return c.ZERO;var g=Math.atan2(h,u),f=l(u,h);return u=Math.exp(m.re*f-m.im*g),h=m.im*f+m.re*g,new c(u*Math.cos(h),u*Math.sin(h))},sqrt:function(){var u=this.re,h=this.im,m=this.abs(),g,f;if(u>=0){if(h===0)return new c(Math.sqrt(u),0);g=.5*Math.sqrt(2*(m+u))}else g=Math.abs(h)/Math.sqrt(2*(m-u));return u<=0?f=.5*Math.sqrt(2*(m-u)):f=Math.abs(h)/Math.sqrt(2*(m+u)),new c(g,h<0?-f:f)},exp:function(){var u=Math.exp(this.re);return this.im,new c(u*Math.cos(this.im),u*Math.sin(this.im))},expm1:function(){var u=this.re,h=this.im;return new c(Math.expm1(u)*Math.cos(h)+s(h),Math.exp(u)*Math.sin(h))},log:function(){var u=this.re,h=this.im;return new c(l(u,h),Math.atan2(h,u))},abs:function(){return o(this.re,this.im)},arg:function(){return Math.atan2(this.im,this.re)},sin:function(){var u=this.re,h=this.im;return new c(Math.sin(u)*n(h),Math.cos(u)*i(h))},cos:function(){var u=this.re,h=this.im;return new c(Math.cos(u)*n(h),-Math.sin(u)*i(h))},tan:function(){var u=2*this.re,h=2*this.im,m=Math.cos(u)+n(h);return new c(Math.sin(u)/m,i(h)/m)},cot:function(){var u=2*this.re,h=2*this.im,m=Math.cos(u)-n(h);return new c(-Math.sin(u)/m,i(h)/m)},sec:function(){var u=this.re,h=this.im,m=.5*n(2*h)+.5*Math.cos(2*u);return new c(Math.cos(u)*n(h)/m,Math.sin(u)*i(h)/m)},csc:function(){var u=this.re,h=this.im,m=.5*n(2*h)-.5*Math.cos(2*u);return new c(Math.sin(u)*n(h)/m,-Math.cos(u)*i(h)/m)},asin:function(){var u=this.re,h=this.im,m=new c(h*h-u*u+1,-2*u*h).sqrt(),g=new c(m.re-h,m.im+u).log();return new c(g.im,-g.re)},acos:function(){var u=this.re,h=this.im,m=new c(h*h-u*u+1,-2*u*h).sqrt(),g=new c(m.re-h,m.im+u).log();return new c(Math.PI/2-g.im,g.re)},atan:function(){var u=this.re,h=this.im;if(u===0){if(h===1)return new c(0,1/0);if(h===-1)return new c(0,-1/0)}var m=u*u+(1-h)*(1-h),g=new c((1-h*h-u*u)/m,-2*u/m).log();return new c(-.5*g.im,.5*g.re)},acot:function(){var u=this.re,h=this.im;if(h===0)return new c(Math.atan2(1,u),0);var m=u*u+h*h;return m!==0?new c(u/m,-h/m).atan():new c(u!==0?u/0:0,h!==0?-h/0:0).atan()},asec:function(){var u=this.re,h=this.im;if(u===0&&h===0)return new c(0,1/0);var m=u*u+h*h;return m!==0?new c(u/m,-h/m).acos():new c(u!==0?u/0:0,h!==0?-h/0:0).acos()},acsc:function(){var u=this.re,h=this.im;if(u===0&&h===0)return new c(Math.PI/2,1/0);var m=u*u+h*h;return m!==0?new c(u/m,-h/m).asin():new c(u!==0?u/0:0,h!==0?-h/0:0).asin()},sinh:function(){var u=this.re,h=this.im;return new c(i(u)*Math.cos(h),n(u)*Math.sin(h))},cosh:function(){var u=this.re,h=this.im;return new c(n(u)*Math.cos(h),i(u)*Math.sin(h))},tanh:function(){var u=2*this.re,h=2*this.im,m=n(u)+Math.cos(h);return new c(i(u)/m,Math.sin(h)/m)},coth:function(){var u=2*this.re,h=2*this.im,m=n(u)-Math.cos(h);return new c(i(u)/m,-Math.sin(h)/m)},csch:function(){var u=this.re,h=this.im,m=Math.cos(2*h)-n(2*u);return new c(-2*i(u)*Math.cos(h)/m,2*n(u)*Math.sin(h)/m)},sech:function(){var u=this.re,h=this.im,m=Math.cos(2*h)+n(2*u);return new c(2*n(u)*Math.cos(h)/m,-2*i(u)*Math.sin(h)/m)},asinh:function(){var u=this.im;this.im=-this.re,this.re=u;var h=this.asin();return this.re=-this.im,this.im=u,u=h.re,h.re=-h.im,h.im=u,h},acosh:function(){var u=this.acos();if(u.im<=0){var h=u.re;u.re=-u.im,u.im=h}else{var h=u.im;u.im=-u.re,u.re=h}return u},atanh:function(){var u=this.re,h=this.im,m=u>1&&h===0,g=1-u,f=1+u,p=g*g+h*h,v=p!==0?new c((f*g-h*h)/p,(h*g+f*h)/p):new c(u!==-1?u/0:0,h!==0?h/0:0),M=v.re;return v.re=l(v.re,v.im)/2,v.im=Math.atan2(v.im,M)/2,m&&(v.im=-v.im),v},acoth:function(){var u=this.re,h=this.im;if(u===0&&h===0)return new c(0,Math.PI/2);var m=u*u+h*h;return m!==0?new c(u/m,-h/m).atanh():new c(u!==0?u/0:0,h!==0?-h/0:0).atanh()},acsch:function(){var u=this.re,h=this.im;if(h===0)return new c(u!==0?Math.log(u+Math.sqrt(u*u+1)):1/0,0);var m=u*u+h*h;return m!==0?new c(u/m,-h/m).asinh():new c(u!==0?u/0:0,h!==0?-h/0:0).asinh()},asech:function(){var u=this.re,h=this.im;if(this.isZero())return c.INFINITY;var m=u*u+h*h;return m!==0?new c(u/m,-h/m).acosh():new c(u!==0?u/0:0,h!==0?-h/0:0).acosh()},inverse:function(){if(this.isZero())return c.INFINITY;if(this.isInfinite())return c.ZERO;var u=this.re,h=this.im,m=u*u+h*h;return new c(u/m,-h/m)},conjugate:function(){return new c(this.re,-this.im)},neg:function(){return new c(-this.re,-this.im)},ceil:function(u){return u=Math.pow(10,u||0),new c(Math.ceil(this.re*u)/u,Math.ceil(this.im*u)/u)},floor:function(u){return u=Math.pow(10,u||0),new c(Math.floor(this.re*u)/u,Math.floor(this.im*u)/u)},round:function(u){return u=Math.pow(10,u||0),new c(Math.round(this.re*u)/u,Math.round(this.im*u)/u)},equals:function(u,h){var m=new c(u,h);return Math.abs(m.re-this.re)<=c.EPSILON&&Math.abs(m.im-this.im)<=c.EPSILON},clone:function(){return new c(this.re,this.im)},toString:function(){var u=this.re,h=this.im,m="";return this.isNaN()?"NaN":this.isInfinite()?"Infinity":(Math.abs(u)<c.EPSILON&&(u=0),Math.abs(h)<c.EPSILON&&(h=0),h===0?m+u:(u!==0?(m+=u,m+=" ",h<0?(h=-h,m+="-"):m+="+",m+=" "):h<0&&(h=-h,m+="-"),h!==1&&(m+=h),m+"i"))},toVector:function(){return[this.re,this.im]},valueOf:function(){return this.im===0?this.re:null},isNaN:function(){return isNaN(this.re)||isNaN(this.im)},isZero:function(){return this.im===0&&this.re===0},isFinite:function(){return isFinite(this.re)&&isFinite(this.im)},isInfinite:function(){return!(this.isNaN()||this.isFinite())}},c.ZERO=new c(0,0),c.ONE=new c(1,0),c.I=new c(0,1),c.PI=new c(Math.PI,0),c.E=new c(Math.E,0),c.INFINITY=new c(1/0,1/0),c.NAN=new c(NaN,NaN),c.EPSILON=1e-15,Object.defineProperty(c,"__esModule",{value:!0}),c.default=c,c.Complex=c,r.exports=c})()})(V_);const Fe=wl(Jo);var H_="Complex",W_=[],q_=ge(H_,W_,()=>(Object.defineProperty(Fe,"name",{value:"Complex"}),Fe.prototype.constructor=Fe,Fe.prototype.type="Complex",Fe.prototype.isComplex=!0,Fe.prototype.toJSON=function(){return{mathjs:"Complex",re:this.re,im:this.im}},Fe.prototype.toPolar=function(){return{r:this.abs(),phi:this.arg()}},Fe.prototype.format=function(r){var t="",e=this.im,n=this.re,i=Wo(this.re,r),s=Wo(this.im,r),o=de(r)?r:r?r.precision:null;if(o!==null){var a=Math.pow(10,-o);Math.abs(n/e)<a&&(n=0),Math.abs(e/n)<a&&(e=0)}return e===0?t=i:n===0?e===1?t="i":e===-1?t="-i":t=s+"i":e<0?e===-1?t=i+" - i":t=i+" - "+s.substring(1)+"i":e===1?t=i+" + i":t=i+" + "+s+"i",t},Fe.fromPolar=function(r){switch(arguments.length){case 1:{var t=arguments[0];if(typeof t=="object")return Fe(t);throw new TypeError("Input has to be an object with r and phi keys.")}case 2:{var e=arguments[0],n=arguments[1];if(de(e)){if(Qc(n)&&n.hasBase("ANGLE")&&(n=n.toNumber("rad")),de(n))return new Fe({r:e,phi:n});throw new TypeError("Phi is not a number nor an angle unit.")}else throw new TypeError("Radius r is not a number.")}default:throw new SyntaxError("Wrong number of arguments in function fromPolar")}},Fe.prototype.valueOf=Fe.prototype.toString,Fe.fromJSON=function(r){return new Fe(r)},Fe.compare=function(r,t){return r.re>t.re?1:r.re<t.re?-1:r.im>t.im?1:r.im<t.im?-1:0},Fe),{isClass:!0}),Ko={},X_={get exports(){return Ko},set exports(r){Ko=r}};/**
 * @license Fraction.js v4.2.0 05/03/2022
 * https://www.xarg.org/2014/03/rational-numbers-in-javascript/
 *
 * Copyright (c) 2021, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/(function(r,t){(function(e){var n=2e3,i={s:1,n:0,d:1};function s(g,f){if(isNaN(g=parseInt(g,10)))throw m.InvalidParameter;return g*f}function o(g,f){if(f===0)throw m.DivisionByZero;var p=Object.create(m.prototype);p.s=g<0?-1:1,g=g<0?-g:g;var v=h(g,f);return p.n=g/v,p.d=f/v,p}function a(g){for(var f={},p=g,v=2,M=4;M<=p;){for(;p%v===0;)p/=v,f[v]=(f[v]||0)+1;M+=1+2*v++}return p!==g?p>1&&(f[p]=(f[p]||0)+1):f[g]=(f[g]||0)+1,f}var l=function(g,f){var p=0,v=1,M=1,_=0,w=0,D=0,b=1,C=1,x=0,S=1,F=1,U=1,k=1e7,G;if(g!=null)if(f!==void 0){if(p=g,v=f,M=p*v,p%1!==0||v%1!==0)throw m.NonIntegerParameter}else switch(typeof g){case"object":{if("d"in g&&"n"in g)p=g.n,v=g.d,"s"in g&&(p*=g.s);else if(0 in g)p=g[0],1 in g&&(v=g[1]);else throw m.InvalidParameter;M=p*v;break}case"number":{if(g<0&&(M=g,g=-g),g%1===0)p=g;else if(g>0){for(g>=1&&(C=Math.pow(10,Math.floor(1+Math.log(g)/Math.LN10)),g/=C);S<=k&&U<=k;)if(G=(x+F)/(S+U),g===G){S+U<=k?(p=x+F,v=S+U):U>S?(p=F,v=U):(p=x,v=S);break}else g>G?(x+=F,S+=U):(F+=x,U+=S),S>k?(p=F,v=U):(p=x,v=S);p*=C}else(isNaN(g)||isNaN(f))&&(v=p=NaN);break}case"string":{if(S=g.match(/\d+|./g),S===null)throw m.InvalidParameter;if(S[x]==="-"?(M=-1,x++):S[x]==="+"&&x++,S.length===x+1?w=s(S[x++],M):S[x+1]==="."||S[x]==="."?(S[x]!=="."&&(_=s(S[x++],M)),x++,(x+1===S.length||S[x+1]==="("&&S[x+3]===")"||S[x+1]==="'"&&S[x+3]==="'")&&(w=s(S[x],M),b=Math.pow(10,S[x].length),x++),(S[x]==="("&&S[x+2]===")"||S[x]==="'"&&S[x+2]==="'")&&(D=s(S[x+1],M),C=Math.pow(10,S[x+1].length)-1,x+=3)):S[x+1]==="/"||S[x+1]===":"?(w=s(S[x],M),b=s(S[x+2],1),x+=3):S[x+3]==="/"&&S[x+1]===" "&&(_=s(S[x],M),w=s(S[x+2],M),b=s(S[x+4],1),x+=5),S.length<=x){v=b*C,M=p=D+v*_+C*w;break}}default:throw m.InvalidParameter}if(v===0)throw m.DivisionByZero;i.s=M<0?-1:1,i.n=Math.abs(p),i.d=Math.abs(v)};function d(g,f,p){for(var v=1;f>0;g=g*g%p,f>>=1)f&1&&(v=v*g%p);return v}function c(g,f){for(;f%2===0;f/=2);for(;f%5===0;f/=5);if(f===1)return 0;for(var p=10%f,v=1;p!==1;v++)if(p=p*10%f,v>n)return 0;return v}function u(g,f,p){for(var v=1,M=d(10,p,f),_=0;_<300;_++){if(v===M)return _;v=v*10%f,M=M*10%f}return 0}function h(g,f){if(!g)return f;if(!f)return g;for(;;){if(g%=f,!g)return f;if(f%=g,!f)return g}}function m(g,f){if(l(g,f),this instanceof m)g=h(i.d,i.n),this.s=i.s,this.n=i.n/g,this.d=i.d/g;else return o(i.s*i.n,i.d)}m.DivisionByZero=new Error("Division by Zero"),m.InvalidParameter=new Error("Invalid argument"),m.NonIntegerParameter=new Error("Parameters must be integer"),m.prototype={s:1,n:0,d:1,abs:function(){return o(this.n,this.d)},neg:function(){return o(-this.s*this.n,this.d)},add:function(g,f){return l(g,f),o(this.s*this.n*i.d+i.s*this.d*i.n,this.d*i.d)},sub:function(g,f){return l(g,f),o(this.s*this.n*i.d-i.s*this.d*i.n,this.d*i.d)},mul:function(g,f){return l(g,f),o(this.s*i.s*this.n*i.n,this.d*i.d)},div:function(g,f){return l(g,f),o(this.s*i.s*this.n*i.d,this.d*i.n)},clone:function(){return o(this.s*this.n,this.d)},mod:function(g,f){if(isNaN(this.n)||isNaN(this.d))return new m(NaN);if(g===void 0)return o(this.s*this.n%this.d,1);if(l(g,f),i.n===0&&this.d===0)throw m.DivisionByZero;return o(this.s*(i.d*this.n)%(i.n*this.d),i.d*this.d)},gcd:function(g,f){return l(g,f),o(h(i.n,this.n)*h(i.d,this.d),i.d*this.d)},lcm:function(g,f){return l(g,f),i.n===0&&this.n===0?o(0,1):o(i.n*this.n,h(i.n,this.n)*h(i.d,this.d))},ceil:function(g){return g=Math.pow(10,g||0),isNaN(this.n)||isNaN(this.d)?new m(NaN):o(Math.ceil(g*this.s*this.n/this.d),g)},floor:function(g){return g=Math.pow(10,g||0),isNaN(this.n)||isNaN(this.d)?new m(NaN):o(Math.floor(g*this.s*this.n/this.d),g)},round:function(g){return g=Math.pow(10,g||0),isNaN(this.n)||isNaN(this.d)?new m(NaN):o(Math.round(g*this.s*this.n/this.d),g)},inverse:function(){return o(this.s*this.d,this.n)},pow:function(g,f){if(l(g,f),i.d===1)return i.s<0?o(Math.pow(this.s*this.d,i.n),Math.pow(this.n,i.n)):o(Math.pow(this.s*this.n,i.n),Math.pow(this.d,i.n));if(this.s<0)return null;var p=a(this.n),v=a(this.d),M=1,_=1;for(var w in p)if(w!=="1"){if(w==="0"){M=0;break}if(p[w]*=i.n,p[w]%i.d===0)p[w]/=i.d;else return null;M*=Math.pow(w,p[w])}for(var w in v)if(w!=="1"){if(v[w]*=i.n,v[w]%i.d===0)v[w]/=i.d;else return null;_*=Math.pow(w,v[w])}return i.s<0?o(_,M):o(M,_)},equals:function(g,f){return l(g,f),this.s*this.n*i.d===i.s*i.n*this.d},compare:function(g,f){l(g,f);var p=this.s*this.n*i.d-i.s*i.n*this.d;return(0<p)-(p<0)},simplify:function(g){if(isNaN(this.n)||isNaN(this.d))return this;g=g||.001;for(var f=this.abs(),p=f.toContinued(),v=1;v<p.length;v++){for(var M=o(p[v-1],1),_=v-2;_>=0;_--)M=M.inverse().add(p[_]);if(M.sub(f).abs().valueOf()<g)return M.mul(this.s)}return this},divisible:function(g,f){return l(g,f),!(!(i.n*this.d)||this.n*i.d%(i.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(g){var f,p="",v=this.n,M=this.d;return this.s<0&&(p+="-"),M===1?p+=v:(g&&(f=Math.floor(v/M))>0&&(p+=f,p+=" ",v%=M),p+=v,p+="/",p+=M),p},toLatex:function(g){var f,p="",v=this.n,M=this.d;return this.s<0&&(p+="-"),M===1?p+=v:(g&&(f=Math.floor(v/M))>0&&(p+=f,v%=M),p+="\\frac{",p+=v,p+="}{",p+=M,p+="}"),p},toContinued:function(){var g,f=this.n,p=this.d,v=[];if(isNaN(f)||isNaN(p))return v;do v.push(Math.floor(f/p)),g=f%p,f=p,p=g;while(f!==1);return v},toString:function(g){var f=this.n,p=this.d;if(isNaN(f)||isNaN(p))return"NaN";g=g||15;var v=c(f,p),M=u(f,p,v),_=this.s<0?"-":"";if(_+=f/p|0,f%=p,f*=10,f&&(_+="."),v){for(var w=M;w--;)_+=f/p|0,f%=p,f*=10;_+="(";for(var w=v;w--;)_+=f/p|0,f%=p,f*=10;_+=")"}else for(var w=g;f&&w--;)_+=f/p|0,f%=p,f*=10;return _}},Object.defineProperty(m,"__esModule",{value:!0}),m.default=m,m.Fraction=m,r.exports=m})()})(X_);const zn=wl(Ko);var Z_="Fraction",j_=[],Y_=ge(Z_,j_,()=>(Object.defineProperty(zn,"name",{value:"Fraction"}),zn.prototype.constructor=zn,zn.prototype.type="Fraction",zn.prototype.isFraction=!0,zn.prototype.toJSON=function(){return{mathjs:"Fraction",n:this.s*this.n,d:this.d}},zn.fromJSON=function(r){return new zn(r)},zn),{isClass:!0}),$_="Matrix",J_=[],K_=ge($_,J_,()=>{function r(){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator")}return r.prototype.type="Matrix",r.prototype.isMatrix=!0,r.prototype.storage=function(){throw new Error("Cannot invoke storage on a Matrix interface")},r.prototype.datatype=function(){throw new Error("Cannot invoke datatype on a Matrix interface")},r.prototype.create=function(t,e){throw new Error("Cannot invoke create on a Matrix interface")},r.prototype.subset=function(t,e,n){throw new Error("Cannot invoke subset on a Matrix interface")},r.prototype.get=function(t){throw new Error("Cannot invoke get on a Matrix interface")},r.prototype.set=function(t,e,n){throw new Error("Cannot invoke set on a Matrix interface")},r.prototype.resize=function(t,e){throw new Error("Cannot invoke resize on a Matrix interface")},r.prototype.reshape=function(t,e){throw new Error("Cannot invoke reshape on a Matrix interface")},r.prototype.clone=function(){throw new Error("Cannot invoke clone on a Matrix interface")},r.prototype.size=function(){throw new Error("Cannot invoke size on a Matrix interface")},r.prototype.map=function(t,e){throw new Error("Cannot invoke map on a Matrix interface")},r.prototype.forEach=function(t){throw new Error("Cannot invoke forEach on a Matrix interface")},r.prototype[Symbol.iterator]=function(){throw new Error("Cannot iterate a Matrix interface")},r.prototype.toArray=function(){throw new Error("Cannot invoke toArray on a Matrix interface")},r.prototype.valueOf=function(){throw new Error("Cannot invoke valueOf on a Matrix interface")},r.prototype.format=function(t){throw new Error("Cannot invoke format on a Matrix interface")},r.prototype.toString=function(){throw new Error("Cannot invoke toString on a Matrix interface")},r},{isClass:!0});function Ml(r){return Object.keys(r.signatures||{}).reduce(function(t,e){var n=(e.match(/,/g)||[]).length+1;return Math.max(t,n)},-1)}var Q_="DenseMatrix",tx=["Matrix"],ex=ge(Q_,tx,r=>{var{Matrix:t}=r;function e(c,u){if(!(this instanceof e))throw new SyntaxError("Constructor must be called with the new operator");if(u&&!Mn(u))throw new Error("Invalid datatype: "+u);if(Xe(c))c.type==="DenseMatrix"?(this._data=Pe(c._data),this._size=Pe(c._size),this._datatype=u||c._datatype):(this._data=c.toArray(),this._size=c.size(),this._datatype=u||c._datatype);else if(c&&oe(c.data)&&oe(c.size))this._data=c.data,this._size=c.size,ec(this._data,this._size),this._datatype=u||c.datatype;else if(oe(c))this._data=d(c),this._size=wi(this._data),ec(this._data,this._size),this._datatype=u;else{if(c)throw new TypeError("Unsupported type of data ("+Sr(c)+")");this._data=[],this._size=[0],this._datatype=u}}e.prototype=new t,e.prototype.createDenseMatrix=function(c,u){return new e(c,u)},Object.defineProperty(e,"name",{value:"DenseMatrix"}),e.prototype.constructor=e,e.prototype.type="DenseMatrix",e.prototype.isDenseMatrix=!0,e.prototype.getDataType=function(){return ws(this._data,Sr)},e.prototype.storage=function(){return"dense"},e.prototype.datatype=function(){return this._datatype},e.prototype.create=function(c,u){return new e(c,u)},e.prototype.subset=function(c,u,h){switch(arguments.length){case 1:return n(this,c);case 2:case 3:return s(this,c,u,h);default:throw new SyntaxError("Wrong number of arguments")}},e.prototype.get=function(c){if(!oe(c))throw new TypeError("Array expected");if(c.length!==this._size.length)throw new ce(c.length,this._size.length);for(var u=0;u<c.length;u++)ae(c[u],this._size[u]);for(var h=this._data,m=0,g=c.length;m<g;m++){var f=c[m];ae(f,h.length),h=h[f]}return h},e.prototype.set=function(c,u,h){if(!oe(c))throw new TypeError("Array expected");if(c.length<this._size.length)throw new ce(c.length,this._size.length,"<");var m,g,f,p=c.map(function(M){return M+1});l(this,p,h);var v=this._data;for(m=0,g=c.length-1;m<g;m++)f=c[m],ae(f,v.length),v=v[f];return f=c[c.length-1],ae(f,v.length),v[f]=u,this};function n(c,u){if(!ma(u))throw new TypeError("Invalid index");var h=u.isScalar();if(h)return c.get(u.min());var m=u.size();if(m.length!==c._size.length)throw new ce(m.length,c._size.length);for(var g=u.min(),f=u.max(),p=0,v=c._size.length;p<v;p++)ae(g[p],c._size[p]),ae(f[p],c._size[p]);return new e(i(c._data,u,m.length,0),c._datatype)}function i(c,u,h,m){var g=m===h-1,f=u.dimension(m);return g?f.map(function(p){return ae(p,c.length),c[p]}).valueOf():f.map(function(p){ae(p,c.length);var v=c[p];return i(v,u,h,m+1)}).valueOf()}function s(c,u,h,m){if(!u||u.isIndex!==!0)throw new TypeError("Invalid index");var g=u.size(),f=u.isScalar(),p;if(Xe(h)?(p=h.size(),h=h.valueOf()):p=wi(h),f){if(p.length!==0)throw new TypeError("Scalar expected");c.set(u.min(),h,m)}else{if(g.length<c._size.length)throw new ce(g.length,c._size.length,"<");if(p.length<g.length){for(var v=0,M=0;g[v]===1&&p[v]===1;)v++;for(;g[v]===1;)M++,v++;h=sl(h,g.length,M,p)}if(!_s(g,p))throw new ce(g,p,">");var _=u.max().map(function(b){return b+1});l(c,_,m);var w=g.length,D=0;o(c._data,u,h,w,D)}return c}function o(c,u,h,m,g){var f=g===m-1,p=u.dimension(g);f?p.forEach(function(v,M){ae(v),c[v]=h[M[0]]}):p.forEach(function(v,M){ae(v),o(c[v],u,h[M[0]],m,g+1)})}e.prototype.resize=function(c,u,h){if(!vs(c))throw new TypeError("Array or Matrix expected");var m=c.valueOf().map(f=>Array.isArray(f)&&f.length===1?f[0]:f),g=h?this.clone():this;return a(g,m,u)};function a(c,u,h){if(u.length===0){for(var m=c._data;oe(m);)m=m[0];return m}return c._size=u.slice(0),c._data=nc(c._data,c._size,h),c}e.prototype.reshape=function(c,u){var h=u?this.clone():this;h._data=Tv(h._data,c);var m=h._size.reduce((g,f)=>g*f);return h._size=ga(c,m),h};function l(c,u,h){for(var m=c._size.slice(0),g=!1;m.length<u.length;)m.push(0),g=!0;for(var f=0,p=u.length;f<p;f++)u[f]>m[f]&&(m[f]=u[f],g=!0);g&&a(c,m,h)}e.prototype.clone=function(){var c=new e({data:Pe(this._data),size:Pe(this._size),datatype:this._datatype});return c},e.prototype.size=function(){return this._size.slice(0)},e.prototype.map=function(c){var u=this,h=Ml(c),m=function p(v,M){return oe(v)?v.map(function(_,w){return p(_,M.concat(w))}):h===1?c(v):h===2?c(v,M):c(v,M,u)},g=m(this._data,[]),f=this._datatype!==void 0?ws(g,Sr):void 0;return new e(g,f)},e.prototype.forEach=function(c){var u=this,h=function m(g,f){oe(g)?g.forEach(function(p,v){m(p,f.concat(v))}):c(g,f,u)};h(this._data,[])},e.prototype[Symbol.iterator]=function*(){var c=function*u(h,m){if(oe(h))for(var g=0;g<h.length;g++)yield*u(h[g],m.concat(g));else yield{value:h,index:m}};yield*c(this._data,[])},e.prototype.rows=function(){var c=[],u=this.size();if(u.length!==2)throw new TypeError("Rows can only be returned for a 2D matrix.");var h=this._data;for(var m of h)c.push(new e([m],this._datatype));return c},e.prototype.columns=function(){var c=this,u=[],h=this.size();if(h.length!==2)throw new TypeError("Rows can only be returned for a 2D matrix.");for(var m=this._data,g=function(v){var M=m.map(_=>[_[v]]);u.push(new e(M,c._datatype))},f=0;f<h[1];f++)g(f);return u},e.prototype.toArray=function(){return Pe(this._data)},e.prototype.valueOf=function(){return this._data},e.prototype.format=function(c){return qe(this._data,c)},e.prototype.toString=function(){return qe(this._data)},e.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},e.prototype.diagonal=function(c){if(c){if(gn(c)&&(c=c.toNumber()),!de(c)||!Le(c))throw new TypeError("The parameter k must be an integer number")}else c=0;for(var u=c>0?c:0,h=c<0?-c:0,m=this._size[0],g=this._size[1],f=Math.min(m-h,g-u),p=[],v=0;v<f;v++)p[v]=this._data[v+h][v+u];return new e({data:p,size:[f],datatype:this._datatype})},e.diagonal=function(c,u,h,m){if(!oe(c))throw new TypeError("Array expected, size parameter");if(c.length!==2)throw new Error("Only two dimensions matrix are supported");if(c=c.map(function(C){if(gn(C)&&(C=C.toNumber()),!de(C)||!Le(C)||C<1)throw new Error("Size values must be positive integers");return C}),h){if(gn(h)&&(h=h.toNumber()),!de(h)||!Le(h))throw new TypeError("The parameter k must be an integer number")}else h=0;var g=h>0?h:0,f=h<0?-h:0,p=c[0],v=c[1],M=Math.min(p-f,v-g),_;if(oe(u)){if(u.length!==M)throw new Error("Invalid value array length");_=function(x){return u[x]}}else if(Xe(u)){var w=u.size();if(w.length!==1||w[0]!==M)throw new Error("Invalid matrix length");_=function(x){return u.get([x])}}else _=function(){return u};m||(m=gn(_(0))?_(0).mul(0):0);var D=[];if(c.length>0){D=nc(D,c,m);for(var b=0;b<M;b++)D[b+f][b+g]=_(b)}return new e({data:D,size:[p,v]})},e.fromJSON=function(c){return new e(c)},e.prototype.swapRows=function(c,u){if(!de(c)||!Le(c)||!de(u)||!Le(u))throw new Error("Row index must be positive integers");if(this._size.length!==2)throw new Error("Only two dimensional matrix is supported");return ae(c,this._size[0]),ae(u,this._size[0]),e._swapRows(c,u,this._data),this},e._swapRows=function(c,u,h){var m=h[c];h[c]=h[u],h[u]=m};function d(c){for(var u=0,h=c.length;u<h;u++){var m=c[u];oe(m)?c[u]=d(m):m&&m.isMatrix===!0&&(c[u]=d(m.valueOf()))}return c}return e},{isClass:!0});function _a(r,t,e){return r&&typeof r.map=="function"?r.map(function(n){return _a(n,t)}):t(r)}var nx="number",Dl="number, number";function bl(r,t){return r+t}bl.signature=Dl;function Sl(r,t){return r*t}Sl.signature=Dl;function El(r){return Math.exp(r)}El.signature=nx;function ix(r,t,e){if(e==null)return r.eq(t);if(r.eq(t))return!0;if(r.isNaN()||t.isNaN())return!1;if(r.isFinite()&&t.isFinite()){var n=r.minus(t).abs();if(n.isZero())return!0;var i=r.constructor.max(r.abs(),t.abs());return n.lte(i.times(e))}return!1}function rx(r,t,e){return ys(r.re,t.re,e)&&ys(r.im,t.im,e)}var sx=ge("compareUnits",["typed"],r=>{var{typed:t}=r;return{"Unit, Unit":t.referToSelf(e=>(n,i)=>{if(!n.equalBase(i))throw new Error("Cannot compare units with different base");return t.find(e,[n.valueType(),i.valueType()])(n.value,i.value)})}}),Ss="equalScalar",ox=["typed","config"],ax=ge(Ss,ox,r=>{var{typed:t,config:e}=r,n=sx({typed:t});return t(Ss,{"boolean, boolean":function(s,o){return s===o},"number, number":function(s,o){return ys(s,o,e.epsilon)},"BigNumber, BigNumber":function(s,o){return s.eq(o)||ix(s,o,e.epsilon)},"Fraction, Fraction":function(s,o){return s.equals(o)},"Complex, Complex":function(s,o){return rx(s,o,e.epsilon)}},n)});ge(Ss,["typed","config"],r=>{var{typed:t,config:e}=r;return t(Ss,{"number, number":function(i,s){return ys(i,s,e.epsilon)}})});var ux="SparseMatrix",cx=["typed","equalScalar","Matrix"],lx=ge(ux,cx,r=>{var{typed:t,equalScalar:e,Matrix:n}=r;function i(f,p){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");if(p&&!Mn(p))throw new Error("Invalid datatype: "+p);if(Xe(f))s(this,f,p);else if(f&&oe(f.index)&&oe(f.ptr)&&oe(f.size))this._values=f.values,this._index=f.index,this._ptr=f.ptr,this._size=f.size,this._datatype=p||f.datatype;else if(oe(f))o(this,f,p);else{if(f)throw new TypeError("Unsupported type of data ("+Sr(f)+")");this._values=[],this._index=[],this._ptr=[0],this._size=[0,0],this._datatype=p}}function s(f,p,v){p.type==="SparseMatrix"?(f._values=p._values?Pe(p._values):void 0,f._index=Pe(p._index),f._ptr=Pe(p._ptr),f._size=Pe(p._size),f._datatype=v||p._datatype):o(f,p.valueOf(),v||p._datatype)}function o(f,p,v){f._values=[],f._index=[],f._ptr=[],f._datatype=v;var M=p.length,_=0,w=e,D=0;if(Mn(v)&&(w=t.find(e,[v,v])||e,D=t.convert(0,v)),M>0){var b=0;do{f._ptr.push(f._index.length);for(var C=0;C<M;C++){var x=p[C];if(oe(x)){if(b===0&&_<x.length&&(_=x.length),b<x.length){var S=x[b];w(S,D)||(f._values.push(S),f._index.push(C))}}else b===0&&_<1&&(_=1),w(x,D)||(f._values.push(x),f._index.push(C))}b++}while(b<_)}f._ptr.push(f._index.length),f._size=[M,_]}i.prototype=new n,i.prototype.createSparseMatrix=function(f,p){return new i(f,p)},Object.defineProperty(i,"name",{value:"SparseMatrix"}),i.prototype.constructor=i,i.prototype.type="SparseMatrix",i.prototype.isSparseMatrix=!0,i.prototype.getDataType=function(){return ws(this._values,Sr)},i.prototype.storage=function(){return"sparse"},i.prototype.datatype=function(){return this._datatype},i.prototype.create=function(f,p){return new i(f,p)},i.prototype.density=function(){var f=this._size[0],p=this._size[1];return f!==0&&p!==0?this._index.length/(f*p):0},i.prototype.subset=function(f,p,v){if(!this._values)throw new Error("Cannot invoke subset on a Pattern only matrix");switch(arguments.length){case 1:return a(this,f);case 2:case 3:return l(this,f,p,v);default:throw new SyntaxError("Wrong number of arguments")}};function a(f,p){if(!ma(p))throw new TypeError("Invalid index");var v=p.isScalar();if(v)return f.get(p.min());var M=p.size();if(M.length!==f._size.length)throw new ce(M.length,f._size.length);var _,w,D,b,C=p.min(),x=p.max();for(_=0,w=f._size.length;_<w;_++)ae(C[_],f._size[_]),ae(x[_],f._size[_]);var S=f._values,F=f._index,U=f._ptr,k=p.dimension(0),G=p.dimension(1),z=[],Y=[];k.forEach(function(rt,tt){Y[rt]=tt[0],z[rt]=!0});var X=S?[]:void 0,J=[],I=[];return G.forEach(function(rt){for(I.push(J.length),D=U[rt],b=U[rt+1];D<b;D++)_=F[D],z[_]===!0&&(J.push(Y[_]),X&&X.push(S[D]))}),I.push(J.length),new i({values:X,index:J,ptr:I,size:M,datatype:f._datatype})}function l(f,p,v,M){if(!p||p.isIndex!==!0)throw new TypeError("Invalid index");var _=p.size(),w=p.isScalar(),D;if(Xe(v)?(D=v.size(),v=v.toArray()):D=wi(v),w){if(D.length!==0)throw new TypeError("Scalar expected");f.set(p.min(),v,M)}else{if(_.length!==1&&_.length!==2)throw new ce(_.length,f._size.length,"<");if(D.length<_.length){for(var b=0,C=0;_[b]===1&&D[b]===1;)b++;for(;_[b]===1;)C++,b++;v=sl(v,_.length,C,D)}if(!_s(_,D))throw new ce(_,D,">");if(_.length===1){var x=p.dimension(0);x.forEach(function(U,k){ae(U),f.set([U,0],v[k[0]],M)})}else{var S=p.dimension(0),F=p.dimension(1);S.forEach(function(U,k){ae(U),F.forEach(function(G,z){ae(G),f.set([U,G],v[k[0]][z[0]],M)})})}}return f}i.prototype.get=function(f){if(!oe(f))throw new TypeError("Array expected");if(f.length!==this._size.length)throw new ce(f.length,this._size.length);if(!this._values)throw new Error("Cannot invoke get on a Pattern only matrix");var p=f[0],v=f[1];ae(p,this._size[0]),ae(v,this._size[1]);var M=d(p,this._ptr[v],this._ptr[v+1],this._index);return M<this._ptr[v+1]&&this._index[M]===p?this._values[M]:0},i.prototype.set=function(f,p,v){if(!oe(f))throw new TypeError("Array expected");if(f.length!==this._size.length)throw new ce(f.length,this._size.length);if(!this._values)throw new Error("Cannot invoke set on a Pattern only matrix");var M=f[0],_=f[1],w=this._size[0],D=this._size[1],b=e,C=0;Mn(this._datatype)&&(b=t.find(e,[this._datatype,this._datatype])||e,C=t.convert(0,this._datatype)),(M>w-1||_>D-1)&&(h(this,Math.max(M+1,w),Math.max(_+1,D),v),w=this._size[0],D=this._size[1]),ae(M,w),ae(_,D);var x=d(M,this._ptr[_],this._ptr[_+1],this._index);return x<this._ptr[_+1]&&this._index[x]===M?b(p,C)?c(x,_,this._values,this._index,this._ptr):this._values[x]=p:b(p,C)||u(x,M,_,p,this._values,this._index,this._ptr),this};function d(f,p,v,M){if(v-p===0)return v;for(var _=p;_<v;_++)if(M[_]===f)return _;return p}function c(f,p,v,M,_){v.splice(f,1),M.splice(f,1);for(var w=p+1;w<_.length;w++)_[w]--}function u(f,p,v,M,_,w,D){_.splice(f,0,M),w.splice(f,0,p);for(var b=v+1;b<D.length;b++)D[b]++}i.prototype.resize=function(f,p,v){if(!vs(f))throw new TypeError("Array or Matrix expected");var M=f.valueOf().map(w=>Array.isArray(w)&&w.length===1?w[0]:w);if(M.length!==2)throw new Error("Only two dimensions matrix are supported");M.forEach(function(w){if(!de(w)||!Le(w)||w<0)throw new TypeError("Invalid size, must contain positive integers (size: "+qe(M)+")")});var _=v?this.clone():this;return h(_,M[0],M[1],p)};function h(f,p,v,M){var _=M||0,w=e,D=0;Mn(f._datatype)&&(w=t.find(e,[f._datatype,f._datatype])||e,D=t.convert(0,f._datatype),_=t.convert(_,f._datatype));var b=!w(_,D),C=f._size[0],x=f._size[1],S,F,U;if(v>x){for(F=x;F<v;F++)if(f._ptr[F]=f._values.length,b)for(S=0;S<C;S++)f._values.push(_),f._index.push(S);f._ptr[v]=f._values.length}else v<x&&(f._ptr.splice(v+1,x-v),f._values.splice(f._ptr[v],f._values.length),f._index.splice(f._ptr[v],f._index.length));if(x=v,p>C){if(b){var k=0;for(F=0;F<x;F++){f._ptr[F]=f._ptr[F]+k,U=f._ptr[F+1]+k;var G=0;for(S=C;S<p;S++,G++)f._values.splice(U+G,0,_),f._index.splice(U+G,0,S),k++}f._ptr[x]=f._values.length}}else if(p<C){var z=0;for(F=0;F<x;F++){f._ptr[F]=f._ptr[F]-z;var Y=f._ptr[F],X=f._ptr[F+1]-z;for(U=Y;U<X;U++)S=f._index[U],S>p-1&&(f._values.splice(U,1),f._index.splice(U,1),z++)}f._ptr[F]=f._values.length}return f._size[0]=p,f._size[1]=v,f}i.prototype.reshape=function(f,p){if(!oe(f))throw new TypeError("Array expected");if(f.length!==2)throw new Error("Sparse matrices can only be reshaped in two dimensions");f.forEach(function(rt){if(!de(rt)||!Le(rt)||rt<=-2||rt===0)throw new TypeError("Invalid size, must contain positive integers or -1 (size: "+qe(f)+")")});var v=this._size[0]*this._size[1];f=ga(f,v);var M=f[0]*f[1];if(v!==M)throw new Error("Reshaping sparse matrix will result in the wrong number of elements");var _=p?this.clone():this;if(this._size[0]===f[0]&&this._size[1]===f[1])return _;for(var w=[],D=0;D<_._ptr.length;D++)for(var b=0;b<_._ptr[D+1]-_._ptr[D];b++)w.push(D);for(var C=_._values.slice(),x=_._index.slice(),S=0;S<_._index.length;S++){var F=x[S],U=w[S],k=F*_._size[1]+U;w[S]=k%f[1],x[S]=Math.floor(k/f[1])}_._values.length=0,_._index.length=0,_._ptr.length=f[1]+1,_._size=f.slice();for(var G=0;G<_._ptr.length;G++)_._ptr[G]=0;for(var z=0;z<C.length;z++){var Y=x[z],X=w[z],J=C[z],I=d(Y,_._ptr[X],_._ptr[X+1],_._index);u(I,Y,X,J,_._values,_._index,_._ptr)}return _},i.prototype.clone=function(){var f=new i({values:this._values?Pe(this._values):void 0,index:Pe(this._index),ptr:Pe(this._ptr),size:Pe(this._size),datatype:this._datatype});return f},i.prototype.size=function(){return this._size.slice(0)},i.prototype.map=function(f,p){if(!this._values)throw new Error("Cannot invoke map on a Pattern only matrix");var v=this,M=this._size[0],_=this._size[1],w=Ml(f),D=function(C,x,S){return w===1?f(C):w===2?f(C,[x,S]):f(C,[x,S],v)};return m(this,0,M-1,0,_-1,D,p)};function m(f,p,v,M,_,w,D){var b=[],C=[],x=[],S=e,F=0;Mn(f._datatype)&&(S=t.find(e,[f._datatype,f._datatype])||e,F=t.convert(0,f._datatype));for(var U=function(vt,B,L){vt=w(vt,B,L),S(vt,F)||(b.push(vt),C.push(B))},k=M;k<=_;k++){x.push(b.length);var G=f._ptr[k],z=f._ptr[k+1];if(D)for(var Y=G;Y<z;Y++){var X=f._index[Y];X>=p&&X<=v&&U(f._values[Y],X-p,k-M)}else{for(var J={},I=G;I<z;I++){var rt=f._index[I];J[rt]=f._values[I]}for(var tt=p;tt<=v;tt++){var it=tt in J?J[tt]:0;U(it,tt-p,k-M)}}}return x.push(b.length),new i({values:b,index:C,ptr:x,size:[v-p+1,_-M+1]})}i.prototype.forEach=function(f,p){if(!this._values)throw new Error("Cannot invoke forEach on a Pattern only matrix");for(var v=this,M=this._size[0],_=this._size[1],w=0;w<_;w++){var D=this._ptr[w],b=this._ptr[w+1];if(p)for(var C=D;C<b;C++){var x=this._index[C];f(this._values[C],[x,w],v)}else{for(var S={},F=D;F<b;F++){var U=this._index[F];S[U]=this._values[F]}for(var k=0;k<M;k++){var G=k in S?S[k]:0;f(G,[k,w],v)}}}},i.prototype[Symbol.iterator]=function*(){if(!this._values)throw new Error("Cannot iterate a Pattern only matrix");for(var f=this._size[1],p=0;p<f;p++)for(var v=this._ptr[p],M=this._ptr[p+1],_=v;_<M;_++){var w=this._index[_];yield{value:this._values[_],index:[w,p]}}},i.prototype.toArray=function(){return g(this._values,this._index,this._ptr,this._size,!0)},i.prototype.valueOf=function(){return g(this._values,this._index,this._ptr,this._size,!1)};function g(f,p,v,M,_){var w=M[0],D=M[1],b=[],C,x;for(C=0;C<w;C++)for(b[C]=[],x=0;x<D;x++)b[C][x]=0;for(x=0;x<D;x++)for(var S=v[x],F=v[x+1],U=S;U<F;U++)C=p[U],b[C][x]=f?_?Pe(f[U]):f[U]:1;return b}return i.prototype.format=function(f){for(var p=this._size[0],v=this._size[1],M=this.density(),_="Sparse Matrix ["+qe(p,f)+" x "+qe(v,f)+"] density: "+qe(M,f)+`
`,w=0;w<v;w++)for(var D=this._ptr[w],b=this._ptr[w+1],C=D;C<b;C++){var x=this._index[C];_+=`
    (`+qe(x,f)+", "+qe(w,f)+") ==> "+(this._values?qe(this._values[C],f):"X")}return _},i.prototype.toString=function(){return qe(this.toArray())},i.prototype.toJSON=function(){return{mathjs:"SparseMatrix",values:this._values,index:this._index,ptr:this._ptr,size:this._size,datatype:this._datatype}},i.prototype.diagonal=function(f){if(f){if(gn(f)&&(f=f.toNumber()),!de(f)||!Le(f))throw new TypeError("The parameter k must be an integer number")}else f=0;var p=f>0?f:0,v=f<0?-f:0,M=this._size[0],_=this._size[1],w=Math.min(M-v,_-p),D=[],b=[],C=[];C[0]=0;for(var x=p;x<_&&D.length<w;x++)for(var S=this._ptr[x],F=this._ptr[x+1],U=S;U<F;U++){var k=this._index[U];if(k===x-p+v){D.push(this._values[U]),b[D.length-1]=k-v;break}}return C.push(D.length),new i({values:D,index:b,ptr:C,size:[w,1]})},i.fromJSON=function(f){return new i(f)},i.diagonal=function(f,p,v,M,_){if(!oe(f))throw new TypeError("Array expected, size parameter");if(f.length!==2)throw new Error("Only two dimensions matrix are supported");if(f=f.map(function(rt){if(gn(rt)&&(rt=rt.toNumber()),!de(rt)||!Le(rt)||rt<1)throw new Error("Size values must be positive integers");return rt}),v){if(gn(v)&&(v=v.toNumber()),!de(v)||!Le(v))throw new TypeError("The parameter k must be an integer number")}else v=0;var w=e,D=0;Mn(_)&&(w=t.find(e,[_,_])||e,D=t.convert(0,_));var b=v>0?v:0,C=v<0?-v:0,x=f[0],S=f[1],F=Math.min(x-C,S-b),U;if(oe(p)){if(p.length!==F)throw new Error("Invalid value array length");U=function(tt){return p[tt]}}else if(Xe(p)){var k=p.size();if(k.length!==1||k[0]!==F)throw new Error("Invalid matrix length");U=function(tt){return p.get([tt])}}else U=function(){return p};for(var G=[],z=[],Y=[],X=0;X<S;X++){Y.push(G.length);var J=X-b;if(J>=0&&J<F){var I=U(J);w(I,D)||(z.push(J+C),G.push(I))}}return Y.push(G.length),new i({values:G,index:z,ptr:Y,size:[x,S]})},i.prototype.swapRows=function(f,p){if(!de(f)||!Le(f)||!de(p)||!Le(p))throw new Error("Row index must be positive integers");if(this._size.length!==2)throw new Error("Only two dimensional matrix is supported");return ae(f,this._size[0]),ae(p,this._size[0]),i._swapRows(f,p,this._size[1],this._values,this._index,this._ptr),this},i._forEachRow=function(f,p,v,M,_){for(var w=M[f],D=M[f+1],b=w;b<D;b++)_(v[b],p[b])},i._swapRows=function(f,p,v,M,_,w){for(var D=0;D<v;D++){var b=w[D],C=w[D+1],x=d(f,b,C,_),S=d(p,b,C,_);if(x<C&&S<C&&_[x]===f&&_[S]===p){if(M){var F=M[x];M[x]=M[S],M[S]=F}continue}if(x<C&&_[x]===f&&(S>=C||_[S]!==p)){var U=M?M[x]:void 0;_.splice(S,0,p),M&&M.splice(S,0,U),_.splice(S<=x?x+1:x,1),M&&M.splice(S<=x?x+1:x,1);continue}if(S<C&&_[S]===p&&(x>=C||_[x]!==f)){var k=M?M[S]:void 0;_.splice(x,0,f),M&&M.splice(x,0,k),_.splice(x<=S?S+1:S,1),M&&M.splice(x<=S?S+1:S,1)}}},i},{isClass:!0}),hx="complex",fx=["typed","Complex"],dx=ge(hx,fx,r=>{var{typed:t,Complex:e}=r;return t("complex",{"":function(){return e.ZERO},number:function(i){return new e(i,0)},"number, number":function(i,s){return new e(i,s)},"BigNumber, BigNumber":function(i,s){return new e(i.toNumber(),s.toNumber())},Fraction:function(i){return new e(i.valueOf(),0)},Complex:function(i){return i.clone()},string:function(i){return e(i)},null:function(i){return e(0)},Object:function(i){if("re"in i&&"im"in i)return new e(i.re,i.im);if("r"in i&&"phi"in i||"abs"in i&&"arg"in i)return new e(i);throw new Error("Expected object with properties (re and im) or (r and phi) or (abs and arg)")},"Array | Matrix":t.referToSelf(n=>i=>_a(i,n))})}),oc="matrix",px=["typed","Matrix","DenseMatrix","SparseMatrix"],mx=ge(oc,px,r=>{var{typed:t,Matrix:e,DenseMatrix:n,SparseMatrix:i}=r;return t(oc,{"":function(){return s([])},string:function(a){return s([],a)},"string, string":function(a,l){return s([],a,l)},Array:function(a){return s(a)},Matrix:function(a){return s(a,a.storage())},"Array | Matrix, string":s,"Array | Matrix, string, string":s});function s(o,a,l){if(a==="dense"||a==="default"||a===void 0)return new n(o,l);if(a==="sparse")return new i(o,l);throw new TypeError("Unknown matrix type "+JSON.stringify(a)+".")}}),ac="addScalar",gx=["typed"],vx=ge(ac,gx,r=>{var{typed:t}=r;return t(ac,{"number, number":bl,"Complex, Complex":function(n,i){return n.add(i)},"BigNumber, BigNumber":function(n,i){return n.plus(i)},"Fraction, Fraction":function(n,i){return n.add(i)},"Unit, Unit":t.referToSelf(e=>(n,i)=>{if(n.value===null||n.value===void 0)throw new Error("Parameter x contains a unit with undefined value");if(i.value===null||i.value===void 0)throw new Error("Parameter y contains a unit with undefined value");if(!n.equalBase(i))throw new Error("Units do not match");var s=n.clone();return s.value=t.find(e,[s.valueType(),i.valueType()])(s.value,i.value),s.fixPrefix=!1,s})})}),_x="matAlgo11xS0s",xx=["typed","equalScalar"],yx=ge(_x,xx,r=>{var{typed:t,equalScalar:e}=r;return function(i,s,o,a){var l=i._values,d=i._index,c=i._ptr,u=i._size,h=i._datatype;if(!l)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var m=u[0],g=u[1],f,p=e,v=0,M=o;typeof h=="string"&&(f=h,p=t.find(e,[f,f]),v=t.convert(0,f),s=t.convert(s,f),M=t.find(o,[f,f]));for(var _=[],w=[],D=[],b=0;b<g;b++){D[b]=w.length;for(var C=c[b],x=c[b+1],S=C;S<x;S++){var F=d[S],U=a?M(s,l[S]):M(l[S],s);p(U,v)||(w.push(F),_.push(U))}}return D[g]=w.length,i.createSparseMatrix({values:_,index:w,ptr:D,size:[m,g],datatype:f})}}),wx="matAlgo14xDs",Mx=["typed"],Dx=ge(wx,Mx,r=>{var{typed:t}=r;return function(i,s,o,a){var l=i._data,d=i._size,c=i._datatype,u,h=o;typeof c=="string"&&(u=c,s=t.convert(s,u),h=t.find(o,[u,u]));var m=d.length>0?e(h,0,d,d[0],l,s,a):[];return i.createDenseMatrix({data:m,size:Pe(d),datatype:u})};function e(n,i,s,o,a,l,d){var c=[];if(i===s.length-1)for(var u=0;u<o;u++)c[u]=d?n(l,a[u]):n(a[u],l);else for(var h=0;h<o;h++)c[h]=e(n,i+1,s,s[i+1],a[h],l,d);return c}}),uc="exp",bx=["typed"],Sx=ge(uc,bx,r=>{var{typed:t}=r;return t(uc,{number:El,Complex:function(n){return n.exp()},BigNumber:function(n){return n.exp()}})}),Ex="multiplyScalar",Ax=["typed"],Cx=ge(Ex,Ax,r=>{var{typed:t}=r;return t("multiplyScalar",{"number, number":Sl,"Complex, Complex":function(n,i){return n.mul(i)},"BigNumber, BigNumber":function(n,i){return n.times(i)},"Fraction, Fraction":function(n,i){return n.mul(i)},"number | Fraction | BigNumber | Complex, Unit":(e,n)=>n.multiply(e),"Unit, number | Fraction | BigNumber | Complex | Unit":(e,n)=>e.multiply(n)})}),cc="multiply",Tx=["typed","matrix","addScalar","multiplyScalar","equalScalar","dot"],Fx=ge(cc,Tx,r=>{var{typed:t,matrix:e,addScalar:n,multiplyScalar:i,equalScalar:s,dot:o}=r,a=yx({typed:t,equalScalar:s}),l=Dx({typed:t});function d(D,b){switch(D.length){case 1:switch(b.length){case 1:if(D[0]!==b[0])throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");break;case 2:if(D[0]!==b[0])throw new RangeError("Dimension mismatch in multiplication. Vector length ("+D[0]+") must match Matrix rows ("+b[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+b.length+" dimensions)")}break;case 2:switch(b.length){case 1:if(D[1]!==b[0])throw new RangeError("Dimension mismatch in multiplication. Matrix columns ("+D[1]+") must match Vector length ("+b[0]+")");break;case 2:if(D[1]!==b[0])throw new RangeError("Dimension mismatch in multiplication. Matrix A columns ("+D[1]+") must match Matrix B rows ("+b[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+b.length+" dimensions)")}break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has "+D.length+" dimensions)")}}function c(D,b,C){if(C===0)throw new Error("Cannot multiply two empty vectors");return o(D,b)}function u(D,b){if(b.storage()!=="dense")throw new Error("Support for SparseMatrix not implemented");return h(D,b)}function h(D,b){var C=D._data,x=D._size,S=D._datatype,F=b._data,U=b._size,k=b._datatype,G=x[0],z=U[1],Y,X=n,J=i;S&&k&&S===k&&typeof S=="string"&&(Y=S,X=t.find(n,[Y,Y]),J=t.find(i,[Y,Y]));for(var I=[],rt=0;rt<z;rt++){for(var tt=J(C[0],F[0][rt]),it=1;it<G;it++)tt=X(tt,J(C[it],F[it][rt]));I[rt]=tt}return D.createDenseMatrix({data:I,size:[z],datatype:Y})}var m=t("_multiplyMatrixVector",{"DenseMatrix, any":f,"SparseMatrix, any":M}),g=t("_multiplyMatrixMatrix",{"DenseMatrix, DenseMatrix":p,"DenseMatrix, SparseMatrix":v,"SparseMatrix, DenseMatrix":_,"SparseMatrix, SparseMatrix":w});function f(D,b){var C=D._data,x=D._size,S=D._datatype,F=b._data,U=b._datatype,k=x[0],G=x[1],z,Y=n,X=i;S&&U&&S===U&&typeof S=="string"&&(z=S,Y=t.find(n,[z,z]),X=t.find(i,[z,z]));for(var J=[],I=0;I<k;I++){for(var rt=C[I],tt=X(rt[0],F[0]),it=1;it<G;it++)tt=Y(tt,X(rt[it],F[it]));J[I]=tt}return D.createDenseMatrix({data:J,size:[k],datatype:z})}function p(D,b){var C=D._data,x=D._size,S=D._datatype,F=b._data,U=b._size,k=b._datatype,G=x[0],z=x[1],Y=U[1],X,J=n,I=i;S&&k&&S===k&&typeof S=="string"&&(X=S,J=t.find(n,[X,X]),I=t.find(i,[X,X]));for(var rt=[],tt=0;tt<G;tt++){var it=C[tt];rt[tt]=[];for(var et=0;et<Y;et++){for(var vt=I(it[0],F[0][et]),B=1;B<z;B++)vt=J(vt,I(it[B],F[B][et]));rt[tt][et]=vt}}return D.createDenseMatrix({data:rt,size:[G,Y],datatype:X})}function v(D,b){var C=D._data,x=D._size,S=D._datatype,F=b._values,U=b._index,k=b._ptr,G=b._size,z=b._datatype;if(!F)throw new Error("Cannot multiply Dense Matrix times Pattern only Matrix");var Y=x[0],X=G[1],J,I=n,rt=i,tt=s,it=0;S&&z&&S===z&&typeof S=="string"&&(J=S,I=t.find(n,[J,J]),rt=t.find(i,[J,J]),tt=t.find(s,[J,J]),it=t.convert(0,J));for(var et=[],vt=[],B=[],L=b.createSparseMatrix({values:et,index:vt,ptr:B,size:[Y,X],datatype:J}),A=0;A<X;A++){B[A]=vt.length;var E=k[A],H=k[A+1];if(H>E)for(var K=0,V=0;V<Y;V++){for(var mt=V+1,ft=void 0,ht=E;ht<H;ht++){var ct=U[ht];K!==mt?(ft=rt(C[V][ct],F[ht]),K=mt):ft=I(ft,rt(C[V][ct],F[ht]))}K===mt&&!tt(ft,it)&&(vt.push(V),et.push(ft))}}return B[X]=vt.length,L}function M(D,b){var C=D._values,x=D._index,S=D._ptr,F=D._datatype;if(!C)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var U=b._data,k=b._datatype,G=D._size[0],z=b._size[0],Y=[],X=[],J=[],I,rt=n,tt=i,it=s,et=0;F&&k&&F===k&&typeof F=="string"&&(I=F,rt=t.find(n,[I,I]),tt=t.find(i,[I,I]),it=t.find(s,[I,I]),et=t.convert(0,I));var vt=[],B=[];J[0]=0;for(var L=0;L<z;L++){var A=U[L];if(!it(A,et))for(var E=S[L],H=S[L+1],K=E;K<H;K++){var V=x[K];B[V]?vt[V]=rt(vt[V],tt(A,C[K])):(B[V]=!0,X.push(V),vt[V]=tt(A,C[K]))}}for(var mt=X.length,ft=0;ft<mt;ft++){var ht=X[ft];Y[ft]=vt[ht]}return J[1]=X.length,D.createSparseMatrix({values:Y,index:X,ptr:J,size:[G,1],datatype:I})}function _(D,b){var C=D._values,x=D._index,S=D._ptr,F=D._datatype;if(!C)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var U=b._data,k=b._datatype,G=D._size[0],z=b._size[0],Y=b._size[1],X,J=n,I=i,rt=s,tt=0;F&&k&&F===k&&typeof F=="string"&&(X=F,J=t.find(n,[X,X]),I=t.find(i,[X,X]),rt=t.find(s,[X,X]),tt=t.convert(0,X));for(var it=[],et=[],vt=[],B=D.createSparseMatrix({values:it,index:et,ptr:vt,size:[G,Y],datatype:X}),L=[],A=[],E=0;E<Y;E++){vt[E]=et.length;for(var H=E+1,K=0;K<z;K++){var V=U[K][E];if(!rt(V,tt))for(var mt=S[K],ft=S[K+1],ht=mt;ht<ft;ht++){var ct=x[ht];A[ct]!==H?(A[ct]=H,et.push(ct),L[ct]=I(V,C[ht])):L[ct]=J(L[ct],I(V,C[ht]))}}for(var _t=vt[E],bt=et.length,Et=_t;Et<bt;Et++){var $=et[Et];it[Et]=L[$]}}return vt[Y]=et.length,B}function w(D,b){var C=D._values,x=D._index,S=D._ptr,F=D._datatype,U=b._values,k=b._index,G=b._ptr,z=b._datatype,Y=D._size[0],X=b._size[1],J=C&&U,I,rt=n,tt=i;F&&z&&F===z&&typeof F=="string"&&(I=F,rt=t.find(n,[I,I]),tt=t.find(i,[I,I]));for(var it=J?[]:void 0,et=[],vt=[],B=D.createSparseMatrix({values:it,index:et,ptr:vt,size:[Y,X],datatype:I}),L=J?[]:void 0,A=[],E,H,K,V,mt,ft,ht,ct,_t=0;_t<X;_t++){vt[_t]=et.length;var bt=_t+1;for(mt=G[_t],ft=G[_t+1],V=mt;V<ft;V++)if(ct=k[V],J)for(H=S[ct],K=S[ct+1],E=H;E<K;E++)ht=x[E],A[ht]!==bt?(A[ht]=bt,et.push(ht),L[ht]=tt(U[V],C[E])):L[ht]=rt(L[ht],tt(U[V],C[E]));else for(H=S[ct],K=S[ct+1],E=H;E<K;E++)ht=x[E],A[ht]!==bt&&(A[ht]=bt,et.push(ht));if(J)for(var Et=vt[_t],$=et.length,N=Et;N<$;N++){var Tt=et[N];it[N]=L[Tt]}}return vt[X]=et.length,B}return t(cc,i,{"Array, Array":t.referTo("Matrix, Matrix",D=>(b,C)=>{d(wi(b),wi(C));var x=D(e(b),e(C));return Xe(x)?x.valueOf():x}),"Matrix, Matrix":function(b,C){var x=b.size(),S=C.size();return d(x,S),x.length===1?S.length===1?c(b,C,x[0]):u(b,C):S.length===1?m(b,C):g(b,C)},"Matrix, Array":t.referTo("Matrix,Matrix",D=>(b,C)=>D(b,e(C))),"Array, Matrix":t.referToSelf(D=>(b,C)=>D(e(b,C.storage()),C)),"SparseMatrix, any":function(b,C){return a(b,C,i,!1)},"DenseMatrix, any":function(b,C){return l(b,C,i,!1)},"any, SparseMatrix":function(b,C){return a(C,b,i,!0)},"any, DenseMatrix":function(b,C){return l(C,b,i,!0)},"Array, any":function(b,C){return l(e(b),C,i,!1).valueOf()},"any, Array":function(b,C){return l(e(C),b,i,!0).valueOf()},"any, any":i,"any, any, ...any":t.referToSelf(D=>(b,C,x)=>{for(var S=D(b,C),F=0;F<x.length;F++)S=D(S,x[F]);return S})})}),lc="conj",Px=["typed"],Lx=ge(lc,Px,r=>{var{typed:t}=r;return t(lc,{"number | BigNumber | Fraction":e=>e,Complex:e=>e.conjugate(),"Array | Matrix":t.referToSelf(e=>n=>_a(n,e))})});function Rx(){throw new Error('No "matrix" implementation available')}var hc="size",Nx=["typed","config","?matrix"],Ix=ge(hc,Nx,r=>{var{typed:t,config:e,matrix:n}=r;return t(hc,{Matrix:function(s){return s.create(s.size())},Array:wi,string:function(s){return e.matrix==="Array"?[s.length]:n([s.length])},"number | Complex | BigNumber | Unit | boolean | null":function(s){return e.matrix==="Array"?[]:n?n([]):Rx()}})}),fc="dot",zx=["typed","addScalar","multiplyScalar","conj","size"],Bx=ge(fc,zx,r=>{var{typed:t,addScalar:e,multiplyScalar:n,conj:i,size:s}=r;return t(fc,{"Array | DenseMatrix, Array | DenseMatrix":a,"SparseMatrix, SparseMatrix":l});function o(c,u){var h=d(c),m=d(u),g,f;if(h.length===1)g=h[0];else if(h.length===2&&h[1]===1)g=h[0];else throw new RangeError("Expected a column vector, instead got a matrix of size ("+h.join(", ")+")");if(m.length===1)f=m[0];else if(m.length===2&&m[1]===1)f=m[0];else throw new RangeError("Expected a column vector, instead got a matrix of size ("+m.join(", ")+")");if(g!==f)throw new RangeError("Vectors must have equal length ("+g+" != "+f+")");if(g===0)throw new RangeError("Cannot calculate the dot product of empty vectors");return g}function a(c,u){var h=o(c,u),m=Xe(c)?c._data:c,g=Xe(c)?c._datatype:void 0,f=Xe(u)?u._data:u,p=Xe(u)?u._datatype:void 0,v=d(c).length===2,M=d(u).length===2,_=e,w=n;if(g&&p&&g===p&&typeof g=="string"){var D=g;_=t.find(e,[D,D]),w=t.find(n,[D,D])}if(!v&&!M){for(var b=w(i(m[0]),f[0]),C=1;C<h;C++)b=_(b,w(i(m[C]),f[C]));return b}if(!v&&M){for(var x=w(i(m[0]),f[0][0]),S=1;S<h;S++)x=_(x,w(i(m[S]),f[S][0]));return x}if(v&&!M){for(var F=w(i(m[0][0]),f[0]),U=1;U<h;U++)F=_(F,w(i(m[U][0]),f[U]));return F}if(v&&M){for(var k=w(i(m[0][0]),f[0][0]),G=1;G<h;G++)k=_(k,w(i(m[G][0]),f[G][0]));return k}}function l(c,u){o(c,u);for(var h=c._index,m=c._values,g=u._index,f=u._values,p=0,v=e,M=n,_=0,w=0;_<h.length&&w<g.length;){var D=h[_],b=g[w];if(D<b){_++;continue}if(D>b){w++;continue}D===b&&(p=v(p,M(m[_],f[w])),_++,w++)}return p}function d(c){return Xe(c)?c.size():s(c)}}),Ox=G_({config:Ps}),Al=q_({}),Ux=Y_({}),xa=K_({}),Cl=ex({Matrix:xa}),xn=Wv({BigNumber:Ox,Complex:Al,DenseMatrix:Cl,Fraction:Ux}),Tl=vx({typed:xn}),Yn=dx({Complex:Al,typed:xn}),kx=Lx({typed:xn}),Fl=ax({config:Ps,typed:xn}),Qo=Sx({typed:xn}),Pl=Cx({typed:xn}),Gx=lx({Matrix:xa,equalScalar:Fl,typed:xn}),Ll=mx({DenseMatrix:Cl,Matrix:xa,SparseMatrix:Gx,typed:xn}),Vx=Ix({matrix:Ll,config:Ps,typed:xn}),Hx=Bx({addScalar:Tl,conj:kx,multiplyScalar:Pl,size:Vx,typed:xn}),Es=Fx({addScalar:Tl,dot:Hx,equalScalar:Fl,matrix:Ll,multiplyScalar:Pl,typed:xn});class dc extends me{constructor(t=(i,s,o)=>o.set(i,s,Math.cos(i)*Math.sin(s)),e=8,n=8){super(),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n};const i=[],s=[],o=[],a=[],l=1e-5,d=new q,c=new q,u=new q,h=new q,m=new q,g=e+1;for(let f=0;f<=n;f++){const p=f/n;for(let v=0;v<=e;v++){const M=v/e;t(M,p,c),s.push(c.x,c.y,c.z),M-l>=0?(t(M-l,p,u),h.subVectors(c,u)):(t(M+l,p,u),h.subVectors(u,c)),p-l>=0?(t(M,p-l,u),m.subVectors(c,u)):(t(M,p+l,u),m.subVectors(u,c)),d.crossVectors(h,m).normalize(),o.push(d.x,d.y,d.z),a.push(M,p)}}for(let f=0;f<n;f++)for(let p=0;p<e;p++){const v=f*g+p,M=f*g+p+1,_=(f+1)*g+p+1,w=(f+1)*g+p;i.push(v,M,w),i.push(M,_,w)}this.setIndex(i),this.setAttribute("position",new Qt(s,3)),this.setAttribute("normal",new Qt(o,3)),this.setAttribute("uv",new Qt(a,2))}}function Rl(...r){return r.map(t=>[t])}function Wx(r){const t=Math.sin(r/2),e=Math.cos(r/2);return[[e,-t],[t,e]]}function qx(r){return[[Qo(Yn(0,-r/2)),0],[0,Qo(Yn(0,r/2))]]}Yn(0,1);const pc=200,ki=new q,pr=new q;class Xx extends Te{radius=.05;length=2;freq=3;polarization=Rl(Yn(1,0),Yn(0,0));phase=0;mat=new Mg({color:new Xt("#049ef4"),side:Rr,fog:!0});mesh=new Ve(new dc(void 0,pc),this.mat);constructor(){super(),this.add(this.mesh),this.mesh.onBeforeRender=(t,e,n,i)=>{const s=new dc((l,d,c)=>{const u=this.freq*(l*2*Math.PI-this.phase),h=Qo(Yn(0,u)),m=Es(h,this.polarization[0][0]),g=Es(h,this.polarization[1][0]);c.x=m.re,c.y=g.re,c.z=(l-.5)*2*this.length;const f=-m.im,p=-g.im;ki.set(f,p,1),pr.set(1,0,0),pr.cross(ki).normalize(),ki.cross(pr).normalize();const v=d*2*Math.PI;ki.multiplyScalar(Math.cos(v)),pr.multiplyScalar(Math.sin(v)),ki.add(pr).multiplyScalar(this.radius),c.add(ki)},pc),o=s.getAttribute("position").array,a=i.getAttribute("position").array;for(let l=0;l<a.length;l++)a[l]=o[l];s.dispose(),i.getAttribute("position").needsUpdate=!0}}}const Zx=new q(1,0,0),mc=new q(0,1,0),jx=new q(0,0,1),ls=new q;class Yx{renderer;camera;wave=new Xx;get domElement(){return this.renderer.domElement}constructor(t){const e=new Uc;this.camera=new Je(70,window.innerWidth/window.innerHeight,.01,10),this.camera.position.x=-1.5,this.camera.position.y=1.5,this.camera.position.z=2,this.renderer=new aa({antialias:!0}),this.renderer.setSize(window.innerWidth,window.innerHeight-1);const n=new Ag(16777147,526368,1),i=new Cg(4210752);e.fog=new ua(0,.2),e.add(n),e.add(i),e.add(this.wave),e.add(new Lg(1));const s=Rl(Yn(1,0),Yn(0,0));this.renderer.setAnimationLoop(o=>{ls.copy(t).projectOnPlane(mc);let a=jx.angleTo(ls);Zx.dot(ls)<0&&(a=-a);let l=mc.angleTo(t);ls.dot(t)<0&&(l=-l);const d=Es(qx(a),Wx(l)),c=a/2;this.wave.phase=o/5e3-c,this.wave.polarization=Es(d,s),this.renderer.render(e,this.camera)}),this.renderer.domElement.id="wave"}}const ya=new Og(300,300),ta=new Yx(ya.arrowDirection);document.body.appendChild(ya.domElement);document.body.appendChild(ta.domElement);ya.initControls();new Ng(ta.camera,ta.domElement);
